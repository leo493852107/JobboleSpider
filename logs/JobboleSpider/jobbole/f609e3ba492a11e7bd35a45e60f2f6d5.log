2017-06-04 21:37:33 [scrapy.utils.log] INFO: Scrapy 1.4.0 started (bot: JobboleSpider)
2017-06-04 21:37:33 [scrapy.utils.log] INFO: Overridden settings: {'SPIDER_MODULES': ['JobboleSpider.spiders'], 'NEWSPIDER_MODULE': 'JobboleSpider.spiders', 'BOT_NAME': 'JobboleSpider', 'LOG_FILE': 'logs/JobboleSpider/jobbole/f609e3ba492a11e7bd35a45e60f2f6d5.log', 'COOKIES_ENABLED': False}
2017-06-04 21:37:33 [scrapy.middleware] INFO: Enabled extensions:
['scrapy.extensions.corestats.CoreStats',
 'scrapy.extensions.telnet.TelnetConsole',
 'scrapy.extensions.memusage.MemoryUsage',
 'scrapy.extensions.logstats.LogStats']
2017-06-04 21:37:34 [scrapy.middleware] INFO: Enabled downloader middlewares:
['scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware',
 'scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware',
 'scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware',
 'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware',
 'scrapy.downloadermiddlewares.retry.RetryMiddleware',
 'scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware',
 'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware',
 'scrapy.downloadermiddlewares.redirect.RedirectMiddleware',
 'scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware',
 'scrapy.downloadermiddlewares.stats.DownloaderStats']
2017-06-04 21:37:34 [scrapy.middleware] INFO: Enabled spider middlewares:
['scrapy.spidermiddlewares.httperror.HttpErrorMiddleware',
 'scrapy.spidermiddlewares.offsite.OffsiteMiddleware',
 'scrapy.spidermiddlewares.referer.RefererMiddleware',
 'scrapy.spidermiddlewares.urllength.UrlLengthMiddleware',
 'scrapy.spidermiddlewares.depth.DepthMiddleware']
2017-06-04 21:37:34 [scrapy.middleware] INFO: Enabled item pipelines:
['JobboleSpider.pipelines.ElasticsearchPipeline']
2017-06-04 21:37:34 [scrapy.core.engine] INFO: Spider opened
2017-06-04 21:37:34 [scrapy.extensions.logstats] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)
2017-06-04 21:37:34 [scrapy.extensions.telnet] DEBUG: Telnet console listening on 127.0.0.1:6023
2017-06-04 21:37:34 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/all-posts/> (referer: None)
2017-06-04 21:37:34 [scrapy.dupefilters] DEBUG: Filtered duplicate request: <GET http://blog.jobbole.com/111187/> - no more duplicates will be shown (see DUPEFILTER_DEBUG to show all duplicates)
2017-06-04 21:37:38 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111334/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:37:38 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:38 [urllib3.connectionpool] DEBUG: Starting new HTTP connection (1): localhost
2017-06-04 21:37:38 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 414
2017-06-04 21:37:38 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.023s]
2017-06-04 21:37:38 [elasticsearch] DEBUG: > 不要再争论代码风格了！
2017-06-04 21:37:38 [elasticsearch] DEBUG: < {"tokens":[{"token":"不要","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"再","start_offset":2,"end_offset":3,"type":"CN_CHAR","position":1},{"token":"争论","start_offset":3,"end_offset":5,"type":"CN_WORD","position":2},{"token":"代码","start_offset":5,"end_offset":7,"type":"CN_WORD","position":3},{"token":"风格","start_offset":7,"end_offset":9,"type":"CN_WORD","position":4}]}
2017-06-04 21:37:38 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:38 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 496
2017-06-04 21:37:38 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.004s]
2017-06-04 21:37:38 [elasticsearch] DEBUG: > 开发,Space,Tab,代码风格
2017-06-04 21:37:38 [elasticsearch] DEBUG: < {"tokens":[{"token":"开发","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"发","start_offset":1,"end_offset":2,"type":"CN_WORD","position":1},{"token":"space","start_offset":3,"end_offset":8,"type":"ENGLISH","position":2},{"token":"tab","start_offset":9,"end_offset":12,"type":"ENGLISH","position":3},{"token":"代码","start_offset":13,"end_offset":15,"type":"CN_WORD","position":4},{"token":"风格","start_offset":15,"end_offset":17,"type":"CN_WORD","position":5}]}
2017-06-04 21:37:38 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:38 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/2792df6fe68a57f7395b67b4550cd6c8 HTTP/1.1" 200 175
2017-06-04 21:37:38 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/2792df6fe68a57f7395b67b4550cd6c8 [status:200 request:0.061s]
2017-06-04 21:37:38 [elasticsearch] DEBUG: > {"thumb_up_num": 2, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111334/", "comment_num": 0, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - 周进林 翻译，黄利民 校稿。未经许可，禁止转载！英文出处：Bill Sourour。欢迎加入翻译组。【伯乐在线导读】：很多程序员喜欢争论代码风格。别否认哦，类似的话题总能吵起来。Bill Sourour 认为：代码风格没有绝对的对错，只要团队代码风格统一就行了。Bill 觉得比较安全的做法：① 通过工具自动规范代码风格；② 参照名声好的大公司使用的代码风格。\n\n\n用制表符（Tab）还是空格（Space）？\n在同一行中使用大括号，还是新起一行？\n每行是 80 个字符，还是 120 个？\n\n程序员都喜欢争论这类型的事情，制表符和空格的争论，甚至在 HBO 的《硅谷》中出现了。\n\n对于这些争论，在这篇文章中，我最后会给出一个明确的答案。\n在我的职业生涯早期，我也参与到了这些“圣战”中。我会阅读一些文章，来了解为什么这个规范是正确的，而另外一个完全是错的。然后趾高气扬地对其他与我争论的人说他们是错的，而我是正确的。\n寻找正确的答案，这花费了我多年的时间，并且我也找到了，但最终的答案就是……\n这些事情无关紧要！\n一致性很重要、可读性很重要！争论并强调某一个规范比另外一个规范好，都是一些无关紧要的事。\n在过去的 20 多年，我关注了各种语言规范。并遵循了不同语言的不同规范。但是，没有一个规范会减少我的 bug 数量，或者使我的代码效率更高。\n\n随着时间的推移，不使我犯错、整洁、格式化的代码，更易于改动和维护，这就是好的代码。\n想着如何把你的代码写的更漂亮，这并不是坏事，但执着于此，常常会把问题归根于此，并为自己的拖延找借口。\n实际上，我们如此拖延主要是因为编码时遇到了难题。并且这个问题对当时的我们来说很难解决–尤其是当我们首次遇到这种级别的难题时，我们会被这种复杂的问题吓到，导致我们怀疑自己没有这个能力去解决它。\n但如果是争论一些琐事，我们就会游刃有余、有安全感。因为在争论琐事的过程中我们的不自信 （perceived incompetence ）就不太可能暴露出来。\n争论一些琐碎的事情而逃避那些困难的问题是一种常见的现象，这里有大量著名的理论描述了这一现象。\n有一个最著名的理论就是帕金森琐碎定律 （Parkinson’s Law of Triviality），它描述了：一个组织中的成员往往会把过多的经历，花费在一些琐碎的事情上。\n帕金森用了一个虚构例子来解释了这个定律：在一个审核新核电站计划的委员会中，会员把主要的时间用于争论员工自行车棚使用什么材料，忽略了被提议的核电站计划本身，而这个恰恰是最重要、最复杂的问题。\n由于在这个经典的例子中使用了自行车棚来阐述问题，丹麦的开发者 Poul-Henning Kamp 创造了新的术语来描述这种现象，叫“自行车棚效应（bike shed effect）”，或者简单地叫“自行车棚（bike shedding）”。\n如果你从事软件开发，特别是你在社交媒体上与其他程序员闲聊时，你可能每天都会遇到类似“自行车棚”案例（bike-shedding）\n\n如果你发现自己正在线上或者线下中和程序员同事进行热烈的争论时，你应该记住 Sayre 定律：\n“在任何争论中，主观上的重要程度，往往和问题的实际重要程度成反比。\n作为一个顾问/咨询师，我在不同的客户之间奔波，他们都有自己的规则和习惯。因此，在很久之前我就坚定认为，成功的唯一方式就是，放弃琐碎的事情，专注有挑战的问题。把它应用到编码规范上，我就可以收获到我想要的东西，并且不会变得浮躁。\n如果你正在寻找一种属于自己的代码风格，我建议你先问自己两个问题：\n\n是否有现成的工具，只需简单操作，就可以自动按照你的代码风格规则，来格式化代码？\n这个工具以及它支持的代码风格规则是否有人在持续维护，或者是否有一些知名公司在用？ \n\n对于上面的两个问题，如果你的答案都是“是的”，那么你就可以放心用这个代码风格。就是这么简单。\n下面有一些代码格式化工具：\n\nDotNet Code Formatter\nJava: Google-Java-Format\nJavascript Standard Style (注意，这只是一个产品名，不是 JavaScript 官方的标准)\nPHP Coding Standards Fixer\nPython: Google’s YAPF\nRuby: Rubocop\n\n\r\n        \r\n        \r\n        \n    \n         2 赞\n         2 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：周进林\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            茫茫大海中的一枚程序猿，为了进化为一个高富帅人类而努力着。关注java、python、linux、vim等（新浪微博：@酒肉和尚--进林）        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  19 ·          \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 2, "title": "不要再争论代码风格了！", "front_image_url": ["http://wx1.sinaimg.cn/large/7cc829d3gy1fg5ow9eq5ej20bu08cgn9.jpg"], "suggest": [{"weight": 10, "input": ["争论", "不要", "代码", "风格"]}, {"weight": 7, "input": ["代码", "开发", "风格", "tab", "space"]}], "tags": "开发,Space,Tab,代码风格"}
2017-06-04 21:37:38 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"2792df6fe68a57f7395b67b4550cd6c8","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:37:38 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 2,
 'comment_num': 0,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/8zjl8">周进林</a> 翻译，<a '
            'href="http://www.jobbole.com/members/huanglimin">黄利民</a> '
            '校稿。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="https://medium.freecodecamp.com/the-100-correct-coding-style-guide-5b594a1655f0">Bill '
            'Sourour</a>。欢迎加入<a target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p>【伯乐在线导读】：很多程序员喜欢争论代码风格。别否认哦，类似的话题总能吵起来。Bill '
            'Sourour 认为：代码风格没有绝对的对错，只要团队代码风格统一就行了。Bill 觉得比较安全的做法：① '
            '通过工具自动规范代码风格；② 参照名声好的大公司使用的代码风格。</p>\n'
            '<hr>\n'
            '<ul>\n'
            '<li>用制表符（Tab）还是空格（Space）？</li>\n'
            '<li>在同一行中使用大括号，还是新起一行？</li>\n'
            '<li>每行是 80 个字符，还是 120 个？</li>\n'
            '</ul>\n'
            '<p>程序员都喜欢争论这类型的事情，制表符和空格的争论，甚至在 HBO 的《硅谷》中出现了。</p>\n'
            '<p><object width="600" height="420"><param name="movie" '
            'value="http://player.youku.com/player.php/sid/XMTYzMDQ3ODgxMg/v.swf"><param '
            'name="allowFullScreen" value="true"><param '
            'name="allowscriptaccess" value="never"><param '
            'name="allownetworking" value="internal"><param name="flashvars" '
            'value="isShowRelatedVideo=false&amp;showAd=0&amp;show_pre=1&amp;show_next=1&amp;isAutoPlay=false&amp;isDebug=false&amp;UserID=&amp;winType=interior&amp;playMovie=true&amp;MMControl=false&amp;MMout=false&amp;RecordCode=1001,1002,1003,1004,1005,1006,2001,3001,3002,3003,3004,3005,3007,3008,9999"><embed '
            'src="http://player.youku.com/player.php/sid/XMTYzMDQ3ODgxMg/v.swf" '
            'type="application/x-shockwave-flash" allowscriptaccess="never" '
            'allownetworking="internal" allowfullscreen="true" width="600" '
            'height="420" '
            'flashvars="isShowRelatedVideo=false&amp;showAd=0&amp;show_pre=1&amp;show_next=1&amp;isAutoPlay=false&amp;isDebug=false&amp;UserID=&amp;winType=interior&amp;playMovie=true&amp;MMControl=false&amp;MMout=false&amp;RecordCode=1001,1002,1003,1004,1005,1006,2001,3001,3002,3003,3004,3005,3007,3008,9999"></embed></object></p>\n'
            '<p>对于这些争论，在这篇文章中，我最后会给出一个明确的答案。</p>\n'
            '<p>在我的职业生涯早期，我也参与到了这些“圣战”中。我会阅读一些文章，来了解为什么这个规范是正确的，而另外一个完全是错的。然后趾高气扬地对其他与我争论的人说他们是错的，而我是正确的。</p>\n'
            '<p>寻找正确的答案，这花费了我多年的时间，并且我也找到了，但最终的答案就是……</p>\n'
            '<h3 style="text-align: center;"><span style="color: '
            '#ff0000;">这些事情无关紧要！</span></h3>\n'
            '<p>一致性很重要、可读性很重要！争论并强调某一个规范比另外一个规范好，都是一些无关紧要的事。</p>\n'
            '<p>在过去的 20 多年，我关注了各种语言规范。并遵循了不同语言的不同规范。但是，没有一个规范会减少我的 bug '
            '数量，或者使我的代码效率更高。</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx1.sinaimg.cn/large/7cc829d3gy1fg5ow9eq5ej20bu08cgn9.jpg"></p>\n'
            '<p>随着时间的推移，不使我犯错、整洁、格式化的代码，更易于改动和维护，这就是好的代码。</p>\n'
            '<p>想着如何把你的代码写的更漂亮，这并不是坏事，但执着于此，常常会把问题归根于此，并为自己的拖延找借口。</p>\n'
            '<p>实际上，我们如此拖延主要是因为编码时遇到了难题。并且这个问题对当时的我们来说很难解决–尤其是当我们首次遇到这种级别的难题时，我们会被这种复杂的问题吓到，导致我们怀疑自己没有这个能力去解决它。</p>\n'
            '<p>但如果是争论一些琐事，我们就会游刃有余、有安全感。因为在争论琐事的过程中我们的不自信 （perceived '
            'incompetence ）就不太可能暴露出来。</p>\n'
            '<p>争论一些琐碎的事情而逃避那些困难的问题是一种常见的现象，这里有大量著名的理论描述了这一现象。</p>\n'
            '<p>有一个最著名的理论就是帕金森琐碎定律 （Parkinson’s Law of '
            'Triviality），它描述了：一个组织中的成员往往会把过多的经历，花费在一些琐碎的事情上。</p>\n'
            '<p>帕金森用了一个虚构例子来解释了这个定律：在一个审核新核电站计划的委员会中，会员把主要的时间用于争论员工自行车棚使用什么材料，忽略了被提议的核电站计划本身，而这个恰恰是最重要、最复杂的问题。</p>\n'
            '<p>由于在这个经典的例子中使用了自行车棚来阐述问题，丹麦的开发者 Poul-Henning Kamp '
            '创造了新的术语来描述这种现象，叫“自行车棚效应（bike shed effect）”，或者简单地叫“自行车棚（bike '
            'shedding）”。</p>\n'
            '<p>如果你从事软件开发，特别是你在社交媒体上与其他程序员闲聊时，你可能每天都会遇到类似“自行车棚”案例（bike-shedding）</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx3.sinaimg.cn/large/7cc829d3gy1fg5ow8kqk3j20m80gotdn.jpg" '
            'width="627" height="470"></p>\n'
            '<p>如果你发现自己正在线上或者线下中和程序员同事进行热烈的争论时，你应该记住 Sayre 定律：</p>\n'
            '<blockquote><p>“在任何争论中，主观上的重要程度，往往和问题的实际重要程度成反比。</p></blockquote>\n'
            '<p>作为一个顾问/咨询师，我在不同的客户之间奔波，他们都有自己的规则和习惯。因此，在很久之前我就坚定认为，成功的唯一方式就是，放弃琐碎的事情，专注有挑战的问题。把它应用到编码规范上，我就可以收获到我想要的东西，并且不会变得浮躁。</p>\n'
            '<p>如果你正在寻找一种属于自己的代码风格，我建议你先问自己两个问题：</p>\n'
            '<ol>\n'
            '<li><strong>是否有现成的工具，只需简单操作，就可以自动按照你的代码风格规则，来格式化代码？</strong></li>\n'
            '<li><strong>这个工具以及它支持的代码风格规则是否有人在持续维护，或者是否有一些知名公司在用？\xa0'
            '</strong></li>\n'
            '</ol>\n'
            '<p>对于上面的两个问题，如果你的答案都是“是的”，那么你就可以放心用这个代码风格。就是这么简单。</p>\n'
            '<p>下面有一些代码格式化工具：</p>\n'
            '<ul>\n'
            '<li><a href="https://github.com/dotnet/codeformatter">DotNet Code '
            'Formatter</a></li>\n'
            '<li><a href="https://github.com/google/google-java-format">Java: '
            'Google-Java-Format</a></li>\n'
            '<li><a href="https://standardjs.com/">Javascript Standard '
            'Style</a> (注意，这只是一个产品名，不是 JavaScript 官方的标准)</li>\n'
            '<li><a href="http://cs.sensiolabs.org/">PHP Coding Standards '
            'Fixer</a></li>\n'
            '<li><a href="https://github.com/google/yapf/">Python: Google’s '
            'YAPF</a></li>\n'
            '<li><a href="http://rubocop.readthedocs.io/en/latest/">Ruby: '
            'Rubocop</a></li>\n'
            '</ul>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111334" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111334votetotal">2</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111334" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 2 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/8zjl8">周进林</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/8zjl8">\r\n'
            '\t\t\t<img '
            'src="http://www.jobbole.com/wp-content/uploads/avatars/37626/5eae1c6800ce93c5d98ee059843e9513-bpfull.jpg">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            '
            '茫茫大海中的一枚程序猿，为了进化为一个高富帅人类而努力着。关注java、python、linux、vim等（新浪微博：@酒肉和尚--进林）        '
            '</span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/8zjl8" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/8zjl8/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/8zjl8/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 19</a> · <a title="我的网站" '
            'target="_blank" href="http://www.cnblogs.com/averey/"><i '
            'class="fa fa-link"></i></a>\xa0        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://wx1.sinaimg.cn/large/7cc829d3gy1fg5ow9eq5ej20bu08cgn9.jpg'],
 'tags': '开发,Space,Tab,代码风格',
 'thumb_up_num': 2,
 'title': '不要再争论代码风格了！',
 'url': 'http://blog.jobbole.com/111334/',
 'url_obj_id': '2792df6fe68a57f7395b67b4550cd6c8'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:37:40 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111276/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:37:40 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:40 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 578
2017-06-04 21:37:40 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2017-06-04 21:37:40 [elasticsearch] DEBUG: > NoSQL 数据库的主主备份
2017-06-04 21:37:40 [elasticsearch] DEBUG: < {"tokens":[{"token":"nosql","start_offset":0,"end_offset":5,"type":"ENGLISH","position":0},{"token":"数据库","start_offset":6,"end_offset":9,"type":"CN_WORD","position":1},{"token":"数据","start_offset":6,"end_offset":8,"type":"CN_WORD","position":2},{"token":"库","start_offset":8,"end_offset":9,"type":"CN_WORD","position":3},{"token":"主","start_offset":10,"end_offset":11,"type":"CN_CHAR","position":4},{"token":"主","start_offset":11,"end_offset":12,"type":"CN_CHAR","position":5},{"token":"备份","start_offset":12,"end_offset":14,"type":"CN_WORD","position":6}]}
2017-06-04 21:37:40 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:40 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 423
2017-06-04 21:37:40 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2017-06-04 21:37:40 [elasticsearch] DEBUG: > IT技术,NoSQL,数据库
2017-06-04 21:37:40 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"nosql","start_offset":5,"end_offset":10,"type":"ENGLISH","position":1},{"token":"数据库","start_offset":11,"end_offset":14,"type":"CN_WORD","position":2},{"token":"数据","start_offset":11,"end_offset":13,"type":"CN_WORD","position":3},{"token":"库","start_offset":13,"end_offset":14,"type":"CN_WORD","position":4}]}
2017-06-04 21:37:41 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:41 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/b1bf4796b153541f055976afe97caa18 HTTP/1.1" 200 175
2017-06-04 21:37:41 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/b1bf4796b153541f055976afe97caa18 [status:200 request:0.056s]
2017-06-04 21:37:41 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111276/", "comment_num": 0, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t原文出处： Dennis Anikin   译文出处：ITeye/贺雨言   Tarantool DBMS 的高性能应该很多人都听说过，包括其丰富的工具套件和某些特定功能。比如，它拥有一个非常强大的 on-disk 存储引擎 Vinyl，并且知道怎样处理 JSON 文档。然而，大部分文章往往忽略了一个关键点：通常 Tarantool 仅仅被视为存储器，而实际上其最大特点是能够在存储器内部写代码，从而高效处理数据。如果你想知道我和igorcoding是怎样在Tarantool内部建立一个系统的，请继续往下看。\n如果你用过Mail.Ru电子邮件服务，你应该知道它可以从其他账号收集邮件。如果支持OAuth协议，那么在收集其他账号的邮件时，我们就不需要让用户提供第三方服务凭证了，而是用OAuth令牌来代替。此外，Mail.Ru Group有很多项目要求通过第三方服务授权，并且需要用户的OAuth令牌才能处理某些应用。因此，我们决定建立一个存储和更新令牌的服务。\n我猜大家都知道OAuth令牌是什么样的，闭上眼睛回忆一下，OAuth结构由以下3-4个字段组成：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n{\r\n    “token_type” : “bearer”,\r\n    “access_token” : “XXXXXX”,\r\n    “refresh_token” : “YYYYYY”,\r\n    “expires_in” : 3600\r\n}\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t123456\r\n\t\t\t\t\r\n\t\t\t\t\t\t{    “token_type” : “bearer”,    “access_token” : “XXXXXX”,    “refresh_token” : “YYYYYY”,    “expires_in” : 3600}\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n \n\n访问令牌（access_token）——允许你执行动作、获取用户数据、下载用户的好友列表等等；\n更新令牌（refresh_token）——让你重新获取新的access_token，不限次数；\n过期时间（expires_in）——令牌到期时间戳或任何其他预定义时间,如果你的access_token到期了，你就不能继续访问所需的资源。\n\n现在我们看一下服务的简单框架。设想有一些前端可以在我们的服务上写入和读出令牌，还有一个独立的更新器，一旦令牌到期，就可以通过更新器从OAuth服务提供商获取新的访问令牌。\n\n如上图所示，数据库的结构也十分简单，由两个数据库节点（主和从）组成，为了说明两个数据库节点分别位于两个数据中心，二者之间由一条垂直的虚线隔开，其中一个数据中心包含主数据库节点及其前端和更新器，另一个数据中心包含从数据库节点及其前端，以及访问主数据库节点的更新器。\n面临的困难\n我们面临的主要问题在于令牌的使用期（一个小时）。详细了解这个项目之后，也许有人会问“在一小时内更新1000万条记录，这真的是高负载服务吗？如果我们用一个数除一下，结果大约是3000rps”。然而，如果因为数据库维护或故障，甚至服务器故障（一切皆有可能）导致一部分记录没有得到更新，那事情将会变得比较麻烦。比如，如果我们的服务（主数据库）因为某些原因持续中断15分钟，就会导致25%的服务中断（四分之一的令牌变成无效，不能再继续使用）；如果服务中断30分钟，将会有一半的数据不能得到更新；如果中断1小时，那么所有的令牌都将失效。假设数据库瘫痪一个小时，我们重启系统，然后整个1000万条令牌都需要进行快速更新。这算不算高负载服务呢？\n一开始一切都还进展地比较顺利，但是两年后，我们进行了逻辑扩展，增加了几个指标，并且开始执行一些辅助逻辑…….总之，Tarantool耗尽了CPU资源。尽管所有资源都是递耗资源，但这样的结果确实让我们大吃一惊。\n幸运的是，系统管理员帮我们安装了当时库存中内存最大的CPU，解决了我们随后6个月的CPU需求。但这只是权宜之计，我们必须想出一个解决办法。当时，我们学习了一个新版的Tarantool（我们的系统是用Tarantool 1.5写的，这个版本除了在Mail.Ru Group，其他地方基本没用过）。Tarantool 1.6大力提倡主主备份，于是我们想：为什么不在连接主主备份的三个数据中心分别建立一个数据库备份呢？这听起来是个不错的计划。\n\n三个主机、三个数据中心和三个更新器，都分别连接自己的主数据库。即使一个或者两个主机瘫痪了，系统仍然照常运行，对吧？那么这个方案的缺点是什么呢？缺点就是，我们将一个OAuth服务提供商的请求数量有效地增加到了三倍，也就是说，有多少个副本，我们就要更新几乎相同数量的令牌，这样不行。最直接的解决办法就是，想办法让各个节点自己决定谁是leader，那样就只需要更新存储在leader上的节点了。\n选择leader节点\n选择leader节点的算法有很多，其中有一个算法叫Paxos，相当复杂，不知道怎样简化，于是我们决定用Raft代替。Raft是一个非常通俗易懂的算法，谁能通信就选谁做leader，一旦通信连接失败或者其他因素，就重新选leader。具体实施办法如下：\n\nTarantool外部既没有Raft也没有Paxos，但是我们可以使用net.box内置模式，让所有节点连接成一个网状网（即每一个节点连接剩下所有节点），然后直接在这些连接上用Raft算法选出leader节点。最后，所有节点要么成为leader节点，要么成为follower节点，或者二者都不是。\n如果你觉得Raft算法实施起来有困难，下面的Lua代码可以帮到你：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nlocal r = self.pool.call(self.FUNC.request_vote,\r\n                     self.term, self.uuid)\r\nself._vote_count = self:count_votes(r)\r\n\r\nif self._vote_count &gt; self._nodes_count / 2 then\r\n    log.info(“[raft-srv] node %d won elections”, self.id)\r\n    self:_set_state(self.S.LEADER)\r\n    self:_set_leader({ id=self.id, uuid=self.uuid })\r\n    self._vote_count = 0\r\n    self:stop_election_timer()\r\n    self:start_heartbeater()\r\nelse\r\n    log.info(“[raft-srv] node %d lost elections”, self.id)\r\n    self:_set_state(self.S.IDLE)\r\n    self:_set_leader(msgpack.NULL)\r\n    self._vote_count = 0\r\n    self:start_election_timer()\r\nend\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t123456789101112131415161718\r\n\t\t\t\t\r\n\t\t\t\t\t\tlocal r = self.pool.call(self.FUNC.request_vote,                     self.term, self.uuid)self._vote_count = self:count_votes(r) if self._vote_count &gt; self._nodes_count / 2 then    log.info(“[raft-srv] node %d won elections”, self.id)    self:_set_state(self.S.LEADER)    self:_set_leader({ id=self.id, uuid=self.uuid })    self._vote_count = 0    self:stop_election_timer()    self:start_heartbeater()else    log.info(“[raft-srv] node %d lost elections”, self.id)    self:_set_state(self.S.IDLE)    self:_set_leader(msgpack.NULL)    self._vote_count = 0    self:start_election_timer()end\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n现在我们给远程服务器发送请求（其他Tarantool副本）并计算来自每一个节点的票数，如果我们有一个quorum，我们就选定了一个leader，然后发送heartbeats，告诉其他节点我们还活着。如果我们在选举中失败了，我们可以发起另一场选举，一段时间之后，我们又可以投票或被选为leader。\n只要我们有一个quorum，选中一个leader，我们就可以将更新器指派给所有节点，但是只准它们为leader服务。\n这样我们就规范了流量，由于任务是由单一的节点派出，因此每一个更新器获得大约三分之一的任务，有了这样的设置，我们可以失去任何一台主机，因为如果某台主机出故障了，我们可以发起另一个选举，更新器也可以切换到另一个节点。然而，和其他分布式系统一样，有好几个问题与quorum有关。\n“废弃”节点\n如果各个数据中心之间失去联系了，那么我们需要有一些适当的机制去维持整个系统正常运转，还需要有一套机制能恢复系统的完整性。Raft成功地做到了这两点：\n\n假设Dataline数据中心掉线了，那么该位置的节点就变成了“废弃”节点，也就是说该节点就看不到其他节点了，集群中的其他节点可以看到这个节点丢失了，于是引发了另一个选举，然后新的集群节点（即上级节点）被选为leader，整个系统仍然保持运转，因为各个节点之间仍然保持一致性（大半部分节点仍然互相可见）。\n那么问题来了，与丢失的数据中心有关的更新器怎么样了呢？Raft说明书没有给这样的节点一个单独的名字，通常，没有quorum的节点和不能与leader联系的节点会被闲置下来。然而，它可以自己建立网络连接然后更新令牌，一般来说，令牌都是在连接模式时更新，但是，也许用一个连接“废弃”节点的更新器也可以更新令牌。一开始我们并不确定这样做有意义，这样不会导致冗余更新吗？\n这个问题我们需要在实施系统的过程中搞清楚。我们的第一个想法是不更新：我们有一致性、有quorum，丢失任何一个成员，我们都不应该更新。但是后来我们有了另一个想法，我们看一下Tarantool中的主主备份，假设有两个主节点和一个变量（key）X=1，我们同时在每一个节点上给这个变量赋一个新值，一个赋值为2，另一个赋值为3，然后，两个节点互相交换备份日志（就是X变量的值）。在一致性上，这样实施主主备份是很糟糕的（无意冒犯Tarantool开发者）。\n\n如果我们需要严格的一致性，这样是行不通的。然而，回忆一下我们的OAuth令牌是由以下两个重要因素组成：\n\n更新令牌，本质上永久有效；\n访问令牌，有效期为一个小时；\n\n我们的更新器有一个refresh函数，可以从一个更新令牌获取任意数量的访问令牌，一旦发布，它们都将保持一个小时内有效。\n我们考虑一下以下场景：两个follower节点正在和一个leader节点交互，它们更新自己的令牌，接收第一个访问令牌，这个访问令牌被复制，于是现在每一个节点都有这个访问令牌，然后，连接中断了，所以，其中一个follower节点变成了“废弃”节点，它没有quorum，既看不到leader也看不到其他follower，然而，我们允许我们的更新器去更新位于“废弃”节点上的令牌，如果“废弃”节点没有连接网络，那么整个方案都将停止运行。尽管如此，如果发生简单的网络拆分，更新器还是可以维持正常运行。\n一旦网络拆分结束，“废弃”节点重新加入集群，就会引发另一场选举或者数据交换。注意，第二和第三个令牌一样，也是“好的”。\n原始的集群成员恢复之后，下一次更新将只在一个节点上发生，然后备份。换句话来说，当集群拆分之后，被拆分的各个部分各自独立更新，但是一旦重新整合，数据一致性也因此恢复。通常，需要N/2+1个活动节点（对于一个3节点集群，就是需要2个活动节点）去保持集群正常运转。尽管如此，对我们而言，即使只有1个活动节点也足够了，它会发送尽可能多的外部请求。\n重申一下，我们已经讨论了请求数量逐渐增加的情况，在网络拆分或节点中断时期，我们能够提供一个单一的活动节点，我们会像平时一样更新这个节点，如果出现绝对拆分（即当一个集群被分成最大数量的节点，每一个节点有一个网络连接），如上所述，OAuth服务提供商的请求数量将提升至三倍。但是，由于这个事件发生的时间相对短暂，所以情况不是太糟，我们可不希望一直工作在拆分模式。通常情况下，系统处于有quorum和网络连接，并且所有节点都启动运行的状态。\n分片\n还有一个问题没有解决：我们已经达到了CPU上限，最直接的解决办法就是分片。\n\n假设我们有两个数据库分片，每一个都有备份，有一个这样的函数，给定一些key值，就可以计算出哪一个分片上有所需要的数据。如果我们通过电子邮件分片，一部分地址存储在一个分片上，另一部分地址存储在另一个分片上，我们很清楚我们的数据在哪里。\n有两种方法可以分片。一种是客户端分片，我们选择一个返回分片数量的连续的分片函数，比如CRC32、Guava或Sumbur，这个函数在所有客户端的实现方式都一样。这种方法的一个明显优势在于数据库对分片一无所知，你的数据库正常运转，然后分片就发生了。\n然而，这种方法也存在一个很严重的缺陷。一开始，客户端非常繁忙。如果你想要一个新的分片，你需要把分片逻辑加进客户端，这里的最大的问题是，可能一些客户端在使用这种模式，而另一些客户端却在使用另一种完全不同的模式，而数据库本身却不知道有两种不同的分片模式。\n我们选择另一种方法—数据库内部分片，这种情况下，数据库代码变得更加复杂，但是为了折中我们可以使用简单的客户端，每一个连接数据库的客户端被路由到任意节点，由一个特殊函数计算出哪一个节点应该被连接、哪一个节点应该被控制。前面提到，由于数据库变得更加复杂，因此为了折中，客户端就变得更加简单了，但是这样的话，数据库就要对其数据全权负责。此外，最困难的事就是重新分片，如果你有一大堆客户端无法更新，相比之下，如果数据库负责管理自己的数据，那重新分片就会变得非常简单。\n具体怎样实施呢？\n\n六边形代表Tarantool实体，有3个节点组成分片1，另一个3节点集群作为分片2，如果我们将所有节点互相连接，结果会怎样呢？根据Raft，我们可以知道每一个集群的状态，谁是leader服务器谁是follower服务器也一目了然，由于是集群内连接，我们还可以知道其他分片（例如它的leader分片或者follower分片）的状态。总的来说，如果访问第一个分片的用户发现这并不是他需要的分片，我们很清楚地知道应该指导他往哪里走。\n我们来看一些简单的例子。\n假设用户向驻留在第一个分片上的key发出请求，该请求被第一个分片上的某一个节点接收，这个节点知道谁是leader，于是将请求重新路由到分片leader，反过来，分片leader对这个key进行读或写，并且将结果反馈给用户。\n第二个场景：用户的请求到达第一个分片中的相同节点，但是被请求的key却在第二个分片上，这种情况也可以用类似的方法处理，第一个分片知道第二个分片上谁是leader，然后把请求送到第二个分片的leader进行转发和处理，再将结果返回给用户。\n这个方案十分简单，但也存在一定的缺陷，其中最大的问题就是连接数，在二分片的例子中，每一个节点连接到其他剩下的节点，连接数是6*5=30，如果再加一个3节点分片，那么连接数就增加到72，这会不会有点多呢？\n我们该如何解决这个问题呢？我们只需要增加一些Tarantool实例，我们叫它代理，而不叫分片或数据库，用代理去解决所有的分片问题：包括计算key值和定位分片领导。另一方面，Raft集群保持自包含，只在分片内部工作。当用户访问代理时，代理计算出所需要的分片，如果需要的是leader，就对用户作相应的重定向，如果不是leader，就将用户重定向至分片内的任意节点。\n\n由此产生的复杂性是线性的，取决于节点数量。现在一共3个节点，每个节点3个分片，连接数少了几倍。\n代理方案的设计考虑到了进一步规模扩展（当分片数量大于2时），当只有2个分片时，连接数不变，但是当分片数量增加时，连接数会剧减。分片列表存储在Lua配置文件中，所以，如果想要获取新列表，我们只需要重载代码就好了。\n综上所述，首先，我们进行主主备份，应用Raft算法，然后加入分片和代理，最后我们得到的是一个单块，一个集群，所以说，目前这个方案看上去是比较简单的。\n剩下的就是只读或只写令牌的的前端了，我们有更新器可以更新令牌，获得更新令牌后把它传到OAuth服务提供商，然后写一个新的访问令牌。\n前面说过我们的一些辅助逻辑耗尽了CPU资源，现在我们将这些辅助资源移到另一个集群上。\n辅助逻辑主要和地址簿有关，给定一个用户令牌，就会有一个对应的地址簿，地址簿上的数据量和令牌一样，为了不耗尽一台机器上的CPU资源，我们显然需要一个与副本相同的集群，只需要加一堆更新地址簿的更新器就可以了（这个任务比较少见，因此地址簿不会和令牌一起更新）。\n最后，通过整合这两个集群，我们得到一个相对简单的完整结构：\n\n令牌更新队列\n为什么我们本可以使用标准队列却还要用自己的队列呢？这和我们的令牌更新模型有关。令牌一旦发布，有效期就是一个小时，当令牌快要到期时，需要进行更新，而令牌更新必须在某个特定的时间点之前完成。\n\n假设系统中断了，但是我们有一堆已到期的令牌，而在我们更新这些令牌的同时，又有其他令牌陆续到期，虽然我们最后肯定能全部更新完，但是如果我们先更新那些即将到期的（60秒内），再用剩下的资源去更新已经到期的，是不是会更合理一些？（优先级别最低的是还有4-5分钟才到期的令牌）\n用第三方软件来实现这个逻辑并不是件容易的事，然而，对于Tarantool来说却不费吹灰之力。看一个简单的方案：在Tarantool中有一个存储数据的元组，这个元组的一些ID设置了基础key值，为了得到我们需要的队列，我们只需要添加两个字段：status（队列令牌状态）和time（到期时间或其他预定义时间）。\n\n现在我们考虑一下队列的两个主要功能—put和take。put就是写入新数据。给定一些负载，put时自己设置好status和time，然后写数据，这就是建立一个新的元组。\n至于take，是指建立一个基于索引的迭代器，挑出那些等待解决的任务（处于就绪状态的任务），然后核查一下是不是该接收这些任务了，或者这些任务是否已经到期了。如果没有任务，take就切换到wait模式。除了内置Lua，Tarantool还有一些所谓的通道，这些通道本质上是互联光纤同步原语。任何光纤都可以建立一个通道然后说“我在这等着”，剩下的其他光纤可以唤醒这个通道然后给它发送信息。\n等待中的函数（等待发布任务、等待指定时间或其他）建立一个通道，给通道贴上适当的标签，将通道放置在某个地方，然后进行监听。如果我们收到一个紧急的更新令牌，put会给通道发出通知，然后take接收更新任务。\nTarantool有一个特殊的功能：如果一个令牌被意外发布，或者一个更新令牌被take接收，或者只是出现接收任务的现象，以上三种情况Tarantool都可以跟踪到客户端中断。我们将每一个连接与指定给该连接的任务联系起来，并将这些映射关系保持在会话保存中。假设由于网络中断导致更新过程失败，而且我们不知道这个令牌是否会被更新并被写回到数据库。于是，客户端发生中断了，搜索与失败过程相关的所有任务的会话保存，然后自动将它们释放。随后，任意已发布的任务都可以用同一个通道给另一个put发送信息，该put会快速接收和执行任务。\n实际上，具体实施方案并不需要太多代码：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nfunction put(data)  \r\n    local t = box.space.queue:auto_increment({  \r\n        ‘r’, -- [[ status ]]  \r\n        util.time(), -- [[ time ]]  \r\n        data -- [[ any payload ]]  \r\n    })  \r\n  \r\n    return t  \r\nend  \r\n  \r\nfunction take(timeout)  \r\n    local start_time = util.time()  \r\n    local q_ind = box.space.tokens.index.queue  \r\n    local _,t  \r\n  \r\n    while true do  \r\n        local it = util.iter(q_ind, {‘r’}, {iterator = box.index.GE})  \r\n        _,t = it()  \r\n        if t and t[F.tokens.status] ~= ‘t’ then  \r\n            break  \r\n        end  \r\n  \r\n        local left = (start_time + timeout) — util.time()  \r\n        if left &lt;= 0 then return end  \r\n        t = q:wait(left)  \r\n        if t then break end  \r\n    end  \r\n    t = q:taken(t)  \r\n    return t  \r\nend  \r\n  \r\nfunction queue:taken(task)  \r\n    local sid = box.session.id()  \r\n    if self._consumers[sid] == nil then  \r\n        self._consumers[sid] = {}  \r\n    end  \r\n    local k = task[self.f_id]  \r\n    local t = self:set_status(k, ‘t’)  \r\n  \r\n    self._consumers[sid][k] = {util.time(), box.session.peer(sid), t}  \r\n    self._taken[k] = sid  \r\n    return t  \r\nend  \r\n  \r\nfunction on_disconnect()  \r\n    local sid = box.session.id  \r\n    local now = util.time()  \r\n  \r\n    if self._consumers[sid] then  \r\n        local consumers = self._consumers[sid]  \r\n        for k, rec in pairs(consumers) do  \r\n            time, peer, task = unpack(rec)  \r\n  \r\n            local v = box.space[self.space].index[self.index_primary]:get({k})  \r\n            if v and v[self.f_status] == ‘t’ then  \r\n                v = self:release(v[self.f_id])  \r\n            end  \r\n        end  \r\n        self._consumers[sid] = nil  \r\n    end  \r\nend\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061\r\n\t\t\t\t\r\n\t\t\t\t\t\tfunction put(data)      local t = box.space.queue:auto_increment({          ‘r’, -- [[ status ]]          util.time(), -- [[ time ]]          data -- [[ any payload ]]      })        return t  end    function take(timeout)      local start_time = util.time()      local q_ind = box.space.tokens.index.queue      local _,t        while true do          local it = util.iter(q_ind, {‘r’}, {iterator = box.index.GE})          _,t = it()          if t and t[F.tokens.status] ~= ‘t’ then              break          end            local left = (start_time + timeout) — util.time()          if left &lt;= 0 then return end          t = q:wait(left)          if t then break end      end      t = q:taken(t)      return t  end    function queue:taken(task)      local sid = box.session.id()      if self._consumers[sid] == nil then          self._consumers[sid] = {}      end      local k = task[self.f_id]      local t = self:set_status(k, ‘t’)        self._consumers[sid][k] = {util.time(), box.session.peer(sid), t}      self._taken[k] = sid      return t  end    function on_disconnect()      local sid = box.session.id      local now = util.time()        if self._consumers[sid] then          local consumers = self._consumers[sid]          for k, rec in pairs(consumers) do              time, peer, task = unpack(rec)                local v = box.space[self.space].index[self.index_primary]:get({k})              if v and v[self.f_status] == ‘t’ then                  v = self:release(v[self.f_id])              end          end          self._consumers[sid] = nil      end  end\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\nPut只是接收用户想要插入队列的所有数据，并将其写入某个空间，如果是一个简单的索引式FIFO队列，设置好状态和当前时间，然后返回该任务。\n接下来要和take有点关系了，但仍然比较简单。我们建立一个迭代器，等待接收新任务。Taken函数只需要将任务标记成“已接收”，但有一点很重要，taken函数还能记住哪个任务是由哪个进程接收的。On_disconnect函数可以发布某个特定连接，或者发布由某个特定用户接收的所有任务。\n是否有可选方案？\n当然有。我们本可以使用任意数据库，但是，不管我们选用什么数据库，我们都要建立一个队列用来处理外部系统、处理更新等等问题。我们不能仅仅按需更新令牌，因为那样会产生不可预估的工作量，不管怎样，我们需要保持我们的系统充满活力，但是那样，我们就要将延期的任务也插入队列，并且保证数据库和队列之间的一致性，我们还要被迫使用一个quorum的容错队列。此外，如果我们把数据同时放在RAM和一个（考虑到工作量）可能要放入内存的队列中，那么我们就要消耗更多资源。\n在我们的方案中，数据库存储令牌，队列逻辑只需要占用7个字节（每个元组只需要7个额外的字节，就可以搞定队列逻辑！），如果使用其他的队列形式，需要占用的空间就多得多了，大概是内存容量的两倍。\n总结\n首先，我们解决了连接中断的问题，这个问题十分常见，使用上述的系统让我们摆脱了这个困扰。\n分片帮助我们扩展内存，然后，我们将连接数从二次方减少到了线性，优化了业务任务的队列逻辑：如果发生延期，更新我们所能更新的一切令牌，这些延期并非都是我们的故障引起的，有可能是Google、Microsoft或者其他服务端对OAuth服务提供商进行改造，然后导致我们这边出现大量的未更新的令牌。\n去数据库内部运算吧，走近数据，你将拥有便利、高效、可扩展和灵活的运算体验！\n\r\n        \r\n        \r\n        \n    \n         1 赞\n          收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "bookmark_num": 0, "title": "NoSQL 数据库的主主备份", "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2013/02/NoSQL-Not-Only-SQL.jpg"], "suggest": [{"weight": 10, "input": ["数据", "数据库", "nosql", "备份"]}, {"weight": 7, "input": ["数据", "数据库", "nosql", "技术"]}], "tags": "IT技术,NoSQL,数据库"}
2017-06-04 21:37:41 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"b1bf4796b153541f055976afe97caa18","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:37:41 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 0,
 'comment_num': 0,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">原文出处： <a ref="nofollow" '
            'target="_blank" '
            'href="http://highscalability.com/blog/2017/5/3/homegrown-master-master-replication-for-a-nosql-database.html">Dennis '
            'Anikin</a>\xa0\xa0\xa0译文出处：<a target="_blank" '
            'href="http://www.iteye.com/news/32435">ITeye/贺雨言</a>\xa0\xa0\xa0'
            '</div><p><a href="https://tarantool.org/" '
            'target="_blank">Tarantool</a> DBMS '
            '的高性能应该很多人都听说过，包括其丰富的工具套件和某些特定功能。比如，它拥有一个非常强大的 on-disk 存储引擎 '
            'Vinyl，并且知道怎样处理 JSON 文档。然而，大部分文章往往忽略了一个关键点：通常 Tarantool '
            '仅仅被视为存储器，而实际上其最大特点是能够在存储器内部写代码，从而高效处理数据。如果你想知道我和igorcoding是怎样在Tarantool内部建立一个系统的，请继续往下看。</p>\n'
            '<p>如果你用过Mail.Ru电子邮件服务，你应该知道它可以从其他账号收集邮件。如果支持OAuth协议，那么在收集其他账号的邮件时，我们就不需要让用户提供第三方服务凭证了，而是用OAuth令牌来代替。此外，Mail.Ru '
            'Group有很多项目要求通过第三方服务授权，并且需要用户的OAuth令牌才能处理某些应用。因此，我们决定建立一个存储和更新令牌的服务。</p>\n'
            '<p>我猜大家都知道OAuth令牌是什么样的，闭上眼睛回忆一下，OAuth结构由以下3-4个字段组成：</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-593335fbe3105603459756" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" touchscreen minimize '
            'scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; '
            'font-size: 13px !important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            '{\r\n'
            '    “token_type” : “bearer”,\r\n'
            '    “access_token” : “XXXXXX”,\r\n'
            '    “refresh_token” : “YYYYYY”,\r\n'
            '    “expires_in” : 3600\r\n'
            '}</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3105603459756-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3105603459756-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3105603459756-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3105603459756-4">4</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3105603459756-5">5</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3105603459756-6">6</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-593335fbe3105603459756-1"><span '
            'class="crayon-sy">{</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe3105603459756-2"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span>“<span '
            'class="crayon-v">token</span><span '
            'class="crayon-sy">_</span>type”<span class="crayon-h"> '
            '</span><span class="crayon-o">:</span><span class="crayon-h"> '
            '</span>“<span class="crayon-i">bearer</span>”<span '
            'class="crayon-sy">,</span></div><div class="crayon-line" '
            'id="crayon-593335fbe3105603459756-3"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span>“<span '
            'class="crayon-v">access</span><span '
            'class="crayon-sy">_</span>token”<span class="crayon-h"> '
            '</span><span class="crayon-o">:</span><span class="crayon-h"> '
            '</span>“<span class="crayon-i">XXXXXX</span>”<span '
            'class="crayon-sy">,</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe3105603459756-4"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span>“<span '
            'class="crayon-v">refresh</span><span '
            'class="crayon-sy">_</span>token”<span class="crayon-h"> '
            '</span><span class="crayon-o">:</span><span class="crayon-h"> '
            '</span>“<span class="crayon-i">YYYYYY</span>”<span '
            'class="crayon-sy">,</span></div><div class="crayon-line" '
            'id="crayon-593335fbe3105603459756-5"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span>“<span '
            'class="crayon-v">expires</span><span '
            'class="crayon-sy">_</span>in”<span class="crayon-h"> </span><span '
            'class="crayon-o">:</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">3600</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe3105603459756-6"><span '
            'class="crayon-sy">}</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0011 seconds] -->\r\n'
            '<p>\xa0</p>\n'
            '<ul>\n'
            '<li>访问令牌（access_token）——允许你执行动作、获取用户数据、下载用户的好友列表等等；</li>\n'
            '<li>更新令牌（refresh_token）——让你重新获取新的access_token，不限次数；</li>\n'
            '<li>过期时间（expires_in）——令牌到期时间戳或任何其他预定义时间,如果你的access_token到期了，你就不能继续访问所需的资源。</li>\n'
            '</ul>\n'
            '<p>现在我们看一下服务的简单框架。设想有一些前端可以在我们的服务上写入和读出令牌，还有一个独立的更新器，一旦令牌到期，就可以通过更新器从OAuth服务提供商获取新的访问令牌。<br>\n'
            '<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/8de52e4feca00a7237e54637f8643e15.png"></p>\n'
            '<p>如上图所示，数据库的结构也十分简单，由两个数据库节点（主和从）组成，为了说明两个数据库节点分别位于两个数据中心，二者之间由一条垂直的虚线隔开，其中一个数据中心包含主数据库节点及其前端和更新器，另一个数据中心包含从数据库节点及其前端，以及访问主数据库节点的更新器。</p>\n'
            '<h3>面临的困难</h3>\n'
            '<p>我们面临的主要问题在于令牌的使用期（一个小时）。详细了解这个项目之后，也许有人会问“在一小时内更新1000万条记录，这真的是高负载服务吗？如果我们用一个数除一下，结果大约是3000rps”。然而，如果因为数据库维护或故障，甚至服务器故障（一切皆有可能）导致一部分记录没有得到更新，那事情将会变得比较麻烦。比如，如果我们的服务（主数据库）因为某些原因持续中断15分钟，就会导致25%的服务中断（四分之一的令牌变成无效，不能再继续使用）；如果服务中断30分钟，将会有一半的数据不能得到更新；如果中断1小时，那么所有的令牌都将失效。假设数据库瘫痪一个小时，我们重启系统，然后整个1000万条令牌都需要进行快速更新。这算不算高负载服务呢？</p>\n'
            '<p>一开始一切都还进展地比较顺利，但是两年后，我们进行了逻辑扩展，增加了几个指标，并且开始执行一些辅助逻辑…….总之，Tarantool耗尽了CPU资源。尽管所有资源都是递耗资源，但这样的结果确实让我们大吃一惊。</p>\n'
            '<p>幸运的是，系统管理员帮我们安装了当时库存中内存最大的CPU，解决了我们随后6个月的CPU需求。但这只是权宜之计，我们必须想出一个解决办法。当时，我们学习了一个新版的Tarantool（我们的系统是用Tarantool '
            '1.5写的，这个版本除了在Mail.Ru Group，其他地方基本没用过）。Tarantool '
            '1.6大力提倡主主备份，于是我们想：为什么不在连接主主备份的三个数据中心分别建立一个数据库备份呢？这听起来是个不错的计划。<br>\n'
            '<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/cc471d6d9be23e6208d85a378109a9e9.png"></p>\n'
            '<p>三个主机、三个数据中心和三个更新器，都分别连接自己的主数据库。即使一个或者两个主机瘫痪了，系统仍然照常运行，对吧？那么这个方案的缺点是什么呢？缺点就是，我们将一个OAuth服务提供商的请求数量有效地增加到了三倍，也就是说，有多少个副本，我们就要更新几乎相同数量的令牌，这样不行。最直接的解决办法就是，想办法让各个节点自己决定谁是leader，那样就只需要更新存储在leader上的节点了。</p>\n'
            '<h3>选择leader节点</h3>\n'
            '<p>选择leader节点的算法有很多，其中有一个算法叫Paxos，相当复杂，不知道怎样简化，于是我们决定用Raft代替。Raft是一个非常通俗易懂的算法，谁能通信就选谁做leader，一旦通信连接失败或者其他因素，就重新选leader。具体实施办法如下：<br>\n'
            '<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/9227cca016fb31c2337a2d5fe74af2e8.png"></p>\n'
            '<p>Tarantool外部既没有Raft也没有Paxos，但是我们可以使用net.box内置模式，让所有节点连接成一个网状网（即每一个节点连接剩下所有节点），然后直接在这些连接上用Raft算法选出leader节点。最后，所有节点要么成为leader节点，要么成为follower节点，或者二者都不是。</p>\n'
            '<p>如果你觉得Raft算法实施起来有困难，下面的Lua代码可以帮到你：</p><!-- Crayon Syntax '
            'Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-593335fbe3111110694124" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" touchscreen minimize '
            'scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; '
            'font-size: 13px !important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'local r = self.pool.call(self.FUNC.request_vote,\r\n'
            '                     self.term, self.uuid)\r\n'
            'self._vote_count = self:count_votes(r)\r\n'
            '\r\n'
            'if self._vote_count &gt; self._nodes_count / 2 then\r\n'
            '    log.info(“[raft-srv] node %d won elections”, self.id)\r\n'
            '    self:_set_state(self.S.LEADER)\r\n'
            '    self:_set_leader({ id=self.id, uuid=self.uuid })\r\n'
            '    self._vote_count = 0\r\n'
            '    self:stop_election_timer()\r\n'
            '    self:start_heartbeater()\r\n'
            'else\r\n'
            '    log.info(“[raft-srv] node %d lost elections”, self.id)\r\n'
            '    self:_set_state(self.S.IDLE)\r\n'
            '    self:_set_leader(msgpack.NULL)\r\n'
            '    self._vote_count = 0\r\n'
            '    self:start_election_timer()\r\n'
            'end</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3111110694124-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3111110694124-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3111110694124-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3111110694124-4">4</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3111110694124-5">5</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3111110694124-6">6</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3111110694124-7">7</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3111110694124-8">8</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3111110694124-9">9</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3111110694124-10">10</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3111110694124-11">11</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3111110694124-12">12</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3111110694124-13">13</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3111110694124-14">14</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3111110694124-15">15</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3111110694124-16">16</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe3111110694124-17">17</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe3111110694124-18">18</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-593335fbe3111110694124-1"><span '
            'class="crayon-i">local</span><span class="crayon-h"> </span><span '
            'class="crayon-v">r</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">pool</span><span class="crayon-sy">.</span><span '
            'class="crayon-e">call</span><span class="crayon-sy">(</span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">FUNC</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">request_vote</span><span '
            'class="crayon-sy">,</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe3111110694124-2"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 '
            '</span><span class="crayon-r">self</span><span '
            'class="crayon-sy">.</span><span class="crayon-v">term</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">uuid</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line" '
            'id="crayon-593335fbe3111110694124-3"><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">_vote_count</span><span class="crayon-h"> '
            '</span><span class="crayon-o">=</span><span class="crayon-h"> '
            '</span><span class="crayon-r">self</span><span '
            'class="crayon-o">:</span><span '
            'class="crayon-e">count_votes</span><span '
            'class="crayon-sy">(</span><span class="crayon-v">r</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe3111110694124-4">\xa0'
            '</div><div class="crayon-line" '
            'id="crayon-593335fbe3111110694124-5"><span '
            'class="crayon-st">if</span><span class="crayon-h"> </span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">_vote_count</span><span class="crayon-h"> '
            '</span><span class="crayon-o">&gt;</span><span class="crayon-h"> '
            '</span><span class="crayon-r">self</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">_nodes_count</span><span class="crayon-h"> '
            '</span><span class="crayon-o">/</span><span class="crayon-h"> '
            '</span><span class="crayon-cn">2</span><span class="crayon-h"> '
            '</span><span class="crayon-st">then</span></div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe3111110694124-6"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">log</span><span class="crayon-sy">.</span><span '
            'class="crayon-e">info</span><span '
            'class="crayon-sy">(</span>“<span class="crayon-sy">[</span><span '
            'class="crayon-v">raft</span><span class="crayon-o">-</span><span '
            'class="crayon-v">srv</span><span class="crayon-sy">]</span><span '
            'class="crayon-h"> </span><span class="crayon-v">node</span><span '
            'class="crayon-h"> </span><span class="crayon-o">%</span><span '
            'class="crayon-i">d</span><span class="crayon-h"> </span><span '
            'class="crayon-e">won </span><span '
            'class="crayon-i">elections</span>”<span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">id</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line" '
            'id="crayon-593335fbe3111110694124-7"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-o">:</span><span '
            'class="crayon-e">_set_state</span><span '
            'class="crayon-sy">(</span><span class="crayon-r">self</span><span '
            'class="crayon-sy">.</span><span class="crayon-v">S</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">LEADER</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe3111110694124-8"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-o">:</span><span '
            'class="crayon-e">_set_leader</span><span '
            'class="crayon-sy">(</span><span class="crayon-sy">{</span><span '
            'class="crayon-h"> </span><span class="crayon-v">id</span><span '
            'class="crayon-o">=</span><span class="crayon-r">self</span><span '
            'class="crayon-sy">.</span><span class="crayon-v">id</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-v">uuid</span><span class="crayon-o">=</span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-i">uuid</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">}</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line" '
            'id="crayon-593335fbe3111110694124-9"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">_vote_count</span><span class="crayon-h"> '
            '</span><span class="crayon-o">=</span><span class="crayon-h"> '
            '</span><span class="crayon-cn">0</span></div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe3111110694124-10"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-o">:</span><span '
            'class="crayon-e">stop_election_timer</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line" '
            'id="crayon-593335fbe3111110694124-11"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-o">:</span><span '
            'class="crayon-e">start_heartbeater</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe3111110694124-12"><span '
            'class="crayon-st">else</span></div><div class="crayon-line" '
            'id="crayon-593335fbe3111110694124-13"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">log</span><span class="crayon-sy">.</span><span '
            'class="crayon-e">info</span><span '
            'class="crayon-sy">(</span>“<span class="crayon-sy">[</span><span '
            'class="crayon-v">raft</span><span class="crayon-o">-</span><span '
            'class="crayon-v">srv</span><span class="crayon-sy">]</span><span '
            'class="crayon-h"> </span><span class="crayon-v">node</span><span '
            'class="crayon-h"> </span><span class="crayon-o">%</span><span '
            'class="crayon-i">d</span><span class="crayon-h"> </span><span '
            'class="crayon-e">lost </span><span '
            'class="crayon-i">elections</span>”<span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">id</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe3111110694124-14"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-o">:</span><span '
            'class="crayon-e">_set_state</span><span '
            'class="crayon-sy">(</span><span class="crayon-r">self</span><span '
            'class="crayon-sy">.</span><span class="crayon-v">S</span><span '
            'class="crayon-sy">.</span><span class="crayon-v">IDLE</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line" '
            'id="crayon-593335fbe3111110694124-15"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-o">:</span><span '
            'class="crayon-e">_set_leader</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-v">msgpack</span><span '
            'class="crayon-sy">.</span><span class="crayon-t">NULL</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe3111110694124-16"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">_vote_count</span><span class="crayon-h"> '
            '</span><span class="crayon-o">=</span><span class="crayon-h"> '
            '</span><span class="crayon-cn">0</span></div><div '
            'class="crayon-line" id="crayon-593335fbe3111110694124-17"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-o">:</span><span '
            'class="crayon-e">start_election_timer</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe3111110694124-18"><span '
            'class="crayon-st">end</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0038 seconds] -->\r\n'
            '<p>现在我们给远程服务器发送请求（其他Tarantool副本）并计算来自每一个节点的票数，如果我们有一个quorum，我们就选定了一个leader，然后发送heartbeats，告诉其他节点我们还活着。如果我们在选举中失败了，我们可以发起另一场选举，一段时间之后，我们又可以投票或被选为leader。</p>\n'
            '<p>只要我们有一个quorum，选中一个leader，我们就可以将更新器指派给所有节点，但是只准它们为leader服务。</p>\n'
            '<p>这样我们就规范了流量，由于任务是由单一的节点派出，因此每一个更新器获得大约三分之一的任务，有了这样的设置，我们可以失去任何一台主机，因为如果某台主机出故障了，我们可以发起另一个选举，更新器也可以切换到另一个节点。然而，和其他分布式系统一样，有好几个问题与quorum有关。</p>\n'
            '<h3>“废弃”节点</h3>\n'
            '<p>如果各个数据中心之间失去联系了，那么我们需要有一些适当的机制去维持整个系统正常运转，还需要有一套机制能恢复系统的完整性。Raft成功地做到了这两点：<br>\n'
            '<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/97de50e237f5a064e28da960336470e4.png"></p>\n'
            '<p>假设Dataline数据中心掉线了，那么该位置的节点就变成了“废弃”节点，也就是说该节点就看不到其他节点了，集群中的其他节点可以看到这个节点丢失了，于是引发了另一个选举，然后新的集群节点（即上级节点）被选为leader，整个系统仍然保持运转，因为各个节点之间仍然保持一致性（大半部分节点仍然互相可见）。</p>\n'
            '<p>那么问题来了，与丢失的数据中心有关的更新器怎么样了呢？Raft说明书没有给这样的节点一个单独的名字，通常，没有quorum的节点和不能与leader联系的节点会被闲置下来。然而，它可以自己建立网络连接然后更新令牌，一般来说，令牌都是在连接模式时更新，但是，也许用一个连接“废弃”节点的更新器也可以更新令牌。一开始我们并不确定这样做有意义，这样不会导致冗余更新吗？</p>\n'
            '<p>这个问题我们需要在实施系统的过程中搞清楚。我们的第一个想法是不更新：我们有一致性、有quorum，丢失任何一个成员，我们都不应该更新。但是后来我们有了另一个想法，我们看一下Tarantool中的主主备份，假设有两个主节点和一个变量（key）X=1，我们同时在每一个节点上给这个变量赋一个新值，一个赋值为2，另一个赋值为3，然后，两个节点互相交换备份日志（就是X变量的值）。在一致性上，这样实施主主备份是很糟糕的（无意冒犯Tarantool开发者）。<br>\n'
            '<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/05b25c33db00dc6774bfff54d7760ecf.png"></p>\n'
            '<p>如果我们需要严格的一致性，这样是行不通的。然而，回忆一下我们的OAuth令牌是由以下两个重要因素组成：</p>\n'
            '<ul>\n'
            '<li>更新令牌，本质上永久有效；</li>\n'
            '<li>访问令牌，有效期为一个小时；</li>\n'
            '</ul>\n'
            '<p>我们的更新器有一个refresh函数，可以从一个更新令牌获取任意数量的访问令牌，一旦发布，它们都将保持一个小时内有效。</p>\n'
            '<p>我们考虑一下以下场景：两个follower节点正在和一个leader节点交互，它们更新自己的令牌，接收第一个访问令牌，这个访问令牌被复制，于是现在每一个节点都有这个访问令牌，然后，连接中断了，所以，其中一个follower节点变成了“废弃”节点，它没有quorum，既看不到leader也看不到其他follower，然而，我们允许我们的更新器去更新位于“废弃”节点上的令牌，如果“废弃”节点没有连接网络，那么整个方案都将停止运行。尽管如此，如果发生简单的网络拆分，更新器还是可以维持正常运行。</p>\n'
            '<p>一旦网络拆分结束，“废弃”节点重新加入集群，就会引发另一场选举或者数据交换。注意，第二和第三个令牌一样，也是“好的”。</p>\n'
            '<p>原始的集群成员恢复之后，下一次更新将只在一个节点上发生，然后备份。换句话来说，当集群拆分之后，被拆分的各个部分各自独立更新，但是一旦重新整合，数据一致性也因此恢复。通常，需要N/2+1个活动节点（对于一个3节点集群，就是需要2个活动节点）去保持集群正常运转。尽管如此，对我们而言，即使只有1个活动节点也足够了，它会发送尽可能多的外部请求。</p>\n'
            '<p>重申一下，我们已经讨论了请求数量逐渐增加的情况，在网络拆分或节点中断时期，我们能够提供一个单一的活动节点，我们会像平时一样更新这个节点，如果出现绝对拆分（即当一个集群被分成最大数量的节点，每一个节点有一个网络连接），如上所述，OAuth服务提供商的请求数量将提升至三倍。但是，由于这个事件发生的时间相对短暂，所以情况不是太糟，我们可不希望一直工作在拆分模式。通常情况下，系统处于有quorum和网络连接，并且所有节点都启动运行的状态。</p>\n'
            '<h3>分片</h3>\n'
            '<p>还有一个问题没有解决：我们已经达到了CPU上限，最直接的解决办法就是分片。<br>\n'
            '<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/83fb7821212be0306ef05d0356e6b96f.png"></p>\n'
            '<p>假设我们有两个数据库分片，每一个都有备份，有一个这样的函数，给定一些key值，就可以计算出哪一个分片上有所需要的数据。如果我们通过电子邮件分片，一部分地址存储在一个分片上，另一部分地址存储在另一个分片上，我们很清楚我们的数据在哪里。</p>\n'
            '<p>有两种方法可以分片。一种是客户端分片，我们选择一个返回分片数量的连续的分片函数，比如CRC32、Guava或Sumbur，这个函数在所有客户端的实现方式都一样。这种方法的一个明显优势在于数据库对分片一无所知，你的数据库正常运转，然后分片就发生了。</p>\n'
            '<p>然而，这种方法也存在一个很严重的缺陷。一开始，客户端非常繁忙。如果你想要一个新的分片，你需要把分片逻辑加进客户端，这里的最大的问题是，可能一些客户端在使用这种模式，而另一些客户端却在使用另一种完全不同的模式，而数据库本身却不知道有两种不同的分片模式。</p>\n'
            '<p>我们选择另一种方法—数据库内部分片，这种情况下，数据库代码变得更加复杂，但是为了折中我们可以使用简单的客户端，每一个连接数据库的客户端被路由到任意节点，由一个特殊函数计算出哪一个节点应该被连接、哪一个节点应该被控制。前面提到，由于数据库变得更加复杂，因此为了折中，客户端就变得更加简单了，但是这样的话，数据库就要对其数据全权负责。此外，最困难的事就是重新分片，如果你有一大堆客户端无法更新，相比之下，如果数据库负责管理自己的数据，那重新分片就会变得非常简单。</p>\n'
            '<p>具体怎样实施呢？<br>\n'
            '<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/e94160e3f5ba5cf6ef9c1952c4cf77a8.png"></p>\n'
            '<p>六边形代表Tarantool实体，有3个节点组成分片1，另一个3节点集群作为分片2，如果我们将所有节点互相连接，结果会怎样呢？根据Raft，我们可以知道每一个集群的状态，谁是leader服务器谁是follower服务器也一目了然，由于是集群内连接，我们还可以知道其他分片（例如它的leader分片或者follower分片）的状态。总的来说，如果访问第一个分片的用户发现这并不是他需要的分片，我们很清楚地知道应该指导他往哪里走。</p>\n'
            '<p>我们来看一些简单的例子。</p>\n'
            '<p>假设用户向驻留在第一个分片上的key发出请求，该请求被第一个分片上的某一个节点接收，这个节点知道谁是leader，于是将请求重新路由到分片leader，反过来，分片leader对这个key进行读或写，并且将结果反馈给用户。</p>\n'
            '<p>第二个场景：用户的请求到达第一个分片中的相同节点，但是被请求的key却在第二个分片上，这种情况也可以用类似的方法处理，第一个分片知道第二个分片上谁是leader，然后把请求送到第二个分片的leader进行转发和处理，再将结果返回给用户。</p>\n'
            '<p>这个方案十分简单，但也存在一定的缺陷，其中最大的问题就是连接数，在二分片的例子中，每一个节点连接到其他剩下的节点，连接数是6*5=30，如果再加一个3节点分片，那么连接数就增加到72，这会不会有点多呢？</p>\n'
            '<p>我们该如何解决这个问题呢？我们只需要增加一些Tarantool实例，我们叫它代理，而不叫分片或数据库，用代理去解决所有的分片问题：包括计算key值和定位分片领导。另一方面，Raft集群保持自包含，只在分片内部工作。当用户访问代理时，代理计算出所需要的分片，如果需要的是leader，就对用户作相应的重定向，如果不是leader，就将用户重定向至分片内的任意节点。<br>\n'
            '<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/19850d7316e4796ac8a04aec49c4ed50.png"></p>\n'
            '<p>由此产生的复杂性是线性的，取决于节点数量。现在一共3个节点，每个节点3个分片，连接数少了几倍。</p>\n'
            '<p>代理方案的设计考虑到了进一步规模扩展（当分片数量大于2时），当只有2个分片时，连接数不变，但是当分片数量增加时，连接数会剧减。分片列表存储在Lua配置文件中，所以，如果想要获取新列表，我们只需要重载代码就好了。</p>\n'
            '<p>综上所述，首先，我们进行主主备份，应用Raft算法，然后加入分片和代理，最后我们得到的是一个单块，一个集群，所以说，目前这个方案看上去是比较简单的。</p>\n'
            '<p>剩下的就是只读或只写令牌的的前端了，我们有更新器可以更新令牌，获得更新令牌后把它传到OAuth服务提供商，然后写一个新的访问令牌。</p>\n'
            '<p>前面说过我们的一些辅助逻辑耗尽了CPU资源，现在我们将这些辅助资源移到另一个集群上。</p>\n'
            '<p>辅助逻辑主要和地址簿有关，给定一个用户令牌，就会有一个对应的地址簿，地址簿上的数据量和令牌一样，为了不耗尽一台机器上的CPU资源，我们显然需要一个与副本相同的集群，只需要加一堆更新地址簿的更新器就可以了（这个任务比较少见，因此地址簿不会和令牌一起更新）。</p>\n'
            '<p>最后，通过整合这两个集群，我们得到一个相对简单的完整结构：<br>\n'
            '<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/229720c176a9c195da04aff536c54360.png"></p>\n'
            '<h3>令牌更新队列</h3>\n'
            '<p>为什么我们本可以使用标准队列却还要用自己的队列呢？这和我们的令牌更新模型有关。令牌一旦发布，有效期就是一个小时，当令牌快要到期时，需要进行更新，而令牌更新必须在某个特定的时间点之前完成。<br>\n'
            '<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/2d35c676f1ed569aae74c8933dcba90c.png"></p>\n'
            '<p>假设系统中断了，但是我们有一堆已到期的令牌，而在我们更新这些令牌的同时，又有其他令牌陆续到期，虽然我们最后肯定能全部更新完，但是如果我们先更新那些即将到期的（60秒内），再用剩下的资源去更新已经到期的，是不是会更合理一些？（优先级别最低的是还有4-5分钟才到期的令牌）</p>\n'
            '<p>用第三方软件来实现这个逻辑并不是件容易的事，然而，对于Tarantool来说却不费吹灰之力。看一个简单的方案：在Tarantool中有一个存储数据的元组，这个元组的一些ID设置了基础key值，为了得到我们需要的队列，我们只需要添加两个字段：status（队列令牌状态）和time（到期时间或其他预定义时间）。<br>\n'
            '<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/7e26ff22ccda5e92f04a9af8621b954d.png"></p>\n'
            '<p>现在我们考虑一下队列的两个主要功能—put和take。put就是写入新数据。给定一些负载，put时自己设置好status和time，然后写数据，这就是建立一个新的元组。</p>\n'
            '<p>至于take，是指建立一个基于索引的迭代器，挑出那些等待解决的任务（处于就绪状态的任务），然后核查一下是不是该接收这些任务了，或者这些任务是否已经到期了。如果没有任务，take就切换到wait模式。除了内置Lua，Tarantool还有一些所谓的通道，这些通道本质上是互联光纤同步原语。任何光纤都可以建立一个通道然后说“我在这等着”，剩下的其他光纤可以唤醒这个通道然后给它发送信息。</p>\n'
            '<p>等待中的函数（等待发布任务、等待指定时间或其他）建立一个通道，给通道贴上适当的标签，将通道放置在某个地方，然后进行监听。如果我们收到一个紧急的更新令牌，put会给通道发出通知，然后take接收更新任务。</p>\n'
            '<p>Tarantool有一个特殊的功能：如果一个令牌被意外发布，或者一个更新令牌被take接收，或者只是出现接收任务的现象，以上三种情况Tarantool都可以跟踪到客户端中断。我们将每一个连接与指定给该连接的任务联系起来，并将这些映射关系保持在会话保存中。假设由于网络中断导致更新过程失败，而且我们不知道这个令牌是否会被更新并被写回到数据库。于是，客户端发生中断了，搜索与失败过程相关的所有任务的会话保存，然后自动将它们释放。随后，任意已发布的任务都可以用同一个通道给另一个put发送信息，该put会快速接收和执行任务。</p>\n'
            '<p>实际上，具体实施方案并不需要太多代码：</p><!-- Crayon Syntax Highlighter v2.7.1.1 '
            '-->\r\n'
            '\r\n'
            '\t\t<div id="crayon-593335fbe311e529944758" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" touchscreen minimize '
            'scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; '
            'font-size: 13px !important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'function put(data)  \r\n'
            '    local t = box.space.queue:auto_increment({  \r\n'
            '        ‘r’, -- [[ status ]]  \r\n'
            '        util.time(), -- [[ time ]]  \r\n'
            '        data -- [[ any payload ]]  \r\n'
            '    })  \r\n'
            '  \r\n'
            '    return t  \r\n'
            'end  \r\n'
            '  \r\n'
            'function take(timeout)  \r\n'
            '    local start_time = util.time()  \r\n'
            '    local q_ind = box.space.tokens.index.queue  \r\n'
            '    local _,t  \r\n'
            '  \r\n'
            '    while true do  \r\n'
            '        local it = util.iter(q_ind, {‘r’}, {iterator = '
            'box.index.GE})  \r\n'
            '        _,t = it()  \r\n'
            '        if t and t[F.tokens.status] ~= ‘t’ then  \r\n'
            '            break  \r\n'
            '        end  \r\n'
            '  \r\n'
            '        local left = (start_time + timeout) — util.time()  \r\n'
            '        if left &lt;= 0 then return end  \r\n'
            '        t = q:wait(left)  \r\n'
            '        if t then break end  \r\n'
            '    end  \r\n'
            '    t = q:taken(t)  \r\n'
            '    return t  \r\n'
            'end  \r\n'
            '  \r\n'
            'function queue:taken(task)  \r\n'
            '    local sid = box.session.id()  \r\n'
            '    if self._consumers[sid] == nil then  \r\n'
            '        self._consumers[sid] = {}  \r\n'
            '    end  \r\n'
            '    local k = task[self.f_id]  \r\n'
            '    local t = self:set_status(k, ‘t’)  \r\n'
            '  \r\n'
            '    self._consumers[sid][k] = {util.time(), '
            'box.session.peer(sid), t}  \r\n'
            '    self._taken[k] = sid  \r\n'
            '    return t  \r\n'
            'end  \r\n'
            '  \r\n'
            'function on_disconnect()  \r\n'
            '    local sid = box.session.id  \r\n'
            '    local now = util.time()  \r\n'
            '  \r\n'
            '    if self._consumers[sid] then  \r\n'
            '        local consumers = self._consumers[sid]  \r\n'
            '        for k, rec in pairs(consumers) do  \r\n'
            '            time, peer, task = unpack(rec)  \r\n'
            '  \r\n'
            '            local v = '
            'box.space[self.space].index[self.index_primary]:get({k})  \r\n'
            '            if v and v[self.f_status] == ‘t’ then  \r\n'
            '                v = self:release(v[self.f_id])  \r\n'
            '            end  \r\n'
            '        end  \r\n'
            '        self._consumers[sid] = nil  \r\n'
            '    end  \r\n'
            'end</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-4">4</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-5">5</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-6">6</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-7">7</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-8">8</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-9">9</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-10">10</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-11">11</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-12">12</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-13">13</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-14">14</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-15">15</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-16">16</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-17">17</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-18">18</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-19">19</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-20">20</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-21">21</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-22">22</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-23">23</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-24">24</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-25">25</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-26">26</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-27">27</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-28">28</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-29">29</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-30">30</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-31">31</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-32">32</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-33">33</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-34">34</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-35">35</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-36">36</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-37">37</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-38">38</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-39">39</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-40">40</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-41">41</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-42">42</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-43">43</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-44">44</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-45">45</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-46">46</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-47">47</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-48">48</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-49">49</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-50">50</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-51">51</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-52">52</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-53">53</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-54">54</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-55">55</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-56">56</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-57">57</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-58">58</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-59">59</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-593335fbe311e529944758-60">60</div><div '
            'class="crayon-num" '
            'data-line="crayon-593335fbe311e529944758-61">61</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-1"><span '
            'class="crayon-t">function</span><span class="crayon-h"> '
            '</span><span class="crayon-e">put</span><span '
            'class="crayon-sy">(</span><span class="crayon-v">data</span><span '
            'class="crayon-sy">)</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-2"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-i">local</span><span class="crayon-h"> </span><span '
            'class="crayon-v">t</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-v">box</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">space</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">queue</span><span class="crayon-o">:</span><span '
            'class="crayon-e">auto_increment</span><span '
            'class="crayon-sy">(</span><span class="crayon-sy">{</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-3"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span>‘<span '
            'class="crayon-i">r</span>’<span class="crayon-sy">,</span><span '
            'class="crayon-h"> </span><span class="crayon-o">--</span><span '
            'class="crayon-h"> </span><span class="crayon-sy">[</span><span '
            'class="crayon-sy">[</span><span class="crayon-h"> </span><span '
            'class="crayon-i">status</span><span class="crayon-h"> '
            '</span><span class="crayon-sy">]</span><span '
            'class="crayon-sy">]</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-4"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">util</span><span class="crayon-sy">.</span><span '
            'class="crayon-e">time</span><span class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span><span class="crayon-sy">,</span><span '
            'class="crayon-h"> </span><span class="crayon-o">--</span><span '
            'class="crayon-h"> </span><span class="crayon-sy">[</span><span '
            'class="crayon-sy">[</span><span class="crayon-h"> </span><span '
            'class="crayon-i">time</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">]</span><span class="crayon-sy">]</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-5"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">data</span><span class="crayon-h"> </span><span '
            'class="crayon-o">--</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">[</span><span class="crayon-sy">[</span><span '
            'class="crayon-h"> </span><span class="crayon-e">any </span><span '
            'class="crayon-i">payload</span><span class="crayon-h"> '
            '</span><span class="crayon-sy">]</span><span '
            'class="crayon-sy">]</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-6"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-sy">}</span><span class="crayon-sy">)</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-7"><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-8"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">return</span><span class="crayon-h"> '
            '</span><span class="crayon-i">t</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-9"><span '
            'class="crayon-st">end</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-10"><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-11"><span '
            'class="crayon-t">function</span><span class="crayon-h"> '
            '</span><span class="crayon-e">take</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-v">timeout</span><span '
            'class="crayon-sy">)</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-12"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-e">local </span><span '
            'class="crayon-v">start_time</span><span class="crayon-h"> '
            '</span><span class="crayon-o">=</span><span class="crayon-h"> '
            '</span><span class="crayon-v">util</span><span '
            'class="crayon-sy">.</span><span class="crayon-e">time</span><span '
            'class="crayon-sy">(</span><span class="crayon-sy">)</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-13"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-e">local </span><span '
            'class="crayon-v">q_ind</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-v">box</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">space</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">tokens</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">index</span><span '
            'class="crayon-sy">.</span><span class="crayon-e">queue\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-14"><span '
            'class="crayon-e">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-i">local</span><span class="crayon-h"> </span><span '
            'class="crayon-v">_</span><span class="crayon-sy">,</span><span '
            'class="crayon-i">t</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-15"><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-16"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">while</span><span class="crayon-h"> '
            '</span><span class="crayon-t">true</span><span class="crayon-h"> '
            '</span><span class="crayon-st">do</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-17"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-e">local </span><span '
            'class="crayon-v">it</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-v">util</span><span class="crayon-sy">.</span><span '
            'class="crayon-e">iter</span><span class="crayon-sy">(</span><span '
            'class="crayon-v">q_ind</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">{</span>‘<span class="crayon-i">r</span>’<span '
            'class="crayon-sy">}</span><span class="crayon-sy">,</span><span '
            'class="crayon-h"> </span><span class="crayon-sy">{</span><span '
            'class="crayon-v">iterator</span><span class="crayon-h"> '
            '</span><span class="crayon-o">=</span><span class="crayon-h"> '
            '</span><span class="crayon-v">box</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">index</span><span '
            'class="crayon-sy">.</span><span class="crayon-v">GE</span><span '
            'class="crayon-sy">}</span><span class="crayon-sy">)</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-18"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">_</span><span class="crayon-sy">,</span><span '
            'class="crayon-v">t</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-e">it</span><span class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-19"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">if</span><span class="crayon-h"> </span><span '
            'class="crayon-i">t</span><span class="crayon-h"> </span><span '
            'class="crayon-st">and</span><span class="crayon-h"> </span><span '
            'class="crayon-v">t</span><span class="crayon-sy">[</span><span '
            'class="crayon-v">F</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">tokens</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">status</span><span '
            'class="crayon-sy">]</span><span class="crayon-h"> </span><span '
            'class="crayon-o">~</span><span class="crayon-o">=</span><span '
            'class="crayon-h"> </span>‘<span class="crayon-i">t</span>’<span '
            'class="crayon-h"> </span><span class="crayon-st">then</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-20"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-st">break</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-21"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">end</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-22"><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-23"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-e">local </span><span '
            'class="crayon-v">left</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-v">start_time</span><span class="crayon-h"> '
            '</span><span class="crayon-o">+</span><span class="crayon-h"> '
            '</span><span class="crayon-v">timeout</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span>—<span '
            'class="crayon-h"> </span><span class="crayon-v">util</span><span '
            'class="crayon-sy">.</span><span class="crayon-e">time</span><span '
            'class="crayon-sy">(</span><span class="crayon-sy">)</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-24"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">if</span><span class="crayon-h"> </span><span '
            'class="crayon-v">left</span><span class="crayon-h"> </span><span '
            'class="crayon-o">&lt;=</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">0</span><span class="crayon-h"> </span><span '
            'class="crayon-st">then</span><span class="crayon-h"> </span><span '
            'class="crayon-st">return</span><span class="crayon-h"> '
            '</span><span class="crayon-st">end</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-25"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">t</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-v">q</span><span class="crayon-o">:</span><span '
            'class="crayon-e">wait</span><span class="crayon-sy">(</span><span '
            'class="crayon-v">left</span><span class="crayon-sy">)</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-26"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">if</span><span class="crayon-h"> </span><span '
            'class="crayon-i">t</span><span class="crayon-h"> </span><span '
            'class="crayon-st">then</span><span class="crayon-h"> </span><span '
            'class="crayon-st">break</span><span class="crayon-h"> '
            '</span><span class="crayon-st">end</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-27"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">end</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-28"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">t</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-v">q</span><span class="crayon-o">:</span><span '
            'class="crayon-e">taken</span><span '
            'class="crayon-sy">(</span><span class="crayon-v">t</span><span '
            'class="crayon-sy">)</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-29"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">return</span><span class="crayon-h"> '
            '</span><span class="crayon-i">t</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-30"><span '
            'class="crayon-st">end</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-31"><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-32"><span '
            'class="crayon-t">function</span><span class="crayon-h"> '
            '</span><span class="crayon-v">queue</span><span '
            'class="crayon-o">:</span><span class="crayon-e">taken</span><span '
            'class="crayon-sy">(</span><span class="crayon-v">task</span><span '
            'class="crayon-sy">)</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-33"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-e">local </span><span '
            'class="crayon-v">sid</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-v">box</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">session</span><span '
            'class="crayon-sy">.</span><span class="crayon-e">id</span><span '
            'class="crayon-sy">(</span><span class="crayon-sy">)</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-34"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">if</span><span class="crayon-h"> </span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">_consumers</span><span '
            'class="crayon-sy">[</span><span class="crayon-v">sid</span><span '
            'class="crayon-sy">]</span><span class="crayon-h"> </span><span '
            'class="crayon-o">==</span><span class="crayon-h"> </span><span '
            'class="crayon-e">nil </span><span '
            'class="crayon-st">then</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-35"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">_consumers</span><span '
            'class="crayon-sy">[</span><span class="crayon-v">sid</span><span '
            'class="crayon-sy">]</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">{</span><span class="crayon-sy">}</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-36"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">end</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-37"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-i">local</span><span class="crayon-h"> </span><span '
            'class="crayon-v">k</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-v">task</span><span class="crayon-sy">[</span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">f_id</span><span class="crayon-sy">]</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-38"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-i">local</span><span class="crayon-h"> </span><span '
            'class="crayon-v">t</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-r">self</span><span class="crayon-o">:</span><span '
            'class="crayon-e">set_status</span><span '
            'class="crayon-sy">(</span><span class="crayon-v">k</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span>‘<span '
            'class="crayon-i">t</span>’<span class="crayon-sy">)</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-39"><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-40"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">_consumers</span><span '
            'class="crayon-sy">[</span><span class="crayon-v">sid</span><span '
            'class="crayon-sy">]</span><span class="crayon-sy">[</span><span '
            'class="crayon-v">k</span><span class="crayon-sy">]</span><span '
            'class="crayon-h"> </span><span class="crayon-o">=</span><span '
            'class="crayon-h"> </span><span class="crayon-sy">{</span><span '
            'class="crayon-v">util</span><span class="crayon-sy">.</span><span '
            'class="crayon-e">time</span><span class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span><span class="crayon-sy">,</span><span '
            'class="crayon-h"> </span><span class="crayon-v">box</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">session</span><span '
            'class="crayon-sy">.</span><span class="crayon-e">peer</span><span '
            'class="crayon-sy">(</span><span class="crayon-v">sid</span><span '
            'class="crayon-sy">)</span><span class="crayon-sy">,</span><span '
            'class="crayon-h"> </span><span class="crayon-v">t</span><span '
            'class="crayon-sy">}</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-41"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">_taken</span><span '
            'class="crayon-sy">[</span><span class="crayon-v">k</span><span '
            'class="crayon-sy">]</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-e">sid\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-42"><span '
            'class="crayon-e">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">return</span><span class="crayon-h"> '
            '</span><span class="crayon-i">t</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-43"><span '
            'class="crayon-st">end</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-44"><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-45"><span '
            'class="crayon-t">function</span><span class="crayon-h"> '
            '</span><span class="crayon-e">on_disconnect</span><span '
            'class="crayon-sy">(</span><span class="crayon-sy">)</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-46"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-e">local </span><span '
            'class="crayon-v">sid</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-v">box</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">session</span><span '
            'class="crayon-sy">.</span><span class="crayon-e">id\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-47"><span '
            'class="crayon-e">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-e">local </span><span '
            'class="crayon-v">now</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-v">util</span><span class="crayon-sy">.</span><span '
            'class="crayon-e">time</span><span class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-48"><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-49"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">if</span><span class="crayon-h"> </span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">_consumers</span><span '
            'class="crayon-sy">[</span><span class="crayon-v">sid</span><span '
            'class="crayon-sy">]</span><span class="crayon-h"> </span><span '
            'class="crayon-st">then</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-50"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-e">local </span><span '
            'class="crayon-v">consumers</span><span class="crayon-h"> '
            '</span><span class="crayon-o">=</span><span class="crayon-h"> '
            '</span><span class="crayon-r">self</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">_consumers</span><span '
            'class="crayon-sy">[</span><span class="crayon-v">sid</span><span '
            'class="crayon-sy">]</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-51"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">for</span><span class="crayon-h"> </span><span '
            'class="crayon-v">k</span><span class="crayon-sy">,</span><span '
            'class="crayon-h"> </span><span class="crayon-e">rec </span><span '
            'class="crayon-st">in</span><span class="crayon-h"> </span><span '
            'class="crayon-e">pairs</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-v">consumers</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-st">do</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-52"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-v">time</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-v">peer</span><span class="crayon-sy">,</span><span '
            'class="crayon-h"> </span><span class="crayon-v">task</span><span '
            'class="crayon-h"> </span><span class="crayon-o">=</span><span '
            'class="crayon-h"> </span><span '
            'class="crayon-e">unpack</span><span '
            'class="crayon-sy">(</span><span class="crayon-v">rec</span><span '
            'class="crayon-sy">)</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-53"><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-54"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-i">local</span><span class="crayon-h"> '
            '</span><span class="crayon-v">v</span><span class="crayon-h"> '
            '</span><span class="crayon-o">=</span><span class="crayon-h"> '
            '</span><span class="crayon-v">box</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">space</span><span '
            'class="crayon-sy">[</span><span class="crayon-r">self</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">space</span><span '
            'class="crayon-sy">]</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">index</span><span '
            'class="crayon-sy">[</span><span class="crayon-r">self</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">index_primary</span><span '
            'class="crayon-sy">]</span><span class="crayon-o">:</span><span '
            'class="crayon-e">get</span><span class="crayon-sy">(</span><span '
            'class="crayon-sy">{</span><span class="crayon-v">k</span><span '
            'class="crayon-sy">}</span><span class="crayon-sy">)</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-55"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-st">if</span><span class="crayon-h"> '
            '</span><span class="crayon-i">v</span><span class="crayon-h"> '
            '</span><span class="crayon-st">and</span><span class="crayon-h"> '
            '</span><span class="crayon-v">v</span><span '
            'class="crayon-sy">[</span><span class="crayon-r">self</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">f_status</span><span '
            'class="crayon-sy">]</span><span class="crayon-h"> </span><span '
            'class="crayon-o">==</span><span class="crayon-h"> </span>‘<span '
            'class="crayon-i">t</span>’<span class="crayon-h"> </span><span '
            'class="crayon-st">then</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line crayon-striped-line" '
            'id="crayon-593335fbe311e529944758-56"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-v">v</span><span class="crayon-h"> '
            '</span><span class="crayon-o">=</span><span class="crayon-h"> '
            '</span><span class="crayon-r">self</span><span '
            'class="crayon-o">:</span><span '
            'class="crayon-e">release</span><span '
            'class="crayon-sy">(</span><span class="crayon-v">v</span><span '
            'class="crayon-sy">[</span><span class="crayon-r">self</span><span '
            'class="crayon-sy">.</span><span class="crayon-v">f_id</span><span '
            'class="crayon-sy">]</span><span class="crayon-sy">)</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-57"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-st">end</span><span '
            'class="crayon-h">\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-58"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">end</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-59"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-r">self</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">_consumers</span><span '
            'class="crayon-sy">[</span><span class="crayon-v">sid</span><span '
            'class="crayon-sy">]</span><span class="crayon-h"> </span><span '
            'class="crayon-o">=</span><span class="crayon-h"> </span><span '
            'class="crayon-e">nil\xa0\xa0</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-593335fbe311e529944758-60"><span '
            'class="crayon-e">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">end</span><span class="crayon-h">\xa0\xa0'
            '</span></div><div class="crayon-line" '
            'id="crayon-593335fbe311e529944758-61"><span '
            'class="crayon-st">end</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0112 seconds] -->\r\n'
            '<p>Put只是接收用户想要插入队列的所有数据，并将其写入某个空间，如果是一个简单的索引式FIFO队列，设置好状态和当前时间，然后返回该任务。</p>\n'
            '<p>接下来要和take有点关系了，但仍然比较简单。我们建立一个迭代器，等待接收新任务。Taken函数只需要将任务标记成“已接收”，但有一点很重要，taken函数还能记住哪个任务是由哪个进程接收的。On_disconnect函数可以发布某个特定连接，或者发布由某个特定用户接收的所有任务。</p>\n'
            '<h3>是否有可选方案？</h3>\n'
            '<p>当然有。我们本可以使用任意数据库，但是，不管我们选用什么数据库，我们都要建立一个队列用来处理外部系统、处理更新等等问题。我们不能仅仅按需更新令牌，因为那样会产生不可预估的工作量，不管怎样，我们需要保持我们的系统充满活力，但是那样，我们就要将延期的任务也插入队列，并且保证数据库和队列之间的一致性，我们还要被迫使用一个quorum的容错队列。此外，如果我们把数据同时放在RAM和一个（考虑到工作量）可能要放入内存的队列中，那么我们就要消耗更多资源。</p>\n'
            '<p>在我们的方案中，数据库存储令牌，队列逻辑只需要占用7个字节（每个元组只需要7个额外的字节，就可以搞定队列逻辑！），如果使用其他的队列形式，需要占用的空间就多得多了，大概是内存容量的两倍。</p>\n'
            '<h3>总结</h3>\n'
            '<p>首先，我们解决了连接中断的问题，这个问题十分常见，使用上述的系统让我们摆脱了这个困扰。</p>\n'
            '<p>分片帮助我们扩展内存，然后，我们将连接数从二次方减少到了线性，优化了业务任务的队列逻辑：如果发生延期，更新我们所能更新的一切令牌，这些延期并非都是我们的故障引起的，有可能是Google、Microsoft或者其他服务端对OAuth服务提供商进行改造，然后导致我们这边出现大量的未更新的令牌。</p>\n'
            '<p>去数据库内部运算吧，走近数据，你将拥有便利、高效、可扩展和灵活的运算体验！</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111276" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111276votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111276" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i>  收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2013/02/NoSQL-Not-Only-SQL.jpg'],
 'tags': 'IT技术,NoSQL,数据库',
 'thumb_up_num': 1,
 'title': 'NoSQL 数据库的主主备份',
 'url': 'http://blog.jobbole.com/111276/',
 'url_obj_id': 'b1bf4796b153541f055976afe97caa18'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:37:45 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111268/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:37:45 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:45 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 493
2017-06-04 21:37:45 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2017-06-04 21:37:45 [elasticsearch] DEBUG: > 如何把好技术变为好产品？
2017-06-04 21:37:45 [elasticsearch] DEBUG: < {"tokens":[{"token":"如何","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"好","start_offset":3,"end_offset":4,"type":"CN_CHAR","position":1},{"token":"技术","start_offset":4,"end_offset":6,"type":"CN_WORD","position":2},{"token":"变为","start_offset":6,"end_offset":8,"type":"CN_WORD","position":3},{"token":"好","start_offset":8,"end_offset":9,"type":"CN_CHAR","position":4},{"token":"产品","start_offset":9,"end_offset":11,"type":"CN_WORD","position":5}]}
2017-06-04 21:37:45 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:45 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 652
2017-06-04 21:37:45 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:37:45 [elasticsearch] DEBUG: > 管理,产品,创业,创意
2017-06-04 21:37:45 [elasticsearch] DEBUG: < {"tokens":[{"token":"管理","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"产品","start_offset":3,"end_offset":5,"type":"CN_WORD","position":1},{"token":"创业","start_offset":6,"end_offset":8,"type":"CN_WORD","position":2},{"token":"创","start_offset":6,"end_offset":7,"type":"CN_WORD","position":3},{"token":"业","start_offset":7,"end_offset":8,"type":"CN_CHAR","position":4},{"token":"创意","start_offset":9,"end_offset":11,"type":"CN_WORD","position":5},{"token":"创","start_offset":9,"end_offset":10,"type":"CN_WORD","position":6},{"token":"意","start_offset":10,"end_offset":11,"type":"CN_CHAR","position":7}]}
2017-06-04 21:37:45 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:45 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/11035e2f16017675fe365a9ed61662b5 HTTP/1.1" 200 175
2017-06-04 21:37:45 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/11035e2f16017675fe365a9ed61662b5 [status:200 request:0.022s]
2017-06-04 21:37:45 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111268/", "comment_num": 0, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - Lada 翻译，郑芸 校稿。未经许可，禁止转载！英文出处：Paul Jackson。欢迎加入翻译组。产品化是什么意思？\n大多数创业始于极好的创意和技术专长，但好技术和好产品有着天壤之别。这篇文章写给那些想构建用户实际使用的产品，而不是只解决问题但无法形成规模的技术。我用来形容这个过程的动词就是“产品化”。产品化意味着把某种东西（如好的创意、技术等）转化为产品。\n我将探讨产品化的原则，并通过一个特定的例子来深入剖析。我所用的例子是 x.ai 的 Amy，一个扮演私人助手角色的智能机器人。2016 年，Amy 成为创业公司和 VC 社区必需的会议安排助手。\n我选择 Amy 缘于她是人工智能发展为消费品的一个典例，也是技术成功“产品化”的典例。\nAmy还值得一提的是因为 x.ai （创造Amy的公司） 自称“反精益生产”。作为产品人，我们都熟悉精益创业。精益生产成为产品开发的主流哲学有段时间了。因此看到傲称“反精益生产”的创业公司出现是有趣的。\n\n感谢 x.ai 。\n如果我们想象一条“精益”的轴，在轴一端的是像 Airbnb、Dropbox 这样的独角兽公司。他们都是由 Y Combinator 铸造的“精益生产”典型。在轴另一端则是像特斯拉这样的公司。没人会把埃隆·马斯克评价为一个精益的实践者。他所做一切都是为了登月计划，需要巨额投资。\n在特斯拉的左边是一群 AI 公司，比如 x.ai 和 Clarif.ai 这些明确声明“精益生产不适合我们”的公司。x.ai 需要三年的研发投资，才能将产品投放市场。反精益生产则需要更多的前期资金，也提供更少的迭代和方向转变的机会。反精益生产的公司在产品投放市场时，需要对他们的用户和用户需求更有把握。\n为什么产品化重要？\n产品化意味着把愿景转化为可用的、具有全球吸引力的产品。产品化的主要好处在于它帮你跨越中断期（Chasm）。Geoffrey Moore 定义的有名的市场中断期，区分了吸引少数技术极客的公司与吸引大众市场的公司。他的同名书籍探索了影响创业公司飞跃中断期能力的所有因素。产品化正是其中一个方面。\n产品化同样可防止堆栈谬误（Stack Fallacy）。该想法来自 Oracle 曾经的产品经理，Storm Ventures 的现合伙人：Anshu Sharma。堆栈谬误意味着，在所有给出的技术堆栈中，每个提供者都高估了自己产业层的价值；同样也低估了其他产业层的价值，尤其是那些堆栈中较高层级的提供者。\n数据库公司认为 SaaS 应用“不过是种数据库应用”，错误地自信他们也能轻易地开发、竞争并且赢得新市场，堆栈谬误正是导致他们有这种想法的原因。\n从 Anshu 的观点来看，那些占上风的公司赢在用户体验层，他们把理解终端用户的背景、动机和期望结果做到了极致。\n\n作为一个产品经理，我支持他的看法。以我的经验看来，赢得市场意味着思考用户价值，而不是盯着屏幕；产品化意味着关注产品效果而不是产品特性。\n我们都熟悉产品的”jobs-to-be-done“理论。人们不使用产品是因为他们喜欢该产品本身。相反，他们出租它能获得具体成果。我认为 Clay Christensen 的理论今年获得了很大进展是有充分原因的。我坚信，多数实用产品都是帮助人类获得成果的工具，只有情感方面的东西能真正地超越它，比如品牌和美学。\n产品化意味着关注用户想要达成的结果，而不是底层的技术。因为在指数级的竞争中，这比以往任何时候都更加重要。在 Mary Meeker 的 2016 年互联网报告中，有两条统计结果映入我眼帘。第一条，在美国，人们80%的时间只花在三个应用上。不必费心去猜是哪三个应用。Nielsen data 在2016年底发布的数据显示，排名前 8 的移动应用被两家公司包揽：Google 和 Facebook。\n\n第二条统计结果，50%的人一个月不下载新应用。这表明，新的市场进入者面临的挑战范围只在于获得关注。因为有太多选择，新应用的采用率已经趋于平稳。对创业公司而言，只有短暂时间给顾客留下印象。如果不能在这片刻表达你的价值，你就输了。\n产品的三大支柱\n而这对产品来说有什么意义？有三大支柱：用户引导（Onboarding）、核心任务的完成（Core Task Completion ）和管理（Administration）。你应该用这种方式思考你的产品。贯穿这三个核心支柱的量是用户的熟悉度。每个支柱上的设计，都要考虑用户与产品交互时，随时间变化的心态。\n\n用户对产品的理解始于用户引导。在这点上，他们对你所做的东西会只有极少的了解。如果用户在用户引导后继续，并开始使用产品去完成任务，他们必然会变得更加熟悉产品。假如他们继续使用，该产品将会成为他们生活的一部分，那么产品的管理就逐渐地变得重要。\n可能在这三个支柱的左边还会加上第四个支柱：用户获取（Acquisition）。用户获取发生在用户第一次知道你产品的时候。我不会介绍用户获取的全部细节，因为它是市场营销技术的一部分，属于产品范围外。但重要的是，要记住产品和营销都是相同统一体的组成部分。\nChamath Palihapitiya 在观察后做了很好的应用，\n「用户只有三个状态：从没听过；尝试过；在使用。你要管理的是状态改变。」\n理解用户的心态是成功发展每个支柱的关键。你需要询问用户在每个状态的反馈。在用户获取状态，用户不了解产品，不了解产品的任何事。他们会说：『你是什么产品？为什么我要使用你？为什么我需要那么在意？』在用户引导时，他们会说：『我在考虑，我想花时间使用你。我会想起你，但你仍需使我信服。』\n一旦用户做到了核心任务的完成，他们就经过了一个重要里程碑。这时他们会讲：『我明白了，我理解了你是关于什么的，并且看到了你的价值。』而管理支柱则与定制有关，用户会说：『我得到了你提供的价值，但希望你适应我的需求。』\n\n如果你熟悉 Dave McClure 的”海盗指标“，可以把它映射到这四个支柱。在左边是获取(Acquisition)指标，激活(Activation)出现在用户引导，留存(Retention)和收入(Revenue)是核心任务，推荐(Referral)通常在管理阶段。这样你可以实际地预计用户对产品的支持。\n\n产品价值\n赢在产品，就是赢在用户价值的思考。如果你想了解更多关于产品价值的信息，Jerry Chen（ 他和 Reid Hoffman、Josh Elman 共同工作于 Greylock Partners）有一个叫做价值单元（ Unit of Value）的平台非常值得一读。Jerry 评估了像 Salesforce、Dropbox 和 Docker 这些独角兽公司的价值单元。然后他论证了他们是如何实现和影响了服务价值的。\n产品是”价值交付的载体“。假如你正在开发新产品，或是有想法要开发，你需要回答的基础问题是：它能实现怎样的价值单元？答案会影响你如何定价、确定规模和销售产品。用户获取和承诺的价值（promise of value）相联系。用户引导需要推算价值（demonstrate of value）。实现的价值（delivery of value）体现在核心任务的完成。管理与价值扩展（extension of value）有关。它帮助用户获得更多价值，同样也是你可以追加销售产品的地方。\n\n一旦理解了你产品的价值单元，发展它就会更容易。对发展需求排出优先级列表是产品经理角色的基础能力。我发现的这个 2×2 网格（有名的影响/成就网格）是一个用四象限进行优先级划分的高效工具。Hunter Walk （YouTube的产品掌门人）在Intercom团队内是该工具有名的支持者。\n需要考虑的是，所有的路径事项都应该位于影响网格的上半部分。如果一个事项不能帮助兑现你的价值单元，它就不应该存在。战略主题（ Strategic Themes）应该放在右上象限。在用关键的利益相关点填充这个网格时，产品经理可以对产品团队应该做什么和不应该做什么达成共识。\n举个例子，下面是我在 2017 年开发的一款名为 Newsmart 的产品路径图，这是一款利用华尔街日报内容制作的商务英语学习产品。\n\n任何产品给定的 1.0 版本都只包含任务完成这一支柱。没有人会从建立用户引导开始。它只是一条指向核心产品的路径。产品化意味着从这一支柱向外推进，并增加额外的支柱。产品化意味着建立路径让用户找到你的产品，了解它，使用它，然后定制它。\n在 B2B 领域，由于买家和用户是不同的人，所以存在另外的复杂性。买方的价值单元与用户的价值单元会非常不同。我们很容易忽视买家的需求，不断地改善终端用户的体验。而买家是最终决定是否投资予你的人。产品需要同时论证并实现价值。\n\n尽管管理支柱在消费产品中没有被太多考虑，但在 B2B 它是最重要的元素之一。买家如何评估他们的投资能否得到回报?通常通过告知他们用户是否在使用该产品、使用多久的指标板或报告。在 Newsmart 里，我们很长一段时间忽视了这问题的重要性。我们很晚才意识到开发一套管理软件的重要性，这意味着不仅是用户，买家也能看到价值。\n\n从消费者领域开始的产品在转而面向企业后，进入了一个完全不同的领域。你该如何沟通以及市场如何变化。你不再需要说服单一用户，却需要使各种各样的利益相关者信服。要在企业中取得成功就需经历许多障碍。 Slack 最近宣布了与 Google 的 G-Suite 合作。在我看来，这表明即使是他们也在设法解决这个问题。他们在终端用户中获得了良好的支持，却要奋力地让他们的产品进入企业市场，并意识到 Google 在这一领域走得更远。\n产品设计模式\n如果你检查这四根支柱，每一根支柱的讨论都是相当超前的。设计模式都已建立，可以转换后适应于你的产品中。没有必要重新发明轮子，也不需要每次都经历相同的学习曲线。\n例如用户引导。有如 Samuel Hulick 这样有趣的人。 围绕用户引导，他建立了一套名为 User Onboard 的完整业务。他的专长是『分解』，分解评估不同产品的用户引导情况，并指出每种产品的优点和缺点。产品经理可以打开 User Onboard，快速了解不同产品在多个垂直领域的最佳实践。\n用户引导的核心是”Aha！时刻“。Aha！是指用户理解了产品价值和产品与他关系的瞬间。用户引导的成功意味着让用户尽快迎来 Aha！时刻。随着争夺用户注意力的竞争越来越激烈，进入Aha！时刻的时间需要更短。\n\n此外，Chamath Palihapitiya 是一个很好的参考。他是 Facebook 增长团队 2008 年至 2012 年间的负责人。在沟通方式上，他非常直接、粗鲁。偶然发现他在 YouTube 上的这段经典言论，他直接拒绝关于增长和”增长黑客“的很多伪科学。对他而言，增长就是了解产品所有的价值单元。\n\n如果有人对用户引导的重要性有所怀疑，我就把 Twitter 作为一个很好的反例，来说明如果不正确对待它的后果。2016 年对 Twitter 来说不是很顺。这一年公司业务趋于水平、增长巨减、股价持续低迷。\n问题的核心是未能联系起它的价值单元。太多的人仍然不了解 Twitter 是什么、以及为什么要使用它。这是市场营销的失败，也是用户引导的失败。有较高比例的人注册了却不发推特消息、也不关注任何人。如果没有进行到这些阶段，就意味着永远无法获得”Aha！时刻“。如果不能获得”Aha！时刻“，就无法理解产品价值。不能理解产品价值，用户就会流失。\n\n为了深入探讨，来看一个用户引导的成功例子。我选择 x.ai 的 Amy 原因，从根本上讲，是由于她是种技术，而不是产品。开发人工智能和决策引擎使用了相当多的资源。因此当她面向市场时，可以应用在许多方向。\n\n我认为 x.ai 在产品的角度上做了很多出色的选择。Amy 的用户引导简单但高效。一旦你注册，她就会给你发电子邮件，并说：”你好，我是你的私人助理，很高兴能来到你的面板“，然后让你进行一些操作。我们都会接收并回复电子邮件。因此，这样的交互是常见的。\n如果你检查 Amy 的第一封电子邮件，她清楚地说明了价值定位。”魔法“，她说，”在13次会议后发生。“为了展示价值定位，她会为你安排第一次会议。她发送邀请并问：”你要在这周四的时候加个会议提醒吗？“接受会议后，会看到它落在你的日历上，然后你就理解了她的价值。这正是”Aha！时刻“。突然之间，Amy 从某种新奇陌生的东西变得熟悉了。这是一个大家都能理解的设计模式。\nAmy 可以容易地保持会议日程安排的技术。在产品化过程中，x.ai 评估我们的心智模型，并利用了一些已知的东西，而不是引入外来的东西。\n\nAmy 核心任务的完成出现在她与各种收件人的邮件之中。在这些邮件交换中，她协调不同的日程表，最终安排一个会议。\n在管理方面，个人偏好对 Amy 来说是关键。多数人都不希望周日上午 9 点开会。我试着在早上安排我多数的面对面会议，让下午空闲，而我的设置也反映了这点。当然，偏好会随时间改变。当设置更新时，Amy 会给你发邮件确认。\n对我来说，Amy 是一个优秀的当代产品化例子。她的价值单元是节省的时间。Amy 根据你的使用情况进行计算，并发送更新来略述她每个月节省了你多少小时。这相当于每年节省了几十个小时。\n支付\n在某些情况下，多数产品将会从用户那获得报酬。这是常被忽视的另一步。这方面的设计模式也有很好的发展。有许多”选择架构“的研究和支付计划的介绍。\n\n目标用户的可支付范围同样值得评估。Newsmart 主要面向亚洲销售。我们通过 Stripe 支持 PayPal 和信用卡。一段时间后，用户反馈的一致的信息是：“我想付钱，但无法支付！”我们在中国，台湾和韩国首选支付方式上的无知，意味着我们采取的某种方式是非常缓慢的。\n如果你是中国人，支付宝很可能是你的首选在线支付方式，银联也很普及，而 PayPal 几乎无处使用。你要确保研究过信用卡在目标市场的渗透力。在美国以外的许多国家，这一比例非常低——不到50%。如果你不支持本地支付，你就把钱留在了市场上。用户可能想要付费，但无法支付。\n\n连接模型\n用户心理学对有效地产品化至关重要，有种值得理解的设计范例是Nir Eyal的”连接模型“。Nir Eyal 是 BJ Fogg 的学生，他引用了 BJ Fogg 的行为理论。行为理论将行为视作动机、能力和触发的结果。Nir 研究了高粘性产品的共同元素。在他看来，Facebook、Snapchat、WhatsApp，还有 LinkedIn，都完美地创造了影响行为改变的因素。\n\n高粘性的产品是那些能逮住动机和触发时刻的产品。如果产品是一款应用，触发很可能是一条通知，告知用户，”什么事在这里发生，你就要错过了。“要知道通知总是把你拉进产品去。如果你收到 Facebook 的电子邮件，就会有一个电话让你使用产品。在 Nir 的模型中，最强大的激励因素被称为”可变奖励“。从心理上来说，这比霹雳可卡因更容易上瘾。\n可变性在产品体验中注入了未知元素。它产生了一种FOMO的感觉，迫使用户采取行动。触发和可变奖励的结合是促使我们对 Snapchat 和 Facebook 进行强制检查的原因。FOMO 同时也阻止我们离开这个平台。你有多少次听到有人宣称已经厌倦了 Facebook，并计划停止使用它？但从来没有人这样做。\n\n总结产品化\n如果你想建立一个产品，而不仅是一项技术，那就从思考价值开始。一旦你理解了产品提供的价值，想想如何沟通、论证和实现。注意用户对产品的熟悉程度。并且永远不要忽略他们努力想获得的结果。\n\n（本文改编自我在伦敦 TechCity 最近的演讲。你可以在 Slideshare 找到相关信息。)\n\r\n        \r\n        \r\n        \n    \n         1 赞\n         3 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：Lada\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            希望了解更多互联网、创业管理、创新思维、前沿技术和设计的知识。渐进明细，持续改进。        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  11 ·            \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 3, "title": "如何把好技术变为好产品？", "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2017/01/35d2b75d141d951d95e02e8d7c8cda65.jpg"], "suggest": [{"weight": 10, "input": ["如何", "产品", "变为", "技术"]}, {"weight": 7, "input": ["管理", "创业", "产品", "创意"]}], "tags": "管理,产品,创业,创意"}
2017-06-04 21:37:45 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"11035e2f16017675fe365a9ed61662b5","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:37:45 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 3,
 'comment_num': 0,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/young605867996">Lada</a> '
            '翻译，<a href="http://www.jobbole.com/members/paradise_FD">郑芸</a> '
            '校稿。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="http://pivot.uk.com/productise/">Paul Jackson</a>。欢迎加入<a '
            'target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><h3>产品化是什么意思？</h3>\n'
            '<p>大多数创业始于极好的创意和技术专长，但好技术和好产品有着天壤之别。这篇文章写给那些想构建用户实际使用的产品，而不是只解决问题但无法形成规模的技术。我用来形容这个过程的动词就是“产品化”。产品化意味着把某种东西（如好的创意、技术等）转化为产品。</p>\n'
            '<p><span id="pos_placeholder" style="width: 0px; height: 0px; '
            'margin: 0px; padding: '
            '0px;"></span>我将探讨产品化的原则，并通过一个特定的例子来深入剖析。我所用的例子是 x.ai 的<strong> <a '
            'href="https://x.ai/">Amy</a></strong>，一个扮演私人助手角色的智能机器人。2016 年，Amy '
            '成为创业公司和 VC 社区必需的会议安排助手。</p>\n'
            '<p>我选择 Amy 缘于她是人工智能发展为消费品的一个典例，也是技术成功“产品化”的典例。</p>\n'
            '<p>Amy还值得一提的是因为 x.ai （创造Amy的公司） '
            '自称“反精益生产”。作为产品人，我们都熟悉精益创业。精益生产成为产品开发的主流哲学有段时间了。因此看到傲称“反精益生产”的创业公司出现是有趣的。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/35d2b75d141d951d95e02e8d7c8cda65.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/35d2b75d141d951d95e02e8d7c8cda65.jpg" '
            'alt="Productise1"></a></p>\n'
            '<p style="text-align: center;"><span style="color: #808080;">感谢 '
            'x.ai 。</span></p>\n'
            '<p>如果我们想象一条“精益”的轴，在轴一端的是像 Airbnb、Dropbox 这样的独角兽公司。他们都是由 Y '
            'Combinator '
            '铸造的“精益生产”典型。在轴另一端则是像特斯拉这样的公司。没人会把埃隆·马斯克评价为一个精益的实践者。他所做一切都是为了登月计划，需要巨额投资。</p>\n'
            '<p>在特斯拉的左边是一群 AI 公司，比如 x.ai 和 Clarif.ai 这些明确声明“精益生产不适合我们”的公司。x.ai '
            '需要三年的研发投资，才能将产品投放市场。反精益生产则需要更多的前期资金，也提供更少的迭代和方向转变的机会。反精益生产的公司在产品投放市场时，需要对他们的用户和用户需求更有把握。</p>\n'
            '<h3>为什么产品化重要？</h3>\n'
            '<p>产品化意味着把愿景转化为可用的、具有全球吸引力的产品。产品化的主要好处在于它帮你跨越中断期（Chasm）。<strong><a '
            'href="https://www.youtube.com/watch?v=887i04NjDjc">Geoffrey '
            'Moore</a>\xa0'
            '</strong>定义的有名的市场中断期，区分了吸引少数技术极客的公司与吸引大众市场的公司。他的同名书籍探索了影响创业公司飞跃中断期能力的所有因素。产品化正是其中一个方面。</p>\n'
            '<p>产品化同样可防止堆栈谬误（Stack Fallacy）。该想法来自 Oracle 曾经的产品经理，Storm '
            'Ventures 的现合伙人：<strong><a '
            'href="https://techcrunch.com/2016/01/18/why-big-companies-keep-failing-the-stack-fallacy/">Anshu '
            'Sharma</a></strong>。堆栈谬误意味着，在所有给出的技术堆栈中，每个提供者都高估了自己产业层的价值；同样也低估了其他产业层的价值，尤其是那些堆栈中较高层级的提供者。</p>\n'
            '<p>数据库公司认为 SaaS '
            '应用“不过是种数据库应用”，错误地自信他们也能轻易地开发、竞争并且赢得新市场，堆栈谬误正是导致他们有这种想法的原因。</p>\n'
            '<p>从 Anshu 的观点来看，那些占上风的公司赢在用户体验层，他们把理解终端用户的背景、动机和期望结果做到了极致。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/905d017da166b82092cce5cef8a775ac.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/905d017da166b82092cce5cef8a775ac.jpg" '
            'alt="Productise2"></a></p>\n'
            '<p>作为一个产品经理，我支持他的看法。以我的经验看来，赢得市场意味着思考用户价值，而不是盯着屏幕；产品化意味着关注产品效果而不是产品特性。</p>\n'
            '<p>我们都熟悉产品的”jobs-to-be-done“理论。人们不使用产品是因为他们喜欢该产品本身。相反，他们出租它能获得具体成果。我认为 '
            'Clay Christensen 的理论今年<strong><a '
            'href="http://www.forbes.com/sites/hbsworkingknowledge/2016/10/04/clayton-christensen-customers-dont-simply-buy-products-they-hire-them/#5a1412df5712">获得了很大进展</a></strong>是有充分原因的。我坚信，多数实用产品都是帮助人类获得成果的工具，只有情感方面的东西能真正地超越它，比如品牌和美学。</p>\n'
            '<p>产品化意味着关注用户想要达成的结果，而不是底层的技术。因为在指数级的竞争中，这比以往任何时候都更加重要。在 Mary '
            'Meeker 的 2016 '
            '年互联网报告中，有两条统计结果映入我眼帘。第一条，在美国，人们80%的时间只花在三个应用上。不必费心去猜是哪三个应用。Nielsen '
            'data 在2016年底发布的数据显示，排名前 8 的移动应用<strong><a '
            'href="https://medium.freecodecamp.com/all-of-2016s-top-mobile-apps-are-owned-by-either-google-or-facebook-a9c56d77a74b#.t3p8049k7">被两家公司包揽</a></strong>：Google '
            '和 Facebook。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/f46f5d511ba25d913dedabf3c5a782fd.png"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/f46f5d511ba25d913dedabf3c5a782fd.png" '
            'alt="Productise3"></a></p>\n'
            '<p>第二条统计结果，50%的人一个月不下载新应用。这表明，新的市场进入者面临的挑战范围只在于获得关注。因为有太多选择，新应用的采用率已经趋于平稳。对创业公司而言，只有短暂时间给顾客留下印象。如果不能在这片刻表达你的价值，你就输了。</p>\n'
            '<h3>产品的三大支柱</h3>\n'
            '<p>而这对产品来说有什么意义？有三大支柱：用户引导（Onboarding）、核心任务的完成（Core Task '
            'Completion '
            '）和管理（Administration）。你应该用这种方式思考你的产品。贯穿这三个核心支柱的量是用户的熟悉度。每个支柱上的设计，都要考虑用户与产品交互时，随时间变化的心态。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/e26959857a80efc51aeccecc48fb8bee.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/e26959857a80efc51aeccecc48fb8bee.jpg" '
            'alt="Productise4"></a></p>\n'
            '<p>用户对产品的理解始于用户引导。在这点上，他们对你所做的东西会只有极少的了解。如果用户在用户引导后继续，并开始使用产品去完成任务，他们必然会变得更加熟悉产品。假如他们继续使用，该产品将会成为他们生活的一部分，那么产品的管理就逐渐地变得重要。</p>\n'
            '<p>可能在这三个支柱的左边还会加上第四个支柱：用户获取（Acquisition）。用户获取发生在用户第一次知道你产品的时候。我不会介绍用户获取的全部细节，因为它是市场营销技术的一部分，属于产品范围外。但重要的是，要记住产品和营销都是相同统一体的组成部分。</p>\n'
            '<p><strong><a '
            'href="https://medium.freecodecamp.com/all-of-2016s-top-mobile-apps-are-owned-by-either-google-or-facebook-a9c56d77a74b#.t3p8049k7">Chamath '
            'Palihapitiya</a></strong> 在观察后做了很好的应用，</p>\n'
            '<p><strong><strong>「用户只有三个状态：从没听过；尝试过；在使用。你要管理的是状态改变。」</strong></strong></p>\n'
            '<p>理解用户的心态是成功发展每个支柱的关键。你需要询问用户在每个状态的反馈。在用户获取状态，用户不了解产品，不了解产品的任何事。他们会说：『你是什么产品？为什么我要使用你？为什么我需要那么在意？』在用户引导时，他们会说：『我在考虑，我想花时间使用你。我会想起你，但你仍需使我信服。』</p>\n'
            '<p>一旦用户做到了核心任务的完成，他们就经过了一个重要里程碑。这时他们会讲：『我明白了，我理解了你是关于什么的，并且看到了你的价值。』而管理支柱则与定制有关，用户会说：『我得到了你提供的价值，但希望你适应我的需求。』</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/1384e5be3877314abbdd1f2ab1bd3faf.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/1384e5be3877314abbdd1f2ab1bd3faf.jpg" '
            'alt="Productise5"></a></p>\n'
            '<p>如果你熟悉 Dave McClure '
            '的”海盗指标“，可以把它映射到这四个支柱。在左边是获取(Acquisition)指标，激活(Activation)出现在用户引导，留存(Retention)和收入(Revenue)是核心任务，推荐(Referral)通常在管理阶段。这样你可以实际地预计用户对产品的支持。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/428daaa985a920814fe19bcae435aad3.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/428daaa985a920814fe19bcae435aad3.jpg" '
            'alt="Productise6"></a></p>\n'
            '<h3>产品价值</h3>\n'
            '<p>赢在产品，就是赢在用户价值的思考。如果你想了解更多关于产品价值的信息，Jerry Chen（ 他和 Reid '
            'Hoffman、Josh Elman 共同工作于 Greylock Partners）有一个叫做价值单元（ <strong><a '
            'href="https://news.greylock.com/unit-of-value-a-framework-for-scaling-42c092fba887#.rscicw5ib"><span '
            'id="2KSFindDIV" class="KSFIND_CLASS">Unit of '
            '</span>Value</a></strong>）的平台非常值得一读。Jerry 评估了像 Salesforce、Dropbox '
            '和 Docker 这些独角兽公司的价值单元。然后他论证了他们是如何实现和影响了服务价值的。</p>\n'
            '<p '
            'class="okmemo-dragging">产品是”价值交付的载体“。假如你正在开发新产品，或是有想法要开发，你需要回答的基础问题是：它能实现怎样的价值单元？答案会影响你如何定价、确定规模和销售产品。用户获取和承诺的价值（promise '
            'of value）相联系。用户引导需要推算价值（demonstrate of value）。实现的价值（delivery of '
            'value）体现在核心任务的完成。管理与价值扩展（extension of '
            'value）有关。它帮助用户获得更多价值，同样也是你可以追加销售产品的地方。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/685cc469242ed96e85818eea27c5d554.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/685cc469242ed96e85818eea27c5d554.jpg" '
            'alt="Productise7"></a></p>\n'
            '<p>一旦理解了你产品的价值单元，发展它就会更容易。对发展需求排出优先级列表是产品经理角色的基础能力。我发现的这个 2×2 '
            '网格（有名的<strong><a '
            'href="https://blog.intercom.com/first-rule-prioritization-no-snacking/">影响/成就网格</a></strong>）是一个用四象限进行优先级划分的高效工具。Hunter '
            'Walk （YouTube的产品掌门人）在Intercom团队内是该工具有名的支持者。</p>\n'
            '<p>需要考虑的是，所有的路径事项都应该位于影响网格的上半部分。如果一个事项不能帮助兑现你的价值单元，它就不应该存在。<span '
            'id="0KSFindDIV" class="KSFIND_CLASS">战略主题（ Strategic '
            'Themes）</span>应该放在右上象限。在用关键的利益相关点填充这个网格时，产品经理可以对产品团队应该做什么和不应该做什么达成共识。</p>\n'
            '<p>举个例子，下面是我在 2017 年开发的一款名为 Newsmart '
            '的产品路径图，这是一款利用华尔街日报内容制作的商务英语学习产品。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/d13a800f91a3104116d34c9e09ff3f41.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/d13a800f91a3104116d34c9e09ff3f41.jpg" '
            'alt="Productise8"></a></p>\n'
            '<p>任何产品给定的 1.0 '
            '版本都只包含任务完成这一支柱。没有人会从建立用户引导开始。它只是一条指向核心产品的路径。产品化意味着从这一支柱向外推进，并增加额外的支柱。产品化意味着建立路径让用户找到你的产品，了解它，使用它，然后定制它。</p>\n'
            '<p>在 B2B '
            '领域，由于买家和用户是不同的人，所以存在另外的复杂性。买方的价值单元与用户的价值单元会非常不同。我们很容易忽视买家的需求，不断地改善终端用户的体验。而买家是最终决定是否投资予你的人。产品需要同时论证并实现价值。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/1fa006d1488a9338ac7f27d114d461ea.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/1fa006d1488a9338ac7f27d114d461ea.jpg" '
            'alt="Productise9"></a></p>\n'
            '<p>尽管管理支柱在消费产品中没有被太多考虑，但在 B2B '
            '它是最重要的元素之一。买家如何评估他们的投资能否得到回报?通常通过告知他们用户是否在使用该产品、使用多久的指标板或报告。在 '
            'Newsmart '
            '里，我们很长一段时间忽视了这问题的重要性。我们很晚才意识到开发一套管理软件的重要性，这意味着不仅是用户，买家也能看到价值。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/ef6974f4c8bfef9647499a8f4465ae92.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/ef6974f4c8bfef9647499a8f4465ae92.jpg" '
            'alt="Productise10"></a></p>\n'
            '<p>从消费者领域开始的产品在转而面向企业后，进入了一个完全不同的领域。你该如何沟通以及市场如何变化。你不再需要说服单一用户，却需要使各种各样的利益相关者信服。要在企业中取得成功就需经历许多障碍。 '
            'Slack 最近宣布了<strong><a '
            'href="https://techcrunch.com/2016/12/07/slack-and-google-announce-partnership-focused-on-better-integrating-their-services/">与 '
            'Google 的 G-Suite '
            '合作</a></strong>。在我看来，这表明即使是他们也在设法解决这个问题。他们在终端用户中获得了良好的支持，却要奋力地让他们的产品进入企业市场，并意识到 '
            'Google 在这一领域走得更远。</p>\n'
            '<h3>产品设计模式</h3>\n'
            '<p>如果你检查这四根支柱，每一根支柱的讨论都是相当超前的。设计模式都已建立，可以转换后适应于你的产品中。没有必要重新发明轮子，也不需要每次都经历相同的学习曲线。</p>\n'
            '<p>例如用户引导。有如 Samuel Hulick 这样有趣的人。 围绕用户引导，他建立了一套名为\xa0<strong><a '
            'href="https://www.useronboard.com/">User Onboard</a>\xa0'
            '</strong>的完整业务。他的专长是『分解』，分解评估不同产品的用户引导情况，并指出每种产品的优点和缺点。产品经理可以打开 '
            'User Onboard，快速了解不同产品在多个垂直领域的最佳实践。</p>\n'
            '<p>用户引导的核心是”Aha！时刻“。Aha！是指用户理解了产品价值和产品与他关系的瞬间。用户引导的成功意味着让用户尽快迎来 '
            'Aha！时刻。随着争夺用户注意力的竞争越来越激烈，进入Aha！时刻的时间需要更短。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/f4d8e46bb8ff2a7b7d8b496e5d3d00a3.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/f4d8e46bb8ff2a7b7d8b496e5d3d00a3.jpg" '
            'alt="Productise11"></a></p>\n'
            '<p>此外，Chamath Palihapitiya 是一个很好的参考。他是 Facebook 增长团队 2008 年至 2012 '
            '年间的负责人。在沟通方式上，他非常直接、粗鲁。偶然发现他<strong><a '
            'href="https://www.youtube.com/watch?v=raIUQP71SBU">在 YouTube '
            '上的这段经典言论</a></strong>，他直接拒绝关于增长和”增长黑客“的很多伪科学。对他而言，增长就是了解产品所有的价值单元。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/283c18bc8e57a926a104a2723e755449.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/283c18bc8e57a926a104a2723e755449.jpg" '
            'alt="Productise12"></a></p>\n'
            '<p>如果有人对用户引导的重要性有所怀疑，我就把 Twitter 作为一个很好的反例，来说明如果不正确对待它的后果。2016 年对 '
            'Twitter 来说不是很顺。这一年公司业务趋于水平、增长巨减、股价持续低迷。</p>\n'
            '<p>问题的核心是未能联系起它的价值单元。太多的人仍然不了解 Twitter '
            '是什么、以及为什么要使用它。这是市场营销的失败，也是用户引导的失败。有较高比例的人注册了却不发推特消息、也不关注任何人。如果没有进行到这些阶段，就意味着永远无法获得”Aha！时刻“。如果不能获得”Aha！时刻“，就无法理解产品价值。不能理解产品价值，用户就会流失。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/d988258f0e93bff0d1ca242b1ba66e48.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/d988258f0e93bff0d1ca242b1ba66e48.jpg" '
            'alt="Productise13"></a></p>\n'
            '<p>为了深入探讨，来看一个用户引导的成功例子。我选择 x.ai 的 Amy '
            '原因，从根本上讲，是由于她是种技术，而不是产品。开发人工智能和决策引擎使用了相当多的资源。因此当她面向市场时，可以应用在许多方向。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/4f2db693c89d3f84c5c481bdf12d88f1.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/4f2db693c89d3f84c5c481bdf12d88f1.jpg" '
            'alt="Productise14"></a></p>\n'
            '<p>我认为 x.ai 在产品的角度上做了很多出色的选择。Amy '
            '的用户引导简单但高效。一旦你注册，她就会给你发电子邮件，并说：”你好，我是你的私人助理，很高兴能来到你的面板“，然后让你进行一些操作。我们都会接收并回复电子邮件。因此，这样的交互是常见的。</p>\n'
            '<p>如果你检查 Amy '
            '的第一封电子邮件，她清楚地说明了价值定位。”魔法“，她说，”在13次会议后发生。“为了展示价值定位，她会为你安排第一次会议。她发送邀请并问：”你要在这周四的时候加个会议提醒吗？“接受会议后，会看到它落在你的日历上，然后你就理解了她的价值。这正是”Aha！时刻“。突然之间，Amy '
            '从某种新奇陌生的东西变得熟悉了。这是一个大家都能理解的设计模式。</p>\n'
            '<p>Amy 可以容易地保持会议日程安排的技术。在产品化过程中，x.ai '
            '评估我们的心智模型，并利用了一些已知的东西，而不是引入外来的东西。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/b08dbdc42399c9c6b353d8cd197f4585.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/b08dbdc42399c9c6b353d8cd197f4585.jpg" '
            'alt="Productise15"></a></p>\n'
            '<p>Amy 核心任务的完成出现在她与各种收件人的邮件之中。在这些邮件交换中，她协调不同的日程表，最终安排一个会议。</p>\n'
            '<p>在管理方面，个人偏好对 Amy 来说是关键。多数人都不希望周日上午 9 '
            '点开会。我试着在早上安排我多数的面对面会议，让下午空闲，而我的设置也反映了这点。当然，偏好会随时间改变。当设置更新时，Amy '
            '会给你发邮件确认。</p>\n'
            '<p>对我来说，Amy 是一个优秀的当代产品化例子。她的价值单元是节省的时间。Amy '
            '根据你的使用情况进行计算，并发送更新来略述她每个月节省了你多少小时。这相当于每年节省了几十个小时。</p>\n'
            '<h3>支付</h3>\n'
            '<p>在某些情况下，多数产品将会从用户那获得报酬。这是常被忽视的另一步。这方面的设计模式也有很好的发展。有许多”<strong><a '
            'href="http://white.net/blog/six-principles-good-choice-architecture/">选择架构</a>“</strong>的研究和支付计划的介绍。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/456da5220854b0886e74570cee3f2109.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/456da5220854b0886e74570cee3f2109.jpg" '
            'alt="Productise16"></a></p>\n'
            '<p>目标用户的可支付范围同样值得评估。Newsmart 主要面向亚洲销售。我们通过 Stripe 支持 PayPal '
            '和信用卡。一段时间后，用户反馈的一致的信息是：“我想付钱，但无法支付！”我们在中国，台湾和韩国首选支付方式上的无知，意味着我们采取的某种方式是非常缓慢的。</p>\n'
            '<p>如果你是中国人，支付宝很可能是你的首选在线支付方式，银联也很普及，而 PayPal '
            '几乎无处使用。你要确保研究过信用卡在目标市场的渗透力。在美国以外的许多国家，这一比例非常低——不到50%。如果你不支持本地支付，你就把钱留在了市场上。用户可能想要付费，但无法支付。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/33aa314b85797ad375f2f8f8686620e1.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/33aa314b85797ad375f2f8f8686620e1.jpg" '
            'alt=""></a></p>\n'
            '<h3>连接模型</h3>\n'
            '<p>用户心理学对有效地产品化至关重要，有种值得理解的设计范例是Nir Eyal的”<strong><a '
            'href="https://medium.com/behavior-design/how-to-manufacture-desire-3011c82a2b28#.72l79qwlk">连接模型</a>“</strong>。Nir '
            'Eyal 是 BJ Fogg 的学生，他引用了 BJ Fogg 的行为理论。行为理论将行为视作动机、能力和触发的结果。Nir '
            '研究了高粘性产品的共同元素。在他看来，Facebook、Snapchat、WhatsApp，还有 '
            'LinkedIn，都完美地创造了影响行为改变的因素。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/76f428ff24be0851a1be931c8601666a.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/76f428ff24be0851a1be931c8601666a.jpg" '
            'alt="Productise18"></a></p>\n'
            '<p>高粘性的产品是那些能逮住动机和触发时刻的产品。如果产品是一款应用，触发很可能是一条通知，告知用户，”什么事在这里发生，你就要错过了。“要知道通知总是把你拉进产品去。如果你收到 '
            'Facebook 的电子邮件，就会有一个电话让你使用产品。在 Nir '
            '的模型中，最强大的激励因素被称为”可变奖励“。从心理上来说，这比霹雳可卡因更容易上瘾。</p>\n'
            '<p>可变性在产品体验中注入了未知元素。它产生了一种FOMO的感觉，迫使用户采取行动。触发和可变奖励的结合是促使我们对 '
            'Snapchat 和 Facebook 进行强制检查的原因。FOMO 同时也阻止我们离开这个平台。你有多少次听到有人宣称已经厌倦了 '
            'Facebook，并计划停止使用它？但从来没有人这样做。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/0e5d4ca1521b9b5bb4bb5001d94a8188.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/0e5d4ca1521b9b5bb4bb5001d94a8188.jpg" '
            'alt="Productise19"></a></p>\n'
            '<h3>总结产品化</h3>\n'
            '<p>如果你想建立一个产品，而不仅是一项技术，那就从思考价值开始。一旦你理解了产品提供的价值，想想如何沟通、论证和实现。注意用户对产品的熟悉程度。并且永远不要忽略他们努力想获得的结果。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/01/d97bd4f91d6567e36a91d9674306ac14.jpg"><img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/01/d97bd4f91d6567e36a91d9674306ac14.jpg" '
            'alt="Productise20"></a></p>\n'
            '<p>（本文改编自我在伦敦 TechCity 最近的演讲。你可以在 <strong><a '
            'href="http://www.slideshare.net/kromagz/productised">Slideshare</a></strong> '
            '找到相关信息。)</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111268" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111268votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111268" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 3 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/young605867996">Lada</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/young605867996">\r\n'
            '\t\t\t<img '
            'src="http://q.qlogo.cn/qqapp/208656/B77EEB9D520DE9C7BD42E89DC348FEC7/100">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            希望了解更多互联网、创业管理、创新思维、前沿技术和设计的知识。渐进明细，持续改进。        '
            '</span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a '
            'href="http://www.jobbole.com/members/young605867996" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a '
            'href="http://blog.jobbole.com/author/young605867996/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/young605867996/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 11</a> · <a title="我的网站" '
            'target="_blank" href="http://littlejanery.blog.163.com/"><i '
            'class="fa fa-link"></i></a>\xa0<a title="QQ：605867996" '
            'target="_blank" href="#"><i class="fa fa-qq"></i></a>\xa0<a '
            'title="个人微信：yao605867996" target="_blank" href="#"><i class="fa '
            'fa-weixin"></i></a>\xa0        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2017/01/35d2b75d141d951d95e02e8d7c8cda65.jpg'],
 'tags': '管理,产品,创业,创意',
 'thumb_up_num': 1,
 'title': '如何把好技术变为好产品？',
 'url': 'http://blog.jobbole.com/111268/',
 'url_obj_id': '11035e2f16017675fe365a9ed61662b5'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:37:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111269/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:37:48 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:48 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 571
2017-06-04 21:37:48 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:37:48 [elasticsearch] DEBUG: > 为何你会觉得写测试很烦？
2017-06-04 21:37:48 [elasticsearch] DEBUG: < {"tokens":[{"token":"为何","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"你","start_offset":2,"end_offset":3,"type":"CN_CHAR","position":1},{"token":"会","start_offset":3,"end_offset":4,"type":"CN_CHAR","position":2},{"token":"觉得","start_offset":4,"end_offset":6,"type":"CN_WORD","position":3},{"token":"写","start_offset":6,"end_offset":7,"type":"CN_CHAR","position":4},{"token":"测试","start_offset":7,"end_offset":9,"type":"CN_WORD","position":5},{"token":"很烦","start_offset":9,"end_offset":11,"type":"CN_WORD","position":6}]}
2017-06-04 21:37:48 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:48 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 174
2017-06-04 21:37:48 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:37:48 [elasticsearch] DEBUG: > IT技术,,测试
2017-06-04 21:37:48 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"测试","start_offset":6,"end_offset":8,"type":"CN_WORD","position":1}]}
2017-06-04 21:37:48 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:48 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/00ca9269faad0b75bda59aa4c2de6092 HTTP/1.1" 200 175
2017-06-04 21:37:48 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/00ca9269faad0b75bda59aa4c2de6092 [status:200 request:0.014s]
2017-06-04 21:37:48 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111269/", "comment_num": 1, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - loadofwar 翻译，郑芸 校稿。未经许可，禁止转载！英文出处：Robert Pankowecki。欢迎加入翻译组。正如标题写的那样，我有这种想法已经很多年了，但是我从没明说出来过。直到上周，一个初级 Rails 开发课程的学员提到他也有同样的感受，才促使我写了这篇文章。\n\n我可以说，我根本不愿意写任何测试。因为写测试太令人抓狂了。\n\n我完全理解这种感觉。而且我知道有这种想法的程序员不在少数。\n一、为什么这些程序员会对写测试这么抓狂？\n我想这是因为他们只专注于提升他们编程的能力，却忽略了学习测试方面的知识。其实道理就像在玩一个 RPG 游戏（比如说「上古卷轴」），当你把你角色的弓箭技能点满的时候，你却发现你需要点满单手武器技能才能打通当前的剧情。这时你一定会在心里大喊：「这简直太坑爹了」！是的，试想一下，当你苦思冥想的「远程打击」技能在一场近身肉搏混战中没能发挥什么作用时的心情，你就能明白我说的意思。\n其实，在另一种相似的情境里，比如说当你需要学习一门新的编程语言的时候，我们通常也会有这种心态。当你专精于一门语言（像 Ruby），你运用这门语言时，自然会比运用其他语言（比如说 Java 或 PHP）时来得更高效。诚然，你可以在学习新语言时运用你已有的经验，触类旁通。但是，学习新语言的语法，编程范式，IDE 或者理解整个体系依旧是必不可少的。这同样需要花费大量的时间。\n其他类似的情境中，像我们通常要面对不同的开发环境，不同的产品类型（原生的 Windows 桌面应用，浏览器应用和移动端iOS应用），开发人员要游走于前端和后端，甚至当学习两门不同的外语，比如西班牙语和汉语时，我们大都会有同样的心态。\n那么回归到正题，当你舒舒服服地开发着新的功能，突然意识到你需要测试这些功能时（假设这不是一个 TDD 流程），那么这种令人抓狂的情绪必会「如约而至」。这种感觉就像你突然置身于一个不知名的沼泽中，只能靠双腿，慢慢地寻找着出路。\n二、当面对这种情况时，你有两个选择。\n第一，任由烦躁和不安的情绪蒙蔽你的心智。这样你可以直接宣布放弃你的测试工作。因为它太难了，根本不值得你浪费时间在上面。或者，你有第二种选择……\n接受事实。承认你现在有关测试方面的知识储备不足，做得很烂。就像你当初刚刚开始编程时，代码一样写得很烂。但渐渐地，你的能力逐步得到了提升。可以理解，承认自己效率低下，承认自己并不像自己想象的那么优秀的确很伤自尊。但是这种自我审视，在每个人的职业生涯中，通常是我们面对新事物，并准备开始接受并学习它们时应该有的正常心态。\n我们可能精通一个领域一项技术，而在其他领域其他技术完全是个初学者。你的经验越多，知道得越多，可转移到其他工具的知识就越多。毕竟，现在的科技每五年就要更新一次。你观察到更高层次的概念，也更轻松指出某些新技术所遵循的模式。但在细节上我们可能仍很薄弱，或者掌握得很慢。尤其在尝试一门新技术的初期，这个过程让人很受伤，感觉像流血般难受。这可能是因为你想掌握的技术太尖端，也可能是因为你使用的编程工具大都“棱角尖锐”。而这些都不可避免。\n即使是为一门新语言配置一个环境，都可以让人感到筋疲力尽，让你觉得自己的工作效率一落千丈。同样，对于测试，事实也是如此\n三、因为测试是一项独立的技术。\n想想你是什么时候开始编程的。是从大学时代起吗？或是比这更早？当时你是否为你的程序设计了自动化测试流程？如果是，你是否把这个流程应用到每一个你在学校开发的程序上？又或者你已经是一个经历过几次职场变迁的老鸟。想想看是不是每一个你工作过的团队都需要经常为自己的产品写测试？通常情况下，答案都是否定的。其实，每个人在其职业生涯中，分配在开发和测试上的时间通常都会有很大差距。大的需要以「年」为单位来计算。是的，以「年」记！像 3 年开发经验 vs 1 年测试经验，或者 7 年开发 vs 4 年测试，6 个月开发 vs 1 个月测试，等等。\n四、 3 比 1，7 比 4。难怪你会抓狂。\n你每天工作 8 小时 （或者更少，欧陆风，你懂的）。你需要在这段时间内不断地切换于编程和测试的工作中（当然，你也可能需要兼顾其他的一些事情，比如像管理，讨论，交流，制定优先目标等等。这些不在今天的讨论范围内）。这种切换模式的确能令人精神分裂。就好比你写字的时候你不能只用惯用手，必须不停地换手。你会发现你一会写得好，一会又写不好，一会写得好，一会又写不好，写得好，写不好，写得好，写不好……\n五、你以为这种折磨有一天会放过你吗？\n其实它会！但是你对测试，要「不抛弃，不放弃」，要不断地提高你的测试能力，要建立起测试相关的知识体系和架构。真诚地面对这个问题，接受你需要提高自己的能力才能从中发现乐趣的事实。并努力让你测试和编程的水平相当。如果你能做到这些，相信你会发现你的付出将会是「物有所值」的。\n\r\n        \r\n        \r\n        \n    \n         1 赞\n         1 收藏\n\n                     1 评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：loadofwar\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            简介还没来得及写 :）        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  16 ·          \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 1, "title": "为何你会觉得写测试很烦？", "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2012/04/testing-please-do-not-disturb.jpg"], "suggest": [{"weight": 10, "input": ["觉得", "很烦", "为何", "测试"]}, {"weight": 7, "input": ["技术", "测试"]}], "tags": "IT技术,,测试"}
2017-06-04 21:37:48 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"00ca9269faad0b75bda59aa4c2de6092","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:37:48 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 1,
 'comment_num': 1,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/loadofwar">loadofwar</a> '
            '翻译，<a href="http://www.jobbole.com/members/paradise_FD">郑芸</a> '
            '校稿。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="https://medium.com/planet-arkency/testing-is-a-separate-skill-and-thats-why-you-are-frustrated-7239b1500a6c#.lxh51i2yq">Robert '
            'Pankowecki</a>。欢迎加入<a target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p>正如标题写的那样，我有这种想法已经很多年了，但是我从没明说出来过。直到上周，一个初级 '
            'Rails 开发课程的学员提到他也有同样的感受，才促使我写了这篇文章。</p>\n'
            '<blockquote>\n'
            '<p style="text-align: '
            'left;"><strong>我可以说，我根本不愿意写任何测试。因为写测试太令人抓狂了。</strong></p>\n'
            '</blockquote>\n'
            '<p>我完全理解这种感觉。而且我知道有这种想法的程序员不在少数。</p>\n'
            '<h3>一、为什么这些程序员会对写测试这么抓狂？</h3>\n'
            '<p>我想这是因为他们只专注于提升他们编程的能力，却忽略了学习测试方面的知识。其实道理就像在玩一个 RPG '
            '游戏（比如说「上古卷轴」），当你把你角色的弓箭技能点满的时候，你却发现你需要点满单手武器技能才能打通当前的剧情。这时你一定会在心里大喊：<strong>「这简直太坑爹了」！</strong>是的，试想一下，当你苦思冥想的「远程打击」技能在一场近身肉搏混战中没能发挥什么作用时的心情，你就能明白我说的意思。</p>\n'
            '<p>其实，在另一种相似的情境里，比如说当你需要学习一门新的编程语言的时候，我们通常也会有这种心态。当你专精于一门语言（像 '
            'Ruby），你运用这门语言时，自然会比运用其他语言（比如说 Java 或 '
            'PHP）时来得更高效。诚然，你可以在学习新语言时运用你已有的经验，触类旁通。但是，学习新语言的语法，编程范式，IDE '
            '或者理解整个体系依旧是必不可少的。这同样需要花费大量的时间。</p>\n'
            '<p>其他类似的情境中，像我们通常要面对不同的开发环境，不同的产品类型（原生的 Windows '
            '桌面应用，浏览器应用和移动端iOS应用），开发人员要游走于前端和后端，甚至当学习两门不同的外语，比如西班牙语和汉语时，我们大都会有同样的心态。</p>\n'
            '<p>那么回归到正题，当你舒舒服服地开发着新的功能，突然意识到你需要测试这些功能时（假设这不是一个 TDD '
            '流程），那么这种令人抓狂的情绪必会「如约而至」。这种感觉就像你突然置身于一个不知名的沼泽中，只能靠双腿，慢慢地寻找着出路。</p>\n'
            '<h3>二、当面对这种情况时，你有两个选择。</h3>\n'
            '<p>第一，任由烦躁和不安的情绪蒙蔽你的心智。这样你可以直接宣布放弃你的测试工作。因为它太难了，根本不值得你浪费时间在上面。或者，你有第二种选择……</p>\n'
            '<p>接受事实。承认你现在有关测试方面的知识储备不足，做得很烂。就像你当初刚刚开始编程时，代码一样写得很烂。但渐渐地，你的能力逐步得到了提升。可以理解，<strong>承认自己效率低下，承认自己并不像自己想象的那么优秀</strong>的确很伤自尊。但是这种自我审视，在每个人的职业生涯中，通常是我们面对新事物，并准备开始接受并学习它们时应该有的正常心态。</p>\n'
            '<p>我们可能精通一个领域一项技术，而在其他领域其他技术完全是个初学者。你的经验越多，知道得越多，可转移到其他工具的知识就越多。毕竟，现在的科技每五年就要更新一次。你观察到更高层次的概念，也更轻松指出某些新技术所遵循的模式。但在细节上我们可能仍很薄弱，或者掌握得很慢。尤其在尝试一门新技术的初期，这个过程让人很受伤，感觉像流血般难受。这可能是因为你想掌握的技术太尖端，也可能是因为你使用的编程工具大都“棱角尖锐”。而这些都不可避免。</p>\n'
            '<p>即使是为一门新语言配置一个环境，都可以让人感到筋疲力尽，让你觉得自己的工作效率一落千丈。同样，对于测试，事实也是如此</p>\n'
            '<h3>三、因为测试是一项独立的技术。</h3>\n'
            '<p>想想你是什么时候开始编程的。是从大学时代起吗？或是比这更早？当时你是否为你的程序设计了自动化测试流程？如果是，你是否把这个流程应用到每一个你在学校开发的程序上？又或者你已经是一个经历过几次职场变迁的老鸟。想想看是不是每一个你工作过的团队都需要经常为自己的产品写测试？通常情况下，答案都是否定的。其实，每个人在其职业生涯中，分配在开发和测试上的时间通常都会有很大差距。大的需要以「年」为单位来计算。是的，以「年」记！像 '
            '3 年开发经验 vs 1 年测试经验，或者 7 年开发 vs 4 年测试，6 个月开发 vs 1 个月测试，等等。</p>\n'
            '<h3>四、 3 比 1，7 比 4。难怪你会抓狂。</h3>\n'
            '<p>你每天工作 8 小时 '
            '（或者更少，欧陆风，你懂的）。你需要在这段时间内不断地切换于编程和测试的工作中（当然，你也可能需要兼顾其他的一些事情，比如像管理，讨论，交流，制定优先目标等等。这些不在今天的讨论范围内）。这种切换模式的确能令人精神分裂。就好比你写字的时候你不能只用惯用手，必须不停地换手。你会发现你一会写得好，一会又写不好，一会写得好，一会又写不好，写得好，写不好，写得好，写不好……</p>\n'
            '<h3>五、你以为这种折磨有一天会放过你吗？</h3>\n'
            '<p>其实它会！但是你对测试，要「不抛弃，不放弃」，要不断地提高你的测试能力，要建立起测试相关的知识体系和架构。真诚地面对这个问题，接受你需要提高自己的能力才能从中发现乐趣的事实。并努力让你测试和编程的水平相当。如果你能做到这些，相信你会发现你的付出将会是「物有所值」的。</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111269" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111269votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111269" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 1 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i> 1 评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/loadofwar">loadofwar</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/loadofwar">\r\n'
            '\t\t\t<img '
            'src="http://jbcdn2.b0.upaiyun.com/2015/04/8fbdaaa5ea6d3b49c8c1c825aafeb5d9.png">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            简介还没来得及写 :）        </span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/loadofwar" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/loadofwar/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/loadofwar/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 16</a> · <a title="GitHub主页" '
            'target="_blank" href="https://github.com/loadofwar"><i class="fa '
            'fa-github"></i></a>\xa0        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2012/04/testing-please-do-not-disturb.jpg'],
 'tags': 'IT技术,,测试',
 'thumb_up_num': 1,
 'title': '为何你会觉得写测试很烦？',
 'url': 'http://blog.jobbole.com/111269/',
 'url_obj_id': '00ca9269faad0b75bda59aa4c2de6092'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:37:52 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111189/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:37:52 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:52 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 818
2017-06-04 21:37:52 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2017-06-04 21:37:52 [elasticsearch] DEBUG: > 维护大型开源项目，是怎样的体验？
2017-06-04 21:37:52 [elasticsearch] DEBUG: < {"tokens":[{"token":"维护","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"维","start_offset":0,"end_offset":1,"type":"CN_WORD","position":1},{"token":"护","start_offset":1,"end_offset":2,"type":"CN_CHAR","position":2},{"token":"大型","start_offset":2,"end_offset":4,"type":"CN_WORD","position":3},{"token":"开源","start_offset":4,"end_offset":6,"type":"CN_WORD","position":4},{"token":"项目","start_offset":6,"end_offset":8,"type":"CN_WORD","position":5},{"token":"怎样","start_offset":10,"end_offset":12,"type":"CN_WORD","position":6},{"token":"体验","start_offset":13,"end_offset":15,"type":"CN_WORD","position":7},{"token":"体","start_offset":13,"end_offset":14,"type":"CN_WORD","position":8},{"token":"验","start_offset":14,"end_offset":15,"type":"CN_CHAR","position":9}]}
2017-06-04 21:37:52 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:52 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 252
2017-06-04 21:37:52 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:37:52 [elasticsearch] DEBUG: > 开发,开源
2017-06-04 21:37:52 [elasticsearch] DEBUG: < {"tokens":[{"token":"开发","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"发","start_offset":1,"end_offset":2,"type":"CN_WORD","position":1},{"token":"开源","start_offset":3,"end_offset":5,"type":"CN_WORD","position":2}]}
2017-06-04 21:37:52 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:52 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/6e848736feb1aa6b38e9193440fdf13a HTTP/1.1" 200 175
2017-06-04 21:37:52 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/6e848736feb1aa6b38e9193440fdf13a [status:200 request:0.023s]
2017-06-04 21:37:52 [elasticsearch] DEBUG: > {"thumb_up_num": 2, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111189/", "comment_num": 0, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t【伯乐在线导读】：开源运动愈发受到互联网科技公司的喜欢，曾经视开源为毒瘤的微软，也都大刀阔斧地拥抱开源了。参与开源的开发者也越来越多，GitHub 的活跃度也佐证了这种现象。国外程序员 Nolan Lawson 在《做开源项目的维护者，是怎样一种体验？》分享了他的感受和经验。\n在知乎上也有一个类似的讨论帖：「维护一个大型开源项目是怎样的体验？」。原题主的补充：\n（我认为）大型开源项目包含以下任意一个或多个特征：\n\nGitHub star 数量 1000 +\n每周都可以接收到多个 issues 或 PR\n有一些公司或其他项目在生产环境中使用\n任意一个或多个包管理系统中下载量巨大\n在项目所在领域中拥有较大关注度\n\n可以从以下几个方面进行回答。\n\n先介绍你的项目，用来干什么的？\n在开发和维护的过程中遇到过哪些值得一提的事？\n有没有什么奇葩的 issue 或者 PR？\n对你的生活或者工作有没有造成影响（好的，坏的）？\n\n伯乐在线摘编了两位朋友的回答，均已获得授权。\n1. rebornix 的回答分享（link），伯乐在线已获授权\n加入 Visual Studio Code – Code Editing. Redefined 快一年，趁这个机会聊一聊开发和维护这个项目的感受，如果大家不反对这是一个 大型 开源项目的话。以下为个人理解，不代表公司也不代表团队。\n项目\nVisual Studio Code 的目标是做一个 Lightweight Editor，通过的扩展 api，让用户在 VS Code 中达到和 IDE 中接近的开发体验（效率）。\n不过很多群众对 VS Code 有诸多误解，我先来一一解答\n\n“VS Code 师出 VS，是 VS 找了一群人来重写的，复用了很多 VS 的代码，等等“。很抱歉，并不是这样，半毛钱关系也没有。VS Code 的核心代码，也就是 Microsoft/monaco-editor 是 Erich Gamma 2011 年加入微软后，招聘的一支“全新”的队伍进行开发的。Monaco editor 从一开始就是一个 browser based editor，早期一直服务于各个微软系统中（比如 Visual Studio Online，OneDrive online）。招聘的这支队伍对于 Erich 来说并不是新的，因为大部分成员都是原先 IBM 的老部下，其中几位大爷跟着 Erich 撸了二十多年代码了。\n“VS Code 是 Atom 的复刻，是对 Atom 的魔改，是 Atom 的一个主题！”。很抱歉，并不是这样，但还是有几毛钱关系的。Monaco Editor 在经历几年的高光期，进入了一个小小的黑暗时代。这时候团队成员开始调研将 Monaco Editor 做成桌面应用，和 Atom 一样，我们首先关注到的就是 node-webkit。必须说 node-webkit 是业界的一缕清风，给这个产业带来了太多的可能性。当然最后我们选用了 atom-shell，也就是后来的 Electron。但就是这个 atom-shell，给大家带来了以上的误导。\n\n最后，我们一定要寻根问祖的话，VS Code 应该是师出 Eclipse（同志们，哎你们怎么扭头走人了，别怕，我话没说完呢）。团队核心的几位大爷，早年就跟着 Erich，在写了几个 Editor／IDE 之后，创造了 Eclipse。正是因为见证了 Eclipse 的兴衰，所以这一次在设计 Monaco／VS Code 的时候，才会如此的克制。Extensibility 不好吗？当然好，但是 Eclipse 的弊端已经在一些竞争对手身上出现啦。\n开发／维护\n我 13 年加入微软后，就开始接触到 Monaco 了。在使用的过程中踩了一些坑，研究过代码，做过好一些扩展。所以在 VS Code 正式开源后以及上线 Marketplace 后，我就开始动手写一点插件和发 Pull Request。去年五月得空和团队结对编程了两个礼拜后，就加入了 VS Code。\nVS Code 的开发几乎完全是公开的。早期我们还通过 User Voice 收集反馈，但我们早就把它关掉了，所有问题的处理都放在 GitHub 上。我们的 Yearly/Monthly plan 都以 issue 的形式呈现 Microsoft/vscode ，而我个人正常的开发节奏是这样的：\n计划\n在上一个 milestone 快结束、新的 milestone 开始的第一周，和老板沟通新的 milestone 自己想做的功能。以及自己要不要休假。\nDebt Week\n我们把新 Milestone 的一周当作 debt week，集中处理一些技术债，以及为一些插件做点微小的贡献。我一般会花一点时间在 Vim 插件以及我自己的 Ruby 插件上。\n开发\n这之后就是两到三周正常的开发。每天起床得先把自己头上的新 issue 都 triage 一遍，遇到紧急的得先修，不然就继续完成自己的 feature。\nInbox Tracking\n我加入团队的时候，我们只有 1700 个左右的 issue，现在已经破 4000 了（大部分都是 feature request）。GitHub Inbox 在这种情况下是无用的，我们的做法是每周会有一名同事，负责 GitHub 的新 issue，assign 给合适的 owner。我已经当过三次 Inbox Tracker，只能用可怕来形容。每天一睁眼就是一百多个 issue 要处理，一点都不想起床。\nEndgame\n我们在 milestone 的最后一周 endgame 会对新 feature 进行各种花样的测试，对这个 milestone 关掉的所有 issue 进行验证。全部完成后，每个成员书写自己负责部分的 release note。最后 Endgame master 会到后台网站发布新的 Stable 版本。\n印象深刻的事\n当之无愧就是《VS Code uses 13% CPU when idle due to blinking cursor rendering》。VS Code 是基于 Electron 的，而 Electron 则基于 Chromium。这样的话，Chromium 的锅有时候得我们来背。\nVS Code 里的编辑区域并不是 textarea ，全都是 mock 的，这也是主流做法，Ace、CodeMirror、Atom 无不例外。理由也很简单，要实现Tokenize、高亮、Partial Render、Line Wrap，自己控制渲染肯定是最方便的。为了尽可能模拟 textarea，我们模拟了光标。最开始这个光标的跳动，是通过 JavaScript 来控制光标的 opacity。后来社区给我们贡献了一个 pull request，使用 CSS animation 来调整 opacity。实现上来说肯定是比 JavaScript 版本更优雅，同时也提供了四五种不同的光标跳动的选项。\n但谁知道，Chromium 对于 CSS Animation 是有巨大的坑的。比如你写的 animation 是每秒改变一次 opacity，但是 Chromium 会根据刷新率（比如 60hz）来检测页面上的 animation。虽然我不知道 Chromium 做了什么，但是你可以看到每16ms，Chromium 就会吃掉一点你的 CPU 和 Battery\n\n真的是一点办法没有。我们起初没有发现这个问题，直到 broccoli 的作者 Jo Liss 给我们发了 issue，并且在 Twitter 上爆我们，瞬间就成了 Twitter 上大新闻。连 Miguel de Icaza 都点赞了，真的是。。。\n当时我刚吃完晚饭，但是由于这个事情在我的防区，我只好开电脑 troubleshoot。最后发现是 Chromium 的 bug，开了两年多了，我只好告诉 Jo Liss，这锅我们不背，但是我们会修的。\n结果之后好事者把事情捅到了 HackerNews，瞬间成了当天大新闻，还上了 TheRegister 小报。所有人都开始讨论使用 Browser 技术做桌面应用是不是正确的选择，撕的不亦乐乎。\n你们撕的倒是开心了，我那几天给各种老板解释什么是跳动的光标，忙的跟狗一样。好在后来 Chromium 的 PM lead Paul Irish 留言表示这是他们的 bug，算是完美收官了。\n有没有什么奇葩的 issue 或者 PR？\n\n你们猜大家看到中文写的 issue 会找谁来翻译？\n有些朋友提交了 PR，根本不管你给的建议，自顾自的更新修改。这样的 PR 根本不可能 merge，但是我们给的尽可能礼貌地建议，有些朋友真的把它们只当成建议。。。\n再一次说到跳动的光标，这个始作俑者是社区的朋友，看起来也是非常 neat 的实现，谁知道就踩了 Chromium 的坑呢。。。\n\n关于中文 issue 的问题，VS Code contribution guide 写的是比较清楚的，请大家用英文提问。但是鉴于中文用户量巨大，加之人总有英文不够用的时候，VS Code 也会经常看到中文问题。我有这样一些想法：\n\n写中文我个人觉得问题不大，毕竟 GitHub 是我们几乎唯一的反馈渠道，不能要求用户必须会英文。\n写中文的确增加了我本人的工作量，所以能写英文，还是尽量写。\n但如果你觉得需要严重的 Google Translate 的帮助，我建议还是写中文，并且 cc 我。不然可能翻译出来最后谁也看不明白，或者误解。\n我老板问我，为啥中文 issue 几乎把所有东西都写在标题里，然后 issue 描述留空。我真的不知道该如何回答。如果用中文写 issue，并 cc 我，请保证把reproduce steps 写好，一步一步用中文写清楚，这总没难度吧？\n如果第四步做不到，还要我解决问题，请考虑请我喝啤酒吧。\n\n生活\n大家都喜欢开源，但开源贡献者大部分时候是在做义务贡献。这么来看在微软搞 VS Code 就是一件愉快的事情，毕竟有人给你付工资让你做 open source。而且再也不用上班搞一套代码，回家之后私下自己在 GitHub 上面逛游，搞别的项目，上班和下班后可以在同一块土地上耕耘。\n当然这样缺点也很明显，就是生活和工作往往难以分开。工作是一周五天，一天八小时，但是 GiHub issue 从来都是 7*24。遇到棘手的问题的时候，很难放任不管，哪怕已经回了家。不过也正是因为项目的特殊性，我们组还是有比较好的 remote 和自由工作时间的文化的。\nzcbenz 的回答分享（link），伯乐在线已获授权\n这次籍着Electron 1.0发布的机会，说说我自己维护两个大型开源项目的经历吧，分别是 node-webkit（也就是现在的NW.js）和Electron。\n前者是几年前自己单打独斗，在公司0资源投入的情况下从两百多star一直做到好几千star，具体数字已经忘掉了，只记得当时在C++项目排行里做到了前十，直到自己另起炉灶。而后者，则是披着GitHub的光环，有着公司热心的投入，毫无障碍一路跑到了现在的三万多star。\n（使用Star History生成的star数统计图）\n\n一切从node-webkit开始\n如果大家有接触过前端或者桌面端的开发，那么很可能有听说过NW.js的大名，node-webkit就是其改名之前的称呼。\n但绝大部分人可能并不知道，node-webkit在最初发布的时候（2011年），并不是面向开发桌面应用程序，而是一个Node.js模块，可以创建一个WebKit窗口。神奇的一点是，你可以在这个窗口的页面里调用Node.js的模块。\nNode.js代码：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nvar nwebkit = require('nwebkit')\r\nnwebkit.init({'url' : 'index.html'}, function () {\r\n  nwebkit.context.runScript('')\r\n})\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1234\r\n\t\t\t\t\r\n\t\t\t\t\t\tvar nwebkit = require('nwebkit')nwebkit.init({'url' : 'index.html'}, function () {  nwebkit.context.runScript('')})\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\nindex.html代码：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n&lt;html&gt;&lt;body&gt;\r\n&lt;p id=\"output\"&gt;&lt;/p&gt;\r\n&lt;script&gt;\r\nrequire('fs').readdir('.', function (err, files) {\r\n  var result = ''\r\n  files.forEach(function (filename) { result += filename + '&lt;br/&gt;' } )\r\n  document.getElementById('output').innerHTML = result\r\n});\r\n&lt;/script&gt;\r\n&lt;/body&gt;&lt;/html&gt;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t12345678910\r\n\t\t\t\t\r\n\t\t\t\t\t\t&lt;html&gt;&lt;body&gt;&lt;p id=\"output\"&gt;&lt;/p&gt;&lt;script&gt;require('fs').readdir('.', function (err, files) {  var result = ''  files.forEach(function (filename) { result += filename + '&lt;br/&gt;' } )  document.getElementById('output').innerHTML = result});&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n大家可以在NW.js的webkitgtk分支里找到node-webkit的原始实现，甚至尝试重新build一遍。不过这个模块一直未能稳定下来，玩具的味道更多一些。\n再后来，原作者 rogerwang 对其进行了改进，从使用WebKit改成了调用Chromium Embedded Framework（简称CEF），一个可以把Chromium嵌入应用程序的库。这个代码一直没有正式公布，但大家可以在node-webkit的cef分支里找到。代码的另一部分是针对Chromium的几十行补丁，将Chromium的message loop替换为libuv，但是NW.js在开发过程中对代码库进行了很多次rebase操作，原始代码已经找不回来了。\n找个实习生来开发\nnode-webkit的原作者rogerwang在Intel开源技术中心工作，虽然Intel在大家心目中可能更多是个卖CPU的，其实在开源方面也非常热心，甚至提供开源方面的实习工作。\n在2012年的夏天，一则Intel的实习信息吸引了我的注意，上面说Intel需要一名熟悉Node.js的学生来进行node-webkit的开发。我投了简历，也很幸运地开始了node-webkit的开发。\nContent Shell\n我最初的工作是对node-webkit的cef分支进行改进，但是很快就发现很难继续进行开发了。CEF提供了自己的一套API来包装Chromium的内部API，而Node.js则是直接调用V8的API，如果想要把CEF和Node.js合并到同一个项目，困难重重。\n于是我干脆将node-webkit推倒重写。新的代码基于Content Shell，一个Chromium代码库内的最小化浏览器实现。\n重写后的结果非常不错，我得到了一个可以调用Node.js模块的浏览器实现。基于这套代码我发布了node-webkit v0.2.1。\n把node-webkit进化成桌面开发利器\n至此node-webkit已经变成了一个独立的浏览器，而不再是Node.js模块。为什么不把它变成一个使用JavaScript和HTML开发桌面应用的工具呢？后面几个月我开始对这个想法进行尝试。\n首先我模仿游戏框架LÖVE framework为node-webkit实现了一个打包系统，可以把应用直接附加到exe上：\n（node-webkit的打包系统，来自我自己的PPT）\n\n这个打包系统一直沿用到NW.js，但是因为性能方面的种种原因，后来在开发Electron时我并没有使用这套系统。\n接着这是各种细节上的完善：比如利用package.json文件来描述应用；给窗口加工具栏；拓展DOM来提供API；取消浏览器的安全系统；等等。当然还有无休无止的bug修复。\n其中最有挑战性的一点是支持Node.js的native module，我对Chromium打上各种补丁来暴露V8和OpenSSL的API，给Node.js打补丁好解决OpenSSL和NSS之间的符号冲突，提供自定义的node.lib来支持Windows，最后还要提供适用于node-webkit的编译工具。\n完成这些工作以后我发布了node-webkit v0.2.5。\n提供构建GUI的API\n这时我的绝大部分工作都在围着浏览器转，而由于浏览器自身的局限性很多功能我都没法提供。比方说浏览器里就没法创建系统原生的菜单。（当然今天已经有了HTML5 Menu标签，而当时是2012年。）\n于是我想到增加一个新的内置模块，用来提供对窗口、菜单等系统API的绑定，也就是：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nrequire('nw.gui')\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\trequire('nw.gui')\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n如果你有使用过NW.js的话，你应该很熟悉这一套API。\n经过几个月的完善后，我发布了node-webkit v0.3.6，这也是由我维护的最后一个版本。\nnode-webkit的推广\n虽然node-webkit属于Intel，但其更多属于rogerwang的个人项目，那时候这个项目在GitHub上也还挂在rogerwang的账户下。所以当时除了我自己一个人，没有其他任何来自Intel的资源投入。\n而像node-webkit这样的框架类项目，只有拥有用户，才会有生存下去的意义，所以在开发node-webkit的半年时间里，我也一直有在积极推广。\n首先是到处发帖子宣传node-webkit的好处，一大阵地是Node.js的邮件列表。每次有新版本我就会过去发布公告，回答问题，与人撕逼。其次则是编写范例应用，让新手快速入门，让其他人相信node-webkit的能力。最后则是去技术会议宣传，让大家知道node-webkit这个东西。\n当然最重要的还是认真回答Issues里的问题，努力修复bug增加功能。\n我的努力最后也得到了非常好的回报，在我结束node-webkit开发的时候，项目在GitHub上获得了数千个star，排到了C++项目排行的前十。\n第一个用户\n另外值得一提的是node-webkit的第一个用户，Light Table 编辑器。这个编辑器的作者 ibdknox 很大胆地使用了node-webkit来进行开发，当时为node-webkit迎来了非常多的关注，也给大家吃了一枚定心丸，为项目推广助力巨大。\n几年后Light Table又从node-webkit迁移到了Electron，当时好似好友重逢，感触良多。\n工作的转移\n在我为node-webkit工作半年之后，2012年底，这个项目开始吸引越来越多的注意力，也开始引起Intel一定程度的注意。rogerwang得到了机会放下其他的工作，开始全职维护node-webkit。\n（GitHub的代码贡献表）\n\n大家如果有在比较大的公司工作过，之前可能会奇怪，为什么一个实习生能如此随意地修改代码，发布新版本。其实正是因为这个项目当时在Intel内部无人关注，无人管理，我才得以随心所欲地尝试各种想法。\n但之后正当node-webkit冉冉升起之时，我却彻底失去了node-webkit的自治权，开始收到命令去完成指定的开发工作，被禁止随意去增加功能，也不允许去随意修复bug，而发布新版本、和客户交流的工作也被转移给更高级别的工程师手上。正如一个大公司里的螺丝钉。\n可能这种开发方式才是大公司的常态，我也不想抱怨任何人，但是抱歉，我只是一点也忍不了。\n为GitHub而战\n在我进行node-webkit开发的同时，GitHub正在秘密开发Atom编辑器。我了解到GitHub正在寻求一种使用HTMl和Node.js来开发桌面应用的方式，于是联系到Github\n的工程师nathansobo，表达了为GitHub工作的意愿。\n所幸node-webkit已经为我自己博得了足够的名气，在一面未见的情况下，我们敲定了协议，我需要将Atom迁移到node-webkit之上，并且提供支持工作。\n于是2012年底，我结束了在Intel的实习，开始为GitHub作为contractor工作。\n一个更好的桌面应用框架\n在我加入Atom的开发时，项目还基于CEF。我们尝试了将Atom迁移到node-webkit上面，但是最终效果并不是很好，node-webkit当时并不稳定，而且API有太多的坑。\n于是我开始重新考虑node-webkit的API设计，发现如果想要支撑大型应用，我不得不做出很多结构性的改变，而这些改变与其修改node-webkit，不如重写更加实际。在和GitHub讨论之后，我开始编写一个新的桌面应用框架，当时的名称叫做atom-shell。\n有兴趣的同学可以去了解一下我们究竟做了哪些改变。\n左右互搏\n后来，经过长时间的开发，atom-shell最终开放了源代码，而与此同时node-webkit 已经吸引了非常多的注意力和用户，我开始了和自己的竞争。\n再之后node-webkit改名为NW.js，而atom-shell则改名为Electron。\n（Electron 1.0）\n\n维护开源项目的生活\n说完了从node-webkit到Electron进化的历程，最后说说维护开源项目的体验吧。\n和普通项目不同，开源项目几乎所有的用户都来自公司外部，取决于项目的受欢迎程度，每天都会受到相当大数量的邮件。就我自己而言，来自GitHub的通知邮件每天数量在50封左右，需要花1到3小时左右一一消化回复。很多issue要去仔细重现，一些话题也需要大量的讨论，很费神。甚至会有troll过来破坏所有人的心情。\n其中最让人无奈的一个troll，最爱跑到issue下面留言，指摘Electron抄袭NW.js的代码，剽窃NW.js的理念，还到处劝人转用NW.js。简直了。\n维护项目的另一项工作，是审核pull request，和维护node-webkit时不同，Electron的用户群要大很多，所以每天都会收到pull request，其中不乏高质量的代码。但多数时候代码都不能直接合并，要么设计不合理，要么代码不合规范，更多地则是引入新bug。所以每个pull request都需要细心查看，还少不了和贡献者大量的讨论。\n于是，做完这些工作以后，留给写代码的时候反而少了很多，也是没有办法。但对于一个开源项目而言，这些琐碎的工作其实非常重要，只要让人感觉你的项目在被精心维护，才能不断吸引更多用户。一个维护不善的项目，哪怕初期因为种种原因吸引了很多用户，一旦更好的替代品出现，用户马上会飞速流失。\n生活上，因为是全职做开源，影响反而非常小。GitHub的远程工作氛围非常浓厚，我的大部分工作时间也是在家里而不是办公室里，所以多数时候是想写代码了便开始工作，不在状态就把工作放在一边去做做喜欢的事，以此用有限的时间维持非常高的工作效率。\n但开源会给自己带来另一个问题，责任感。一个没人用的项目，弃坑不过是一转念的事情，但是当越来越多人开始用你的项目，甚至有创业公司把未来压在你的项目上，责任感会越来越重，你唯一的选择就是将项目继续维护下去，无法弃坑，直到更好的技术出现。\n不知道我未来还会维护Electron多久，不过就过去几年来看，还挺开心的，应该还会继续做下去吧。\n\r\n        \r\n        \r\n        \n    \n         2 赞\n         1 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "bookmark_num": 1, "title": "维护大型开源项目，是怎样的体验？", "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2017/05/b94146f42c8e0ca2b0f04ed89b59053c.jpg"], "suggest": [{"weight": 10, "input": ["体验", "怎样", "维护", "项目", "开源", "大型"]}, {"weight": 7, "input": ["开源", "开发"]}], "tags": "开发,开源"}
2017-06-04 21:37:52 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"6e848736feb1aa6b38e9193440fdf13a","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:37:52 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 1,
 'comment_num': 0,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t'
            '<p>【伯乐在线导读】：开源运动愈发受到互联网科技公司的喜欢，曾经视开源为毒瘤的微软，也都大刀阔斧地拥抱开源了。参与开源的开发者也越来越多，GitHub '
            '的活跃度也佐证了这种现象。国外程序员 Nolan Lawson 在《<a '
            'href="http://blog.jobbole.com/111153/" '
            'target="_blank">做开源项目的维护者，是怎样一种体验？</a>》分享了他的感受和经验。</p>\n'
            '<p>在知乎上也有一个类似的讨论帖：「<a '
            'href="https://www.zhihu.com/question/36292298" '
            'target="_blank">维护一个大型开源项目是怎样的体验？</a>」。原题主的补充：</p>\n'
            '<p>（<span style="color: '
            '#999999;">我认为）大型开源项目包含以下任意一个或多个特征：</span></p>\n'
            '<ul>\n'
            '<li><span style="color: #999999;">GitHub star 数量 1000 '
            '+</span></li>\n'
            '<li><span style="color: #999999;">每周都可以接收到多个 issues 或 '
            'PR</span></li>\n'
            '<li><span style="color: #999999;">有一些公司或其他项目在生产环境中使用</span></li>\n'
            '<li><span style="color: #999999;">任意一个或多个包管理系统中下载量巨大</span></li>\n'
            '<li><span style="color: #999999;">在项目所在领域中拥有较大关注度</span></li>\n'
            '</ul>\n'
            '<p><span style="color: #999999;">可以从以下几个方面进行回答。</span></p>\n'
            '<ul>\n'
            '<li><span style="color: #999999;">先介绍你的项目，用来干什么的？</span></li>\n'
            '<li><span style="color: '
            '#999999;">在开发和维护的过程中遇到过哪些值得一提的事？</span></li>\n'
            '<li><span style="color: #999999;">有没有什么奇葩的 issue 或者 '
            'PR？</span></li>\n'
            '<li><span style="color: '
            '#999999;">对你的生活或者工作有没有造成影响（好的，坏的）？</span></li>\n'
            '</ul>\n'
            '<p>伯乐在线摘编了两位朋友的回答，均已获得授权。</p>\n'
            '<h3>1.\xa0rebornix\xa0的回答分享（<a href="https://rebornix.com/" '
            'target="_blank">link</a>），伯乐在线已获授权</h3>\n'
            '<p>加入 <a class=" wrap external" '
            'href="https://code.visualstudio.com/" target="_blank" '
            'rel="nofollow noreferrer">Visual Studio Code – Code Editing. '
            'Redefined</a> 快一年，趁这个机会聊一聊开发和维护这个项目的感受，如果大家不反对这是一个 <b>大型</b> '
            '开源项目的话。以下为个人理解，不代表公司也不代表团队。</p>\n'
            '<h2><b>项目</b></h2>\n'
            '<p>Visual Studio Code 的目标是做一个 Lightweight Editor，通过的扩展 api，让用户在 '
            'VS Code 中达到和 IDE 中接近的开发体验（效率）。</p>\n'
            '<p>不过很多群众对 VS Code 有诸多误解，我先来一一解答</p>\n'
            '<ol>\n'
            '<li><i>“VS Code 师出 VS，是 VS 找了一群人来重写的，复用了很多 VS '
            '的代码，等等“。</i>很抱歉，并不是这样<b>，</b>半毛钱关系也没有。VS Code 的核心代码，也就是 <a '
            'class=" wrap external" href="https://code.visualstudio.com/" '
            'target="_blank" rel="nofollow '
            'noreferrer">Microsoft/monaco-editor</a> 是 Erich Gamma 2011 '
            '年加入微软后，招聘的一支“<i>全新</i>”的队伍进行开发的。Monaco editor 从一开始就是一个 browser '
            'based editor，早期一直服务于各个微软系统中（比如 Visual Studio Online，OneDrive '
            'online）。招聘的这支队伍对于 Erich 来说并不是新的，因为大部分成员都是原先 IBM 的老部下，其中几位大爷跟着 '
            'Erich 撸了二十多年代码了。</li>\n'
            '<li><i>“VS Code 是 Atom 的复刻，是对 Atom 的魔改，是 Atom '
            '的一个主题！”</i>。很抱歉，<b>并不是这样</b>，但还是有几毛钱关系的。Monaco Editor '
            '在经历几年的高光期，进入了一个小小的黑暗时代。这时候团队成员开始调研将 Monaco Editor 做成桌面应用，和 Atom '
            '一样，我们首先关注到的就是 node-webkit。必须说 node-webkit '
            '是业界的一缕清风，给这个产业带来了太多的可能性。当然最后我们选用了 atom-shell，也就是后来的 '
            'Electron。但就是这个 atom-shell，给大家带来了以上的误导。</li>\n'
            '</ol>\n'
            '<p>最后，我们一定要寻根问祖的话，VS Code 应该是师出 '
            'Eclipse（<i>同志们，哎你们怎么扭头走人了，别怕，我话没说完呢</i>）。团队核心的几位大爷，早年就跟着 '
            'Erich，在写了几个 Editor／IDE 之后，创造了 Eclipse。正是因为见证了 Eclipse '
            '的兴衰，所以这一次在设计 Monaco／VS Code 的时候，才会如此的克制。Extensibility 不好吗？当然好，但是 '
            'Eclipse 的弊端已经在一些竞争对手身上出现啦。</p>\n'
            '<h2><b>开发／维护</b></h2>\n'
            '<p>我 13 年加入微软后，就开始接触到 Monaco 了。在使用的过程中踩了一些坑，研究过代码，做过好一些扩展。所以在 VS '
            'Code 正式开源后以及上线 Marketplace 后，我就开始动手写一点插件和发 Pull '
            'Request。去年五月得空和团队结对编程了两个礼拜后，就加入了 VS Code。</p>\n'
            '<p>VS Code 的开发几乎完全是公开的。早期我们还通过 User Voice '
            '收集反馈，但我们早就把它关掉了，所有问题的处理都放在 GitHub 上。我们的 Yearly/Monthly plan 都以 '
            'issue 的形式呈现 <a class=" wrap external" '
            'href="https://github.com/Microsoft/vscode/issues" target="_blank" '
            'rel="nofollow noreferrer">Microsoft/vscode</a> '
            '，而我个人正常的开发节奏是这样的：</p>\n'
            '<p><b>计划</b></p>\n'
            '<p>在上一个 milestone 快结束、新的 milestone 开始的第一周，和老板沟通新的 milestone '
            '自己想做的功能。以及自己要不要休假。</p>\n'
            '<p><b>Debt Week</b></p>\n'
            '<p>我们把新 Milestone 的一周当作 debt '
            'week，集中处理一些技术债，以及为一些插件做点微小的贡献。我一般会花一点时间在 Vim 插件以及我自己的 Ruby '
            '插件上。</p>\n'
            '<p><b>开发</b></p>\n'
            '<p>这之后就是两到三周正常的开发。每天起床得先把自己头上的新 issue 都 triage '
            '一遍，遇到紧急的得先修，不然就继续完成自己的 feature。</p>\n'
            '<p><b>Inbox Tracking</b></p>\n'
            '<p>我加入团队的时候，我们只有 1700 个左右的 issue，现在已经破 4000 了（大部分都是 feature '
            'request）。GitHub Inbox 在这种情况下是无用的，我们的做法是每周会有一名同事，负责 GitHub 的新 '
            'issue，assign 给合适的 owner。我已经当过三次 Inbox '
            'Tracker，只能用可怕来形容。每天一睁眼就是一百多个 issue 要处理，一点都不想起床。</p>\n'
            '<p><b>Endgame</b></p>\n'
            '<p>我们在 milestone 的最后一周 endgame 会对新 feature 进行各种花样的测试，对这个 '
            'milestone 关掉的所有 issue 进行验证。全部完成后，每个成员书写自己负责部分的 release note。最后 '
            'Endgame master 会到后台网站发布新的 Stable 版本。</p>\n'
            '<h2><b>印象深刻的事</b></h2>\n'
            '<p>当之无愧就是《<a class=" wrap external" '
            'href="https://news.ycombinator.com/item?id=13940014" '
            'target="_blank" rel="nofollow noreferrer">VS Code uses 13% CPU '
            'when idle due to blinking cursor rendering</a>》。VS Code 是基于 '
            'Electron 的，而 Electron 则基于 Chromium。这样的话，Chromium 的锅有时候得我们来背。</p>\n'
            '<p>VS Code 里的编辑区域并不是 textarea ，全都是 mock '
            '的，这也是主流做法，Ace、CodeMirror、Atom 无不例外。理由也很简单，要实现Tokenize、高亮、Partial '
            'Render、Line Wrap，自己控制渲染肯定是最方便的。为了尽可能模拟 '
            'textarea，我们模拟了光标。最开始这个光标的跳动，是通过 JavaScript 来控制光标的 '
            'opacity。后来社区给我们贡献了一个 pull request，使用 CSS animation 来调整 '
            'opacity。实现上来说肯定是比 JavaScript 版本更优雅，同时也提供了四五种不同的光标跳动的选项。</p>\n'
            '<p>但谁知道，Chromium 对于 CSS Animation 是有巨大的坑的。比如你写的 animation 是每秒改变一次 '
            'opacity，但是 Chromium 会根据刷新率（比如 60hz）来检测页面上的 animation。虽然我不知道 '
            'Chromium 做了什么，但是你可以看到每16ms，Chromium 就会吃掉一点你的 CPU 和 Battery</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx4.sinaimg.cn/large/63918611gy1ffyu81lg44j20go0f2q5f.jpg"></p>\n'
            '<p>真的是一点办法没有。我们起初没有发现这个问题，直到 <a class=" wrap external" '
            'href="https://github.com/broccolijs/broccoli" target="_blank" '
            'rel="nofollow noreferrer">broccoli</a> 的作者 Jo Liss 给我们发了 '
            'issue，并且在 Twitter 上爆我们，瞬间就成了 Twitter 上大新闻。连 Miguel de Icaza '
            '都点赞了，真的是。。。</p>\n'
            '<p>当时我刚吃完晚饭，但是由于这个事情在我的防区，我只好开电脑 troubleshoot。最后发现是 Chromium 的 '
            'bug，开了两年多了，我只好告诉 Jo Liss，这锅我们不背，但是我们会修的。</p>\n'
            '<p>结果之后好事者把事情捅到了 HackerNews，瞬间成了当天大新闻，还上了 TheRegister '
            '小报。所有人都开始讨论使用 Browser 技术做桌面应用是不是正确的选择，撕的不亦乐乎。</p>\n'
            '<p>你们撕的倒是开心了，我那几天给各种老板解释什么是跳动的光标，忙的跟狗一样。好在后来 Chromium 的 PM lead '
            'Paul Irish 留言表示这是他们的 bug，算是完美收官了。</p>\n'
            '<h2><b>有没有什么奇葩的 issue 或者 PR？</b></h2>\n'
            '<ol>\n'
            '<li>你们猜大家看到中文写的 issue 会找谁来翻译？</li>\n'
            '<li>有些朋友提交了 PR，根本不管你给的建议，自顾自的更新修改。这样的 PR 根本不可能 '
            'merge，但是我们给的尽可能礼貌地建议，有些朋友真的把它们只当成建议。。。</li>\n'
            '<li>再一次说到跳动的光标，这个始作俑者是社区的朋友，看起来也是非常 neat 的实现，谁知道就踩了 Chromium '
            '的坑呢。。。</li>\n'
            '</ol>\n'
            '<p>关于<b>中文 issue</b> 的问题，VS Code contribution guide '
            '写的是比较清楚的，请大家用英文提问。但是鉴于中文用户量巨大，加之人总有英文不够用的时候，VS Code '
            '也会经常看到中文问题。我有这样一些想法：</p>\n'
            '<ol>\n'
            '<li>写中文我个人觉得问题不大，毕竟 GitHub 是我们几乎唯一的反馈渠道，不能要求用户必须会英文。</li>\n'
            '<li>写中文的确增加了我本人的工作量，所以能写英文，还是尽量写。</li>\n'
            '<li>但如果你觉得需要严重的 Google Translate 的帮助，我建议还是写中文，并且 cc '
            '我。不然可能翻译出来最后谁也看不明白，或者误解。</li>\n'
            '<li>我老板问我，为啥中文 issue 几乎把所有东西都写在标题里，然后 issue '
            '描述留空。我真的不知道该如何回答。如果用中文写 issue，并 cc 我，请保证把reproduce steps '
            '写好，一步一步用中文写清楚，这总没难度吧？</li>\n'
            '<li>如果第四步做不到，还要我解决问题，请考虑请我喝啤酒吧。</li>\n'
            '</ol>\n'
            '<h2><b>生活</b></h2>\n'
            '<p>大家都喜欢开源，但开源贡献者大部分时候是在做义务贡献。这么来看在微软搞 VS Code '
            '就是一件愉快的事情，毕竟有人给你付工资让你做 open source。而且再也不用上班搞一套代码，回家之后私下自己在 GitHub '
            '上面逛游，搞别的项目，上班和下班后可以在同一块土地上耕耘。</p>\n'
            '<p>当然这样缺点也很明显，就是生活和工作往往难以分开。工作是一周五天，一天八小时，但是 GiHub issue 从来都是 '
            '7*24。遇到棘手的问题的时候，很难放任不管，哪怕已经回了家。不过也正是因为项目的特殊性，我们组还是有比较好的 remote '
            '和自由工作时间的文化的。</p>\n'
            '<h3>zcbenz 的回答分享（<a '
            'href="https://www.zhihu.com/question/36292298/answer/102418523" '
            'target="_blank">link</a>），伯乐在线已获授权</h3>\n'
            '<p>这次籍着Electron 1.0发布的机会，说说我自己维护两个大型开源项目的经历吧，分别是\xa0<a class=" '
            'wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/nwjs/nw.jsnode-webkit" '
            'target="_blank" rel="nofollow noreferrer">node-webkit<i '
            'class="icon-external"></i></a>（也就是现在的NW.js）和<a class=" wrap '
            'external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/electron/electron" '
            'target="_blank" rel="nofollow noreferrer">Electron<i '
            'class="icon-external"></i></a>。</p>\n'
            '<p>前者是几年前自己单打独斗，在公司0资源投入的情况下从两百多star一直做到好几千star，具体数字已经忘掉了，只记得当时在C++项目排行里做到了前十，直到自己另起炉灶。而后者，则是披着GitHub的光环，有着公司热心的投入，毫无障碍一路跑到了现在的三万多star。</p>\n'
            '<p style="text-align: center;">（使用<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=http%3A//www.timqian.com/star-history/" '
            'target="_blank" rel="nofollow noreferrer">Star History<i '
            'class="icon-external"></i></a>生成的star数统计图）</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx1.sinaimg.cn/large/63918611gy1ffyu84g4utj20go0bejse.jpg"><br>\n'
            '<b>一切从node-webkit开始</b></p>\n'
            '<p>如果大家有接触过前端或者桌面端的开发，那么很可能有听说过NW.js的大名，node-webkit就是其改名之前的称呼。</p>\n'
            '<p>但绝大部分人可能并不知道，node-webkit在最初发布的时候（2011年），并不是面向开发桌面应用程序，而是一个Node.js模块，可以创建一个WebKit窗口。神奇的一点是，你可以在这个窗口的页面里调用Node.js的模块。</p>\n'
            '<p>Node.js代码：</p><!-- Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933f57b8f68b171113394" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" touchscreen minimize '
            'scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; '
            'font-size: 13px !important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            "var nwebkit = require('nwebkit')\r\n"
            "nwebkit.init({'url' : 'index.html'}, function () {\r\n"
            "  nwebkit.context.runScript('')\r\n"
            '})</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933f57b8f68b171113394-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f57b8f68b171113394-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f57b8f68b171113394-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f57b8f68b171113394-4">4</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933f57b8f68b171113394-1"><span '
            'class="crayon-t">var</span><span class="crayon-h"> </span><span '
            'class="crayon-v">nwebkit</span><span class="crayon-h"> '
            '</span><span class="crayon-o">=</span><span class="crayon-h"> '
            '</span><span class="crayon-e">require</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-s">\'nwebkit\'</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f57b8f68b171113394-2"><span '
            'class="crayon-v">nwebkit</span><span '
            'class="crayon-sy">.</span><span class="crayon-e">init</span><span '
            'class="crayon-sy">(</span><span class="crayon-sy">{</span><span '
            'class="crayon-s">\'url\'</span><span class="crayon-h"> '
            '</span><span class="crayon-o">:</span><span class="crayon-h"> '
            '</span><span class="crayon-s">\'index.html\'</span><span '
            'class="crayon-sy">}</span><span class="crayon-sy">,</span><span '
            'class="crayon-h"> </span><span '
            'class="crayon-t">function</span><span class="crayon-h"> '
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">{</span></div><div class="crayon-line" '
            'id="crayon-5933f57b8f68b171113394-3"><span '
            'class="crayon-h">\xa0\xa0</span><span '
            'class="crayon-v">nwebkit</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-v">context</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-e">runScript</span><span '
            'class="crayon-sy">(</span><span class="crayon-s">\'\'</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f57b8f68b171113394-4"><span '
            'class="crayon-sy">}</span><span '
            'class="crayon-sy">)</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0010 seconds] -->\r\n'
            '<p>index.html代码：</p><!-- Crayon Syntax Highlighter v2.7.1.1 '
            '-->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933f57b8f696556454204" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" touchscreen minimize '
            'scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; '
            'font-size: 13px !important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><span class="crayon-mixed-highlight" '
            'title="含多种语言"></span><div class="crayon-button '
            'crayon-nums-button" title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            '&lt;html&gt;&lt;body&gt;\r\n'
            '&lt;p id="output"&gt;&lt;/p&gt;\r\n'
            '&lt;script&gt;\r\n'
            "require('fs').readdir('.', function (err, files) {\r\n"
            "  var result = ''\r\n"
            '  files.forEach(function (filename) { result += filename + '
            "'&lt;br/&gt;' } )\r\n"
            "  document.getElementById('output').innerHTML = result\r\n"
            '});\r\n'
            '&lt;/script&gt;\r\n'
            '&lt;/body&gt;&lt;/html&gt;</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933f57b8f696556454204-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f57b8f696556454204-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f57b8f696556454204-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f57b8f696556454204-4">4</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f57b8f696556454204-5">5</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f57b8f696556454204-6">6</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f57b8f696556454204-7">7</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f57b8f696556454204-8">8</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f57b8f696556454204-9">9</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f57b8f696556454204-10">10</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933f57b8f696556454204-1"><span '
            'class="crayon-o">&lt;</span><span '
            'class="crayon-v">html</span><span '
            'class="crayon-o">&gt;</span><span '
            'class="crayon-o">&lt;</span><span '
            'class="crayon-v">body</span><span '
            'class="crayon-o">&gt;</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f57b8f696556454204-2"><span '
            'class="crayon-o">&lt;</span><span class="crayon-i">p</span><span '
            'class="crayon-h"> </span><span class="crayon-v">id</span><span '
            'class="crayon-o">=</span><span '
            'class="crayon-s">"output"</span><span '
            'class="crayon-o">&gt;</span><span '
            'class="crayon-o">&lt;</span><span class="crayon-o">/</span><span '
            'class="crayon-e">p</span><span '
            'class="crayon-o">&gt;</span></div><div class="crayon-line" '
            'id="crayon-5933f57b8f696556454204-3"><span '
            'class="crayon-ta">&lt;script&gt;</span></div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-5933f57b8f696556454204-4"><span '
            'class="crayon-e">require</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-s">\'fs\'</span><span '
            'class="crayon-sy">)</span><span class="crayon-sy">.</span><span '
            'class="crayon-e">readdir</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-s">\'.\'</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-t">function</span><span class="crayon-h"> '
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-v">err</span><span class="crayon-sy">,</span><span '
            'class="crayon-h"> </span><span class="crayon-v">files</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">{</span></div><div class="crayon-line" '
            'id="crayon-5933f57b8f696556454204-5"><span '
            'class="crayon-h">\xa0\xa0</span><span '
            'class="crayon-t">var</span><span class="crayon-h"> </span><span '
            'class="crayon-e ">result</span><span class="crayon-h"> '
            '</span><span class="crayon-o">=</span><span class="crayon-h"> '
            '</span><span class="crayon-s">\'\'</span></div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-5933f57b8f696556454204-6"><span '
            'class="crayon-h">\xa0\xa0</span><span '
            'class="crayon-v">files</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-st">forEach</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-t">function</span><span class="crayon-h"> '
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-v">filename</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">{</span><span class="crayon-h"> </span><span '
            'class="crayon-v">result</span><span class="crayon-h"> '
            '</span><span class="crayon-o">+=</span><span class="crayon-h"> '
            '</span><span class="crayon-v">filename</span><span '
            'class="crayon-h"> </span><span class="crayon-o">+</span><span '
            'class="crayon-h"> </span><span '
            'class="crayon-s">\'&lt;br/&gt;\'</span><span class="crayon-h"> '
            '</span><span class="crayon-sy">}</span><span class="crayon-h"> '
            '</span><span class="crayon-sy">)</span></div><div '
            'class="crayon-line" id="crayon-5933f57b8f696556454204-7"><span '
            'class="crayon-h">\xa0\xa0</span><span '
            'class="crayon-v">document</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-e">getElementById</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-s">\'output\'</span><span '
            'class="crayon-sy">)</span><span class="crayon-sy">.</span><span '
            'class="crayon-v">innerHTML</span><span class="crayon-h"> '
            '</span><span class="crayon-o">=</span><span class="crayon-h"> '
            '</span><span class="crayon-i">result</span></div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-5933f57b8f696556454204-8"><span '
            'class="crayon-sy">}</span><span class="crayon-sy">)</span><span '
            'class="crayon-sy">;</span></div><div class="crayon-line" '
            'id="crayon-5933f57b8f696556454204-9"><span '
            'class="crayon-ta">&lt;/script&gt;</span></div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-5933f57b8f696556454204-10"><span '
            'class="crayon-o">&lt;</span><span class="crayon-o">/</span><span '
            'class="crayon-v">body</span><span '
            'class="crayon-o">&gt;</span><span '
            'class="crayon-o">&lt;</span><span class="crayon-o">/</span><span '
            'class="crayon-v">html</span><span '
            'class="crayon-o">&gt;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0037 seconds] -->\r\n'
            '<p>大家可以在<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/nwjs/nw.js/tree/webkitgtk" '
            'target="_blank" rel="nofollow noreferrer">NW.js的webkitgtk分支<i '
            'class="icon-external"></i></a>里找到node-webkit的原始实现，甚至尝试重新build一遍。不过这个模块一直未能稳定下来，玩具的味道更多一些。</p>\n'
            '<p>再后来，原作者\xa0<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/rogerwang" '
            'target="_blank" rel="nofollow noreferrer">rogerwang<i '
            'class="icon-external"></i></a>\xa0对其进行了改进，从使用WebKit改成了调用<a '
            'class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//bitbucket.org/chromiumembedded/cef" '
            'target="_blank" rel="nofollow noreferrer">Chromium Embedded '
            'Framework<i '
            'class="icon-external"></i></a>（简称CEF），一个可以把Chromium嵌入应用程序的库。这个代码一直没有正式公布，但大家可以在<a '
            'class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/nwjs/nw.js/tree/cef" '
            'target="_blank" rel="nofollow noreferrer">node-webkit的cef分支<i '
            'class="icon-external"></i></a>里找到。代码的另一部分是针对Chromium的几十行补丁，将Chromium的message '
            'loop替换为libuv，但是NW.js在开发过程中对代码库进行了很多次rebase操作，原始代码已经找不回来了。</p>\n'
            '<p><b>找个实习生来开发</b></p>\n'
            '<p>node-webkit的原作者rogerwang在Intel开源技术中心工作，虽然Intel在大家心目中可能更多是个卖CPU的，其实在开源方面也非常热心，甚至提供开源方面的实习工作。</p>\n'
            '<p>在2012年的夏天，<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//groups.google.com/forum/%23%21searchin/nodejs/node-webkit/nodejs/uPPujFxek7c/uUWgQUeQeHcJ" '
            'target="_blank" rel="nofollow noreferrer">一则Intel的实习信息<i '
            'class="icon-external"></i></a>吸引了我的注意，上面说Intel需要一名熟悉Node.js的学生来进行node-webkit的开发。我投了简历，也很幸运地开始了node-webkit的开发。</p>\n'
            '<p><b>Content Shell</b></p>\n'
            '<p>我最初的工作是对node-webkit的cef分支进行改进，但是很快就发现很难继续进行开发了。CEF提供了自己的一套API来包装Chromium的内部API，而Node.js则是直接调用V8的API，如果想要把CEF和Node.js合并到同一个项目，困难重重。</p>\n'
            '<p>于是我干脆将node-webkit推倒重写。新的代码基于<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//www.chromium.org/developers/content-module" '
            'target="_blank" rel="nofollow noreferrer">Content Shell<i '
            'class="icon-external"></i></a>，一个Chromium代码库内的最小化浏览器实现。</p>\n'
            '<p>重写后的结果非常不错，我得到了一个可以调用Node.js模块的浏览器实现。基于这套代码我发布了<a class=" wrap '
            'external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/nwjs/nw.js/tree/v0.2.1" '
            'target="_blank" rel="nofollow noreferrer">node-webkit v0.2.1<i '
            'class="icon-external"></i></a>。</p>\n'
            '<p><b>把node-webkit进化成桌面开发利器</b></p>\n'
            '<p>至此node-webkit已经变成了一个独立的浏览器，而不再是Node.js模块。为什么不把它变成一个使用JavaScript和HTML开发桌面应用的工具呢？后面几个月我开始对这个想法进行尝试。</p>\n'
            '<p>首先我模仿游戏框架<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//love2d.org/" '
            'target="_blank" rel="nofollow noreferrer">LÖVE framework<i '
            'class="icon-external"></i></a>为node-webkit实现了一个打包系统，可以把应用直接附加到exe上：</p>\n'
            '<p style="text-align: center;">（node-webkit的打包系统，来自<a class=" '
            'wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//speakerdeck.com/zcbenz/node-webkit-app-runtime-based-on-chromium-and-node-dot-js" '
            'target="_blank" rel="nofollow noreferrer">我自己的PPT<i '
            'class="icon-external"></i></a>）</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx2.sinaimg.cn/large/63918611gy1ffyu87hhcwj20go08qtb8.jpg"></p>\n'
            '<p>这个打包系统一直沿用到NW.js，但是因为性能方面的种种原因，后来在开发Electron时我并没有使用这套系统。</p>\n'
            '<p>接着这是各种细节上的完善：比如利用package.json文件来描述应用；给窗口加工具栏；拓展DOM来提供API；取消浏览器的安全系统；等等。当然还有无休无止的bug修复。</p>\n'
            '<p>其中最有挑战性的一点是支持Node.js的native '
            'module，我对Chromium打上各种补丁来暴露V8和OpenSSL的API，给Node.js打补丁好解决OpenSSL和NSS之间的符号冲突，提供自定义的node.lib来支持Windows，最后还要提供适用于node-webkit的编译工具。</p>\n'
            '<p>完成这些工作以后我发布了<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/nwjs/nw.js/commits/v0.2.5" '
            'target="_blank" rel="nofollow noreferrer">node-webkit v0.2.5<i '
            'class="icon-external"></i></a>。</p>\n'
            '<p><b>提供构建GUI的API</b></p>\n'
            '<p>这时我的绝大部分工作都在围着浏览器转，而由于浏览器自身的局限性很多功能我都没法提供。比方说浏览器里就没法创建系统原生的菜单。（当然今天已经有了HTML5 '
            'Menu标签，而当时是2012年。）</p>\n'
            '<p>于是我想到增加一个新的内置模块，用来提供对窗口、菜单等系统API的绑定，也就是：</p><!-- Crayon Syntax '
            'Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933f57b8f69d935830887" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" touchscreen minimize '
            'scroll-mouseover" style=" margin-top: 12px; margin-bottom: 12px; '
            'font-size: 13px !important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            "require('nw.gui')</textarea></div>\r\n"
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933f57b8f69d935830887-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933f57b8f69d935830887-1"><span '
            'class="crayon-e">require</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-s">\'nw.gui\'</span><span '
            'class="crayon-sy">)</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0003 seconds] -->\r\n'
            '<p>如果你有使用过NW.js的话，你应该很熟悉这一套API。</p>\n'
            '<p>经过几个月的完善后，我发布了<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/nwjs/nw.js/commits/v0.3.6" '
            'target="_blank" rel="nofollow noreferrer">node-webkit v0.3.6<i '
            'class="icon-external"></i></a>，这也是由我维护的最后一个版本。</p>\n'
            '<p><b>node-webkit的推广</b></p>\n'
            '<p>虽然node-webkit属于Intel，但其更多属于rogerwang的个人项目，那时候这个项目在GitHub上也还挂在rogerwang的账户下。所以当时除了我自己一个人，没有其他任何来自Intel的资源投入。</p>\n'
            '<p>而像node-webkit这样的框架类项目，只有拥有用户，才会有生存下去的意义，所以在开发node-webkit的半年时间里，我也一直有在积极推广。</p>\n'
            '<p>首先是到处发帖子宣传node-webkit的好处，一大阵地是Node.js的邮件列表。每次有新版本我就会过去<a '
            'class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//groups.google.com/forum/%23%21searchin/nodejs/node-webkit/nodejs/yFiEUM3TnMs/KW9qxv7X0rkJ" '
            'target="_blank" rel="nofollow noreferrer">发布公告<i '
            'class="icon-external"></i></a>，回答问题，与人撕逼。其次则是<a class=" wrap '
            'external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/zcbenz/nw-sample-apps" '
            'target="_blank" rel="nofollow noreferrer">编写范例应用<i '
            'class="icon-external"></i></a>，让新手快速入门，让其他人相信node-webkit的能力。最后则是<a '
            'class=" wrap external" '
            'href="https://link.zhihu.com/?target=http%3A//2012.jsconf.cn/" '
            'target="_blank" rel="nofollow noreferrer">去技术会议宣传<i '
            'class="icon-external"></i></a>，让大家知道node-webkit这个东西。</p>\n'
            '<p>当然最重要的还是认真回答Issues里的问题，努力修复bug增加功能。</p>\n'
            '<p>我的努力最后也得到了非常好的回报，在我结束node-webkit开发的时候，项目在GitHub上获得了数千个star，排到了C++项目排行的前十。</p>\n'
            '<p><b>第一个用户</b></p>\n'
            '<p>另外值得一提的是node-webkit的第一个用户，<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=http%3A//www.chris-granger.com/2012/11/05/meet-the-new-light-table/" '
            'target="_blank" rel="nofollow noreferrer">Light Table '
            '</a>编辑器。这个编辑器的作者\xa0<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/ibdknox" '
            'target="_blank" rel="nofollow noreferrer">ibdknox<i '
            'class="icon-external"></i></a>\xa0'
            '很大胆地使用了node-webkit来进行开发，当时为node-webkit迎来了非常多的关注，也给大家吃了一枚定心丸，为项目推广助力巨大。</p>\n'
            '<p>几年后Light Table又从node-webkit<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/LightTable/LightTable/pull/1756" '
            'target="_blank" rel="nofollow noreferrer">迁移到了Electron<i '
            'class="icon-external"></i></a>，当时好似好友重逢，感触良多。</p>\n'
            '<p><b>工作的转移</b></p>\n'
            '<p>在我为node-webkit工作半年之后，2012年底，这个项目开始吸引越来越多的注意力，也开始引起Intel一定程度的注意。rogerwang得到了机会放下其他的工作，开始全职维护node-webkit。</p>\n'
            '<p style="text-align: center;">（GitHub的代码贡献表）</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx2.sinaimg.cn/large/63918611gy1ffyu8ao0osj20go083myb.jpg"></p>\n'
            '<p>大家如果有在比较大的公司工作过，之前可能会奇怪，为什么一个实习生能如此随意地修改代码，发布新版本。其实正是因为这个项目当时在Intel内部无人关注，无人管理，我才得以随心所欲地尝试各种想法。</p>\n'
            '<p>但之后正当node-webkit冉冉升起之时，我却彻底失去了node-webkit的自治权，开始收到命令去完成指定的开发工作，被禁止随意去增加功能，也不允许去随意修复bug，而发布新版本、和客户交流的工作也被转移给更高级别的工程师手上。正如一个大公司里的螺丝钉。</p>\n'
            '<p>可能这种开发方式才是大公司的常态，我也不想抱怨任何人，但是抱歉，我只是一点也忍不了。</p>\n'
            '<p><b>为GitHub而战</b></p>\n'
            '<p>在我进行node-webkit开发的同时，GitHub正在秘密开发Atom编辑器。我了解到GitHub正在寻求一种使用HTMl和Node.js来开发桌面应用的方式，于是联系到Github<br>\n'
            '的工程师<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/nathansobo" '
            'target="_blank" rel="nofollow noreferrer">nathansobo<i '
            'class="icon-external"></i></a>，表达了为GitHub工作的意愿。</p>\n'
            '<p>所幸node-webkit已经为我自己博得了足够的名气，在一面未见的情况下，我们敲定了协议，我需要将Atom迁移到node-webkit之上，并且提供支持工作。</p>\n'
            '<p>于是2012年底，我结束了在Intel的实习，开始为GitHub作为contractor工作。</p>\n'
            '<p><b>一个更好的桌面应用框架</b></p>\n'
            '<p>在我加入Atom的开发时，项目还基于CEF。<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/atom/atom/pull/100" '
            'target="_blank" rel="nofollow '
            'noreferrer">我们尝试了将Atom迁移到node-webkit上面<i '
            'class="icon-external"></i></a>，但是最终效果并不是很好，node-webkit当时并不稳定，而且API有太多的坑。</p>\n'
            '<p>于是我开始重新考虑node-webkit的API设计，发现如果想要支撑大型应用，我不得不做出很多结构性的改变，而这些改变与其修改node-webkit，不如重写更加实际。在和GitHub讨论之后，我开始编写一个新的桌面应用框架，当时的名称叫做atom-shell。</p>\n'
            '<p>有兴趣的同学可以去了解一下<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=http%3A//electron.atom.io/docs/development/atom-shell-vs-node-webkit/" '
            'target="_blank" rel="nofollow noreferrer">我们究竟做了哪些改变<i '
            'class="icon-external"></i></a>。</p>\n'
            '<p><b>左右互搏</b></p>\n'
            '<p>后来，经过长时间的开发，atom-shell最终开放了源代码，而与此同时node-webkit '
            '已经吸引了非常多的注意力和用户，我开始了和自己的竞争。</p>\n'
            '<p>再之后node-webkit改名为NW.js，而atom-shell则改名为Electron。</p>\n'
            '<p style="text-align: center;">（Electron 1.0）</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx4.sinaimg.cn/large/63918611gy1ffyu8ew4xcj20go06odhb.jpg"></p>\n'
            '<p><b>维护开源项目的生活</b></p>\n'
            '<p>说完了从node-webkit到Electron进化的历程，最后说说维护开源项目的体验吧。</p>\n'
            '<p>和普通项目不同，开源项目几乎所有的用户都来自公司外部，取决于项目的受欢迎程度，每天都会受到相当大数量的邮件。就我自己而言，来自GitHub的通知邮件每天数量在50封左右，需要花1到3小时左右一一消化回复。很多issue要去仔细重现，一些话题也需要大量的讨论，很费神。甚至会有troll过来破坏所有人的心情。</p>\n'
            '<p>其中最让人无奈的<a class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//github.com/GnorTech" '
            'target="_blank" rel="nofollow noreferrer">一个troll<i '
            'class="icon-external"></i></a>，最爱跑到issue下面留言，指摘Electron抄袭NW.js的代码，剽窃NW.js的理念，还到处劝人转用NW.js。简直了。</p>\n'
            '<p>维护项目的另一项工作，是审核pull '
            'request，和维护node-webkit时不同，Electron的用户群要大很多，所以每天都会收到pull '
            'request，其中不乏高质量的代码。但多数时候代码都不能直接合并，要么设计不合理，要么代码不合规范，更多地则是引入新bug。所以每个pull '
            'request都需要细心查看，还少不了和贡献者大量的讨论。</p>\n'
            '<p>于是，做完这些工作以后，留给写代码的时候反而少了很多，也是没有办法。但对于一个开源项目而言，这些琐碎的工作其实非常重要，只要让人感觉你的项目在被精心维护，才能不断吸引更多用户。一个维护不善的项目，哪怕初期因为种种原因吸引了很多用户，一旦更好的替代品出现，用户马上会飞速流失。</p>\n'
            '<p>生活上，因为是全职做开源，影响反而非常小。GitHub的远程工作氛围非常浓厚，我的大部分工作时间也是在家里而不是办公室里，所以多数时候是想写代码了便开始工作，不在状态就把工作放在一边去做做喜欢的事，以此用有限的时间维持非常高的工作效率。</p>\n'
            '<p>但开源会给自己带来另一个问题，责任感。一个没人用的项目，弃坑不过是一转念的事情，但是当越来越多人开始用你的项目，甚至有<a '
            'class=" wrap external" '
            'href="https://link.zhihu.com/?target=https%3A//www.brave.com/" '
            'target="_blank" rel="nofollow noreferrer">创业公司<i '
            'class="icon-external"></i></a>把未来压在你的项目上，责任感会越来越重，你唯一的选择就是将项目继续维护下去，无法弃坑，直到更好的技术出现。</p>\n'
            '<p>不知道我未来还会维护Electron多久，不过就过去几年来看，还挺开心的，应该还会继续做下去吧。</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111189" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111189votetotal">2</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111189" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 1 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2017/05/b94146f42c8e0ca2b0f04ed89b59053c.jpg'],
 'tags': '开发,开源',
 'thumb_up_num': 2,
 'title': '维护大型开源项目，是怎样的体验？',
 'url': 'http://blog.jobbole.com/111189/',
 'url_obj_id': '6e848736feb1aa6b38e9193440fdf13a'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:37:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111291/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:37:56 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:56 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 743
2017-06-04 21:37:56 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:37:56 [elasticsearch] DEBUG: > 大型分布式团队的代码版本管理
2017-06-04 21:37:56 [elasticsearch] DEBUG: < {"tokens":[{"token":"大型","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"分布式","start_offset":2,"end_offset":5,"type":"CN_WORD","position":1},{"token":"分布","start_offset":2,"end_offset":4,"type":"CN_WORD","position":2},{"token":"布","start_offset":3,"end_offset":4,"type":"CN_WORD","position":3},{"token":"式","start_offset":4,"end_offset":5,"type":"CN_CHAR","position":4},{"token":"团队","start_offset":5,"end_offset":7,"type":"CN_WORD","position":5},{"token":"代码","start_offset":8,"end_offset":10,"type":"CN_WORD","position":6},{"token":"版本","start_offset":10,"end_offset":12,"type":"CN_WORD","position":7},{"token":"管理","start_offset":12,"end_offset":14,"type":"CN_WORD","position":8}]}
2017-06-04 21:37:56 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:56 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 411
2017-06-04 21:37:56 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:37:56 [elasticsearch] DEBUG: > IT技术,版本控制
2017-06-04 21:37:56 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"版本","start_offset":5,"end_offset":7,"type":"CN_WORD","position":1},{"token":"控制","start_offset":7,"end_offset":9,"type":"CN_WORD","position":2},{"token":"控","start_offset":7,"end_offset":8,"type":"CN_WORD","position":3},{"token":"制","start_offset":8,"end_offset":9,"type":"CN_WORD","position":4}]}
2017-06-04 21:37:56 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:37:56 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/447fef8e510a600301d54e56d3053b93 HTTP/1.1" 200 175
2017-06-04 21:37:56 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/447fef8e510a600301d54e56d3053b93 [status:200 request:0.019s]
2017-06-04 21:37:56 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111291/", "comment_num": 0, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文作者： 伯乐在线 - ThoughtWorks 。未经作者许可，禁止转载！欢迎加入伯乐在线 专栏作者。介绍这个话题，有两个原因：\n\n从开始工作到现在，我经历过没有代码版本管理、代码集中式管理，以及现在的分布式管理，我深刻体会到它在软件开发过程中的重要性；\n我在工作中遇到的很多客户都存在对于代码版本管理的各种问题、困惑和不同的需求。\n\n所以我希望将我在这个方面的经验分享给更多人，希望能帮助更多的团队解决在代码版本控制方面的问题和疑惑。\n\n（图片来自：http://t.cn/RSPnA5t）\n一、代码版本管理系统的历史\n代码版本管理系统大致可以分为三个时代：\n第一代：本地式\n这代主要的特点提供本地代码版本控制，比如SCCS(1972)、 PVCS(1985)等。\n这代主要实现了基本的代码版本管理，但缺点是无法让多人同时对一个版本库进行修改。这个也和当时软件规模不够大有关，也没有这样的需求。\n第二代：客户端-服务器式\n这代主要的特点是提供集中式服务器端代码版本控制,比如 CVS(1986), ClearCase(1992), Visual SourceSafe(1994), Perforce(1995), Subversion(2000) 等。\n这代主要是实现了中心服务器端的代码版本管理，特点是可以让多人同时对一个代码版本库进行同步和修改，但缺点也相当明显：\n\n在无法连接服务器的情况下，无法查看日志以及提交和比较代码版本（慢速网络和远程异地工作的程序员的痛），以及当服务或者网络出现问题的时候很多人员就会无法工作。\n不支持local branch，导致branch创建管理复杂，并且一旦创建就很难修改（快速迭代开发中的程序员的痛）\n由于只有一个中心端服务器，一旦发生灾难性问题，那么所有日志都会丢失，所以需要经常做备份（备份需要不小的成本）\n如果软件代码量过于庞大，一般会出现速度缓慢的情况，因为每次的日志查询、不同版本之间的代码比较和代码提交等操作都需要和服务器通信，造成服务器端的负载过大。\n\n第三代：分布式\n这代主要的特点是提供分布式代码版本控制,比如Git(2005), Mercurial(2005)等。\n这代结合了第一代和第二代的优点并实现了分布式的代码版本管理。\n这代的优点：分布式管理，在没有和服务器有连接的情况下仍然可以查看日志，提交代码，创建分支；支持local branch，可以快速方便的实现各种分支管理；支持分布式，从而可以实现分块管理，以及负载分流管理。\n缺点是有一定的学习曲线，比如分布方式下的代码同步，local branch的理解与运用，分布式代码管理的理解与运用等。详细的比较可以参考：这里。\n二、大型分布式团队\n曾经有这样一个分布式团队，他们在多个城市都有小分队，并且正在开发一个大型项目，见下图\n\n他们使用的代码版本管理工具是第二代代码管理工具SVN，管理方案如下：\n\n但是他们在使用的过程中却遇到了下面这些问题与痛点。\n由于是分布式团队，所以：\n\n基于团队的代码模块分离困难\n\n当服务器不可用时：\n\n不能查看提交记录\n不能比较文件\n不能提交代码\n\n创建代码分支时：\n\n分支创建速度慢\n多分支管理困难\n\n在提交代码时：\n\n希望有Code Review\n希望有CI Review\n\n因为代码庞大：\n\n查看日志慢\n\n备份代码库的时候：\n\n需要停机备份\n备份成本高\n\n针对以上问题，可以使用新一代的分布式的代码版本管理系统来解决，见下图：\n\n其中每一个团队都有自己独立的代码库，有一个中心库用于同步这些独立的代码库，并且每个库都由团队自己管理和维护。而且代码版本管理系统需要支持轻量分支，代码评审，离线提交，离线查看日志等功能。\n但是由于当前没有一个单一的代码版本管理工具能同时满足以上所有需求，所以很多公司都基于它们开发集成管理系统，比如Gerrit，GitLab，GitHub，BitBucket等。其中的Gerrit由于其开源，免费，以及由Google开发和维护，并管理着Android，OpenStack等大型项目源代码的特点，成为了大型分布式团队优先选择的系统。\n三、Gerrit\nGerrit是由Google开发的，用于管理Google Android项目源代码的一个系统。它是基于Java和Prolog等开发的，支持Git，权限管理，代码评审等综合的一个管理系统。它与GitLab和GitHub最大的不同是它隐藏了代码分库管理的细节，使得开发人员不需要进行fork这样的手工分库和同步操作就可以进行代码开发和提交，节省了开发人员的时间,见下图。\n\n由于Android本身是一个开源项目，所以贡献者非常多，开发团队也遍布多个地方（存在时差），导致“如何保证代码质量”成为一个很大的问题。为此Google在Gerrit中加入了功能强大并且十分严格的代码评审系统。\n首先当代码提交以后并不会直接merge到中心库里面，它会暂时存在一个临时库里面，同时生成一个代码评审记录，并向特定的评审人员发送请求评审的邮件。当评审者在评审代码之后，如果通过就需要在Gerrit系统里面对代码进行打分，如果通过了就可以将代码merge到中心库里面去，如果没有通过，那么这个代码提交就需要被返还给开发者进行修改。\n与此同时它还可以自动触发一次包含本次代码提交的CI构建（前提需要手工预先配置），如果CI自动构建和测试通过，也可以自动在Gerrit系统里面进行打分，可以给最终进行merge的人员进行参考。示意流程见下图。\n\n由于Android源代码由上百个独立的代码库组成，并且编译一个Android系统需要大部分代码库里面的代码，所以如何管理如此多的代码库也是一个难题，比如如何一次性同步需要编译一个需要支持特定设备的代码库组合。为此Google基于Python语言开发一个工具叫Repo ，这个工具可以自定义你需要的代码库的组合，并且一次性对这些代码库进行同步，比如pull和push，见下图。\n\n四、SVN到Git的迁移\n对于想从集中式代码管理系统迁移到分布式代码管理系统的团队来讲，如果团队规模小，那么问题一般都不大，但是对于大型分布式团队却是困难重重。最主要的两个困难：\n\n代码量太大，很难一次性将所有的代码和日志等在短时间内迁移成功。\n由于下属团队太多，很难同一时间让所有团队都切换至新的代码管理工具。\n\n为了解决这些难题，一般都会首先选用1个团队来使用新的代码版本管理工具。如果这个团队转换成功，再将其作为标杆向其他团队推广，从而逐步的将所有团队切换到新的工具上去。\nSVN到Git的迁移方案一般主要会使用两种工具：\n\n开源免费的git-svn；\n商业收费的Subgit。\n\n其中使用Subgit的迁移方案如下图：\n\n如果团队组资源充足，还可以使用Gerrit搭建一个独立的Git服务器，从而以分布式的方式进行代码迁移，如下图：\n\n五、多产品线的管理\n使用同一个中心代码库管理多产品线一直是大型项目的一个困难点，特别是使用SVN这样的工具更是难以管理，因为SVN这种工具的Branch本质上是一个目录拷贝，并且速度慢，而且代码回迁也需要手动进行。但是如果使用Git的特性来管理多产品线，比起SVN是事半功倍。具体方案见下图：\n\n总结：\n分布式代码版本管理系统并不一定适合所有团队，比如中小团队可能更关心的只是成本更低，简单易用，那么SVN等这类集中式版本管理工具还是更为适合。但是不管团队最终选用什么代码版本管理工具，只要适合自己的团队的开发流程和工作方式，并且代码管理顺畅就可以了。\n\n\r\n        \r\n        \r\n        \n    \n         1 赞\n          收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：ThoughtWorks\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            ThoughtWorks是一家全球IT咨询公司，追求卓越软件质量，致力于科技驱动商业变革。擅长构建定制化软件产品，帮助客户快速将概念转化为价值。同时为客户提供用户体验设计、技术战略咨询、组织转型等咨询服务。        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  58 ·           \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 0, "title": "大型分布式团队的代码版本管理", "front_image_url": ["http://insights.thoughtworkers.org/wp-content/uploads/2017/05/0-1.png"], "suggest": [{"weight": 10, "input": ["管理", "版本", "团队", "分布", "分布式", "代码", "大型"]}, {"weight": 7, "input": ["版本", "技术", "控制"]}], "tags": "IT技术,版本控制"}
2017-06-04 21:37:56 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"447fef8e510a600301d54e56d3053b93","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:37:56 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 0,
 'comment_num': 0,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文作者： <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/thoughtworkschina">ThoughtWorks</a> '
            '。未经作者许可，禁止转载！<br>欢迎加入伯乐在线 <a href="http://blog.jobbole.com/99322" '
            'target="_blank">专栏作者</a>。</div><p>介绍这个话题，有两个原因：</p>\n'
            '<ol>\n'
            '<li>从开始工作到现在，我经历过没有代码版本管理、代码集中式管理，以及现在的分布式管理，我深刻体会到它在软件开发过程中的重要性；</li>\n'
            '<li>我在工作中遇到的很多客户都存在对于代码版本管理的各种问题、困惑和不同的需求。</li>\n'
            '</ol>\n'
            '<p>所以我希望将我在这个方面的经验分享给更多人，希望能帮助更多的团队解决在代码版本控制方面的问题和疑惑。</p>\n'
            '<p><a '
            'href="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/0-1.png"><img '
            'src="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/0-1.png" '
            'alt="" width="492" height="256"></a></p>\n'
            '<p>（图片来自：http://t.cn/RSPnA5t）</p>\n'
            '<h3>一、代码版本管理系统的历史</h3>\n'
            '<p>代码版本管理系统大致可以分为三个时代：</p>\n'
            '<p><strong>第一代：本地式</strong></p>\n'
            '<p>这代主要的特点提供本地代码版本控制，比如SCCS(1972)、 PVCS(1985)等。</p>\n'
            '<p>这代主要实现了基本的代码版本管理，但缺点是无法让多人同时对一个版本库进行修改。这个也和当时软件规模不够大有关，也没有这样的需求。</p>\n'
            '<p><strong>第二代：客户端-服务器式</strong></p>\n'
            '<p>这代主要的特点是提供集中式服务器端代码版本控制,比如 CVS(1986), ClearCase(1992), Visual '
            'SourceSafe(1994), Perforce(1995), Subversion(2000) 等。</p>\n'
            '<p>这代主要是实现了中心服务器端的代码版本管理，特点是可以让多人同时对一个代码版本库进行同步和修改，但缺点也相当明显：</p>\n'
            '<ol>\n'
            '<li>在无法连接服务器的情况下，无法查看日志以及提交和比较代码版本（慢速网络和远程异地工作的程序员的痛），以及当服务或者网络出现问题的时候很多人员就会无法工作。</li>\n'
            '<li>不支持local '
            'branch，导致branch创建管理复杂，并且一旦创建就很难修改（快速迭代开发中的程序员的痛）</li>\n'
            '<li>由于只有一个中心端服务器，一旦发生灾难性问题，那么所有日志都会丢失，所以需要经常做备份（备份需要不小的成本）</li>\n'
            '<li>如果软件代码量过于庞大，一般会出现速度缓慢的情况，因为每次的日志查询、不同版本之间的代码比较和代码提交等操作都需要和服务器通信，造成服务器端的负载过大。</li>\n'
            '</ol>\n'
            '<p><strong>第三代：分布式</strong></p>\n'
            '<p>这代主要的特点是提供分布式代码版本控制,比如Git(2005), Mercurial(2005)等。</p>\n'
            '<p>这代结合了第一代和第二代的优点并实现了分布式的代码版本管理。</p>\n'
            '<p>这代的优点：分布式管理，在没有和服务器有连接的情况下仍然可以查看日志，提交代码，创建分支；支持local '
            'branch，可以快速方便的实现各种分支管理；支持分布式，从而可以实现分块管理，以及负载分流管理。</p>\n'
            '<p>缺点是有一定的学习曲线，比如分布方式下的代码同步，local '
            'branch的理解与运用，分布式代码管理的理解与运用等。详细的比较可以参考：<a '
            'href="https://en.wikipedia.org/w/index.php?title=Comparison_of_version_control_software">这里</a>。</p>\n'
            '<h3>二、大型分布式团队</h3>\n'
            '<p>曾经有这样一个分布式团队，他们在多个城市都有小分队，并且正在开发一个大型项目，见下图</p>\n'
            '<p><a '
            'href="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/1-2.png"><img '
            'src="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/1-2.png" '
            'alt="" width="975" height="671"></a></p>\n'
            '<p>他们使用的代码版本管理工具是第二代代码管理工具SVN，管理方案如下：</p>\n'
            '<p><a '
            'href="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/2-1.png"><img '
            'src="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/2-1.png" '
            'alt="" width="975" height="729"></a></p>\n'
            '<p>但是他们在使用的过程中却遇到了下面这些问题与痛点。</p>\n'
            '<p>由于是分布式团队，所以：</p>\n'
            '<ul>\n'
            '<li>基于团队的代码模块分离困难</li>\n'
            '</ul>\n'
            '<p>当服务器不可用时：</p>\n'
            '<ul>\n'
            '<li>不能查看提交记录</li>\n'
            '<li>不能比较文件</li>\n'
            '<li>不能提交代码</li>\n'
            '</ul>\n'
            '<p>创建代码分支时：</p>\n'
            '<ul>\n'
            '<li>分支创建速度慢</li>\n'
            '<li>多分支管理困难</li>\n'
            '</ul>\n'
            '<p>在提交代码时：</p>\n'
            '<ul>\n'
            '<li>希望有Code Review</li>\n'
            '<li>希望有CI Review</li>\n'
            '</ul>\n'
            '<p>因为代码庞大：</p>\n'
            '<ul>\n'
            '<li>查看日志慢</li>\n'
            '</ul>\n'
            '<p>备份代码库的时候：</p>\n'
            '<ul>\n'
            '<li>需要停机备份</li>\n'
            '<li>备份成本高</li>\n'
            '</ul>\n'
            '<p>针对以上问题，可以使用新一代的分布式的代码版本管理系统来解决，见下图：</p>\n'
            '<p><a '
            'href="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/3-2.png"><img '
            'src="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/3-2.png" '
            'alt="" width="975" height="679"></a></p>\n'
            '<p>其中每一个团队都有自己独立的代码库，有一个中心库用于同步这些独立的代码库，并且每个库都由团队自己管理和维护。而且代码版本管理系统需要支持轻量分支，代码评审，离线提交，离线查看日志等功能。</p>\n'
            '<p>但是由于当前没有一个单一的代码版本管理工具能同时满足以上所有需求，所以很多公司都基于它们开发集成管理系统，比如Gerrit，GitLab，GitHub，BitBucket等。其中的Gerrit由于其开源，免费，以及由Google开发和维护，并管理着Android，OpenStack等大型项目源代码的特点，成为了大型分布式团队优先选择的系统。</p>\n'
            '<h3>三、Gerrit</h3>\n'
            '<p>Gerrit是由Google开发的，用于管理Google '
            'Android项目源代码的一个系统。它是基于Java和Prolog等开发的，支持Git，权限管理，代码评审等综合的一个管理系统。它与GitLab和GitHub最大的不同是它隐藏了代码分库管理的细节，使得开发人员不需要进行fork这样的手工分库和同步操作就可以进行代码开发和提交，节省了开发人员的时间,见下图。</p>\n'
            '<p><a '
            'href="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/4-2.png"><img '
            'src="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/4-2.png" '
            'alt="" width="975" height="671"></a></p>\n'
            '<p>由于Android本身是一个开源项目，所以贡献者非常多，开发团队也遍布多个地方（存在时差），导致“如何保证代码质量”成为一个很大的问题。为此Google在Gerrit中加入了功能强大并且十分严格的代码评审系统。</p>\n'
            '<p>首先当代码提交以后并不会直接merge到中心库里面，它会暂时存在一个临时库里面，同时生成一个代码评审记录，并向特定的评审人员发送请求评审的邮件。当评审者在评审代码之后，如果通过就需要在Gerrit系统里面对代码进行打分，如果通过了就可以将代码merge到中心库里面去，如果没有通过，那么这个代码提交就需要被返还给开发者进行修改。</p>\n'
            '<p>与此同时它还可以自动触发一次包含本次代码提交的CI构建（前提需要手工预先配置），如果CI自动构建和测试通过，也可以自动在Gerrit系统里面进行打分，可以给最终进行merge的人员进行参考。示意流程见下图。</p>\n'
            '<p><a '
            'href="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/5-2.png"><img '
            'src="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/5-2.png" '
            'alt="" width="975" height="642"></a></p>\n'
            '<p>由于Android源代码由上百个独立的代码库组成，并且编译一个Android系统需要大部分代码库里面的代码，所以如何管理如此多的代码库也是一个难题，比如如何一次性同步需要编译一个需要支持特定设备的代码库组合。为此Google基于Python语言开发一个工具叫Repo '
            '，这个工具可以自定义你需要的代码库的组合，并且一次性对这些代码库进行同步，比如pull和push，见下图。</p>\n'
            '<p><a '
            'href="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/6-1.png"><img '
            'src="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/6-1.png" '
            'alt="" width="975" height="756"></a></p>\n'
            '<h3>四、SVN到Git的迁移</h3>\n'
            '<p>对于想从集中式代码管理系统迁移到分布式代码管理系统的团队来讲，如果团队规模小，那么问题一般都不大，但是对于大型分布式团队却是困难重重。最主要的两个困难：</p>\n'
            '<ol>\n'
            '<li>代码量太大，很难一次性将所有的代码和日志等在短时间内迁移成功。</li>\n'
            '<li>由于下属团队太多，很难同一时间让所有团队都切换至新的代码管理工具。</li>\n'
            '</ol>\n'
            '<p>为了解决这些难题，一般都会首先选用1个团队来使用新的代码版本管理工具。如果这个团队转换成功，再将其作为标杆向其他团队推广，从而逐步的将所有团队切换到新的工具上去。</p>\n'
            '<p>SVN到Git的迁移方案一般主要会使用两种工具：</p>\n'
            '<ol>\n'
            '<li>开源免费的git-svn；</li>\n'
            '<li>商业收费的Subgit。</li>\n'
            '</ol>\n'
            '<p>其中使用Subgit的迁移方案如下图：</p>\n'
            '<p><a '
            'href="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/7-1.png"><img '
            'src="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/7-1.png" '
            'alt="" width="975" height="646"></a></p>\n'
            '<p>如果团队组资源充足，还可以使用Gerrit搭建一个独立的Git服务器，从而以分布式的方式进行代码迁移，如下图：</p>\n'
            '<p><a '
            'href="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/8.png"><img '
            'src="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/8.png" '
            'alt="" width="975" height="675"></a></p>\n'
            '<h3>五、多产品线的管理</h3>\n'
            '<p>使用同一个中心代码库管理多产品线一直是大型项目的一个困难点，特别是使用SVN这样的工具更是难以管理，因为SVN这种工具的Branch本质上是一个目录拷贝，并且速度慢，而且代码回迁也需要手动进行。但是如果使用Git的特性来管理多产品线，比起SVN是事半功倍。具体方案见下图：</p>\n'
            '<p><a '
            'href="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/9.png"><img '
            'src="http://insights.thoughtworkers.org/wp-content/uploads/2017/05/9.png" '
            'alt="" width="975" height="569"></a></p>\n'
            '<h3>总结：</h3>\n'
            '<p>分布式代码版本管理系统并不一定适合所有团队，比如中小团队可能更关心的只是成本更低，简单易用，那么SVN等这类集中式版本管理工具还是更为适合。但是不管团队最终选用什么代码版本管理工具，只要适合自己的团队的开发流程和工作方式，并且代码管理顺畅就可以了。</p>\n'
            '<div></div>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111291" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111291votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111291" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i>  收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/thoughtworkschina">ThoughtWorks</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/thoughtworkschina">\r\n'
            '\t\t\t<img src="http://tp3.sinaimg.cn/1774908135/180/0/1">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            '
            'ThoughtWorks是一家全球IT咨询公司，追求卓越软件质量，致力于科技驱动商业变革。擅长构建定制化软件产品，帮助客户快速将概念转化为价值。同时为客户提供用户体验设计、技术战略咨询、组织转型等咨询服务。        '
            '</span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a '
            'href="http://www.jobbole.com/members/thoughtworkschina" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a '
            'href="http://blog.jobbole.com/author/thoughtworkschina/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/thoughtworkschina/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 58</a> · <a title="我的网站" '
            'target="_blank" href="http://insights.thoughtworkers.org/"><i '
            'class="fa fa-link"></i></a>\xa0<a title="微博主页" target="_blank" '
            'href="http://weibo.com/thoughtworkschina"><i class="fa '
            'fa-weibo"></i></a>\xa0        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://insights.thoughtworkers.org/wp-content/uploads/2017/05/0-1.png'],
 'tags': 'IT技术,版本控制',
 'thumb_up_num': 1,
 'title': '大型分布式团队的代码版本管理',
 'url': 'http://blog.jobbole.com/111291/',
 'url_obj_id': '447fef8e510a600301d54e56d3053b93'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:00 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/102337/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:00 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:00 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 1155
2017-06-04 21:38:00 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:00 [elasticsearch] DEBUG: > 我想对所有新手程序员说些肺腑之言
2017-06-04 21:38:00 [elasticsearch] DEBUG: < {"tokens":[{"token":"我","start_offset":0,"end_offset":1,"type":"CN_CHAR","position":0},{"token":"想","start_offset":1,"end_offset":2,"type":"CN_CHAR","position":1},{"token":"所有","start_offset":3,"end_offset":5,"type":"CN_WORD","position":2},{"token":"新手","start_offset":5,"end_offset":7,"type":"CN_WORD","position":3},{"token":"程序员","start_offset":7,"end_offset":10,"type":"CN_WORD","position":4},{"token":"程序","start_offset":7,"end_offset":9,"type":"CN_WORD","position":5},{"token":"序","start_offset":8,"end_offset":9,"type":"CN_WORD","position":6},{"token":"员","start_offset":9,"end_offset":10,"type":"CN_CHAR","position":7},{"token":"说些","start_offset":10,"end_offset":12,"type":"CN_WORD","position":8},{"token":"肺腑之言","start_offset":12,"end_offset":16,"type":"CN_WORD","position":9},{"token":"肺腑","start_offset":12,"end_offset":14,"type":"CN_WORD","position":10},{"token":"肺","start_offset":12,"end_offset":13,"type":"CN_WORD","position":11},{"token":"腑","start_offset":13,"end_offset":14,"type":"CN_WORD","position":12},{"token":"之言","start_offset":14,"end_offset":16,"type":"CN_WORD","position":13}]}
2017-06-04 21:38:00 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:00 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 492
2017-06-04 21:38:00 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:00 [elasticsearch] DEBUG: > 开发,,程序员
2017-06-04 21:38:00 [elasticsearch] DEBUG: < {"tokens":[{"token":"开发","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"发","start_offset":1,"end_offset":2,"type":"CN_WORD","position":1},{"token":"程序员","start_offset":4,"end_offset":7,"type":"CN_WORD","position":2},{"token":"程序","start_offset":4,"end_offset":6,"type":"CN_WORD","position":3},{"token":"序","start_offset":5,"end_offset":6,"type":"CN_WORD","position":4},{"token":"员","start_offset":6,"end_offset":7,"type":"CN_CHAR","position":5}]}
2017-06-04 21:38:00 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:00 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/73efeb8ce5c3c14349fe3817c6ed1e7f HTTP/1.1" 200 175
2017-06-04 21:38:00 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/73efeb8ce5c3c14349fe3817c6ed1e7f [status:200 request:0.012s]
2017-06-04 21:38:00 [elasticsearch] DEBUG: > {"thumb_up_num": 3, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/102337/", "comment_num": 3, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - 伯小乐 翻译。未经许可，禁止转载！英文出处：Joseph Gentle。欢迎加入翻译组。【伯乐在线导读】：Joseph Gentle 是 ShareJS 的作者，前 Google Wave 工程师。在编程经验有 20 年，开课六七门，授课时长大约一千小时。本文是他在 2014 年所写。\n\n\n我编程的时间，已超过 20 年了。截至目前，我开的编程入门课，也有六七门了。传授编程的总时间，大约也有 1000 小时了。下面这些话，没有特别的前后顺序，我对自己学员不止说过一次。\n欢迎来编程。\n编程真的很难\n无论你是多么擅长编程，能拖慢你脚步的唯一因素是你学习和解决问题的能力。随着你的编程愈发提高，你更能体会我这句话了。编程还有个有趣的地方，永远不会觉得枯燥。如果你觉得枯燥，那估计你在什么地方做错了，你应当对在写的代码，做一下抽象，或者优化。\n编程同样也会是最让你沮丧的事情之一\n正常的编程经历应该是这样的：尝试解决问题 → 受挫沮丧 → 再努力尝试 → 回退一步 → 灵光乍现 → 最终搞定，程序正常运行。感觉受挫，这实在太正常不过了，不可能完全没有受挫。（随着你的技艺提高，你会挑战更难的问题，这过程还是会遇到受挫。）挫折感让提高解决问题带来的满足感。你得适应挫折感。\n不管挫折感有多大，总会有解决方案的\n随着你的技艺提高，对摆脱困境，你会有更强更大的自信。挫折感越大，推倒你解决更难的问题。（如果问题太简单，那就太没趣啦。）\n当我们还是小孩时，很多事情都做的很糟糕，只是我们没注意到。\n成年后，把事搞得很糟糕的机会并不多。拥抱这种感受，完全正常。你做的事情，并不是人人都有能力去做的。\n你还得知道，练习编程的第 1 个小时，和第 10 个小时是截然不同的\n与第 100 个小时更不一样了。Dan Plan 的博主曾写过一篇文章，说他在练习 1 万小时，他的高尔夫球技极大提升。编程也是同样的道理。（伯乐在线补充：谷歌大牛 Peter Norvig 的观点也类似，请看他的文章《自学编程，十年磨一剑》。）\n你是一个魔术师！\n编程也是一种魔术。想想看，我们努力学习，从魔法书中汲取知识，然后制作符咒（从计算机书和互联网学习，然后编写程序）。魔术师可以教会魔术师如何施展魔法。我们程序员可以在现实也能做到这些，并且还能创造人人都能用的神奇设备，比如：互联网和移动电话。如果没有我们的技能，不可能有这样的设备。\n善用互联网\n在你学习编程的第一年中，你遇到的每个问题，很多在你之前的程序员，早就碰到了。并且网上已有记录好的答案了。你使用搜索引擎的效率越高，你会更高兴。警告：如果你对网上搜到的代码段不理解，那就不要随便就用。\n不管何时编程，都要随身带着「百宝囊」\n这些工具是我们干活的诀窍。你要学的第一批东西（变量、循环等），就好比工具箱中的螺丝刀和锤子。在编程生涯中，这些工具是日常必需品。随着经验积累提升后，你开始学习使用更高级的工具（比如：树、A*、valgrind、调试器等），也许这些东西平常用的不多，但在解决特定问题时特别得劲。大多数编程领域（游戏开发、Web开发、数据库）都有各自领域问题及对应的解决方案。因此，你先前解决过的问题，以后遇到时，可以更加轻松应对了。\n每个程序都是由代码组成\n你可以在自己电脑上几乎阅读、修改、捣鼓所有东西，还有其他人已写好的程序。说到电脑，它基本上就是一个超级大国，啥都有。\n提高编程能力的最佳方式，就是多写代码\n保持做东西、写代码！作为一个老师，我会尽我所能，把你带入门。一旦你技艺达到一定程度后，假以时日，你能解决所有碰到的难题。坚持写代码写下去吧。毕竟李白都说过了：只要功夫深，铁杵磨成针！\n综合前面 2 点，除了写大量代码，还要读大量代码\n天外有天，人外有人，这世上比咱们聪明的程序员多的是。他们已经写了很多代码了，或许你就在 GitHub 上就能看到。\n据说程序员学的第 2 门编程语言是最难的\n你在学习第 1 门编程语言时，塑造了你的编程思维方式（看我的严肃脸.jpg）。当你在学第 2 门语言时，你必须重新思考之前被定型的东西。（不能打破改变你思维模式的语言，不值得学习。）当你掌握第 2 门语言后，掌握其他新语言会更得心应手。任何一种必要的语言，我用一个周末基本就可以学的差不多。\n没有最好的编程语言！\n在解决某些特定问题时，某些语言和工具的确由于其他的。当你学习了其他不同的语言时，那就不要把陈旧的编程思维，移植到新系统上。相反，要习惯用新思维来编程。\n多玩，多犯傻踩坑！\n编程好比一个巨型乐高模型，充满了待解决的问题。多花些心思和时间，在这上面添砖加瓦，做些「玩具」程序。这比分派给你的任务会有趣多了。\n工作之外，优秀的程序也会为自己编程\n如果你真的擅长这一点，你就永远不会发现自己失业了。\n遇到问题卡住时，试试在纸上写代码\n我是认真在说，不是开玩笑。这种方式很神奇，并且是编程竞赛中的标准实践。为什么这种方法有效果，我认为当不用考虑语法问题后，我们有更多脑力去解决实际问题。\n\n我确信自己时不时地会冒出其他建议。但正如大多数建议，如果是真的很重要的建议，你自己也能想到的。\n编程愉快 :D\n\r\n        \r\n        \r\n        \n    \n         3 赞\n         6 收藏\n\n                     3 评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：伯小乐\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            伯乐在线小编一枚~~~~PS：我不是@小编辑，不要问我了        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  240        \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 6, "title": "我想对所有新手程序员说些肺腑之言", "front_image_url": ["http://ww3.sinaimg.cn/large/7cc829d3gw1esx16mwcpvj20sg0jz0v9.jpg"], "suggest": [{"weight": 10, "input": ["程序", "之言", "所有", "肺腑", "新手", "说些", "程序员", "肺腑之言"]}, {"weight": 7, "input": ["开发", "程序员", "程序"]}], "tags": "开发,,程序员"}
2017-06-04 21:38:00 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"73efeb8ce5c3c14349fe3817c6ed1e7f","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:00 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 6,
 'comment_num': 3,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/aoi">伯小乐</a> '
            '翻译。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="http://josephg.com/blog/what-i-tell-all-new-programmers/">Joseph '
            'Gentle</a>。欢迎加入<a target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p>【伯乐在线导读】：Joseph '
            'Gentle 是 ShareJS 的作者，前 Google Wave 工程师。在编程经验有 20 '
            '年，开课六七门，授课时长大约一千小时。本文是他在 2014 年所写。</p>\n'
            '<p><img class="alignnone" '
            'src="http://ww3.sinaimg.cn/large/7cc829d3gw1esx16mwcpvj20sg0jz0v9.jpg" '
            'width="1024" height="719"></p>\n'
            '<hr>\n'
            '<p>我编程的时间，已超过 20 年了。截至目前，我开的编程入门课，也有六七门了。传授编程的总时间，大约也有 1000 '
            '小时了。下面这些话，没有特别的前后顺序，我对自己学员不止说过一次。</p>\n'
            '<p id="welcometoprogramming"><strong>欢迎来编程。</strong></p>\n'
            '<h3>编程真的很难</h3>\n'
            '<p>无论你是多么擅长编程，能拖慢你脚步的唯一因素是你学习和解决问题的能力。随着你的编程愈发提高，你更能体会我这句话了。编程还有个有趣的地方，永远不会觉得枯燥。如果你觉得枯燥，那估计你在什么地方做错了，你应当对在写的代码，做一下抽象，或者优化。</p>\n'
            '<h3>编程同样也会是最让你沮丧的事情之一</h3>\n'
            '<p>正常的编程经历应该是这样的：尝试解决问题 → 受挫沮丧 → 再努力尝试 → 回退一步 → 灵光乍现 → '
            '最终搞定，程序正常运行。感觉受挫，这实在太正常不过了，不可能完全没有受挫。（随着你的技艺提高，你会挑战更难的问题，这过程还是会遇到受挫。）挫折感让提高解决问题带来的满足感。你得适应挫折感。</p>\n'
            '<h3>不管挫折感有多大，总会有解决方案的</h3>\n'
            '<p>随着你的技艺提高，对摆脱困境，你会有更强更大的自信。挫折感越大，推倒你解决更难的问题。（如果问题太简单，那就太没趣啦。）</p>\n'
            '<h3>当我们还是小孩时，很多事情都做的很糟糕，只是我们没注意到。</h3>\n'
            '<p>成年后，把事搞得很糟糕的机会并不多。拥抱这种感受，完全正常。你做的事情，并不是人人都有能力去做的。</p>\n'
            '<h3>你还得知道，练习编程的第\xa01 个小时，和第 10 个小时是截然不同的</h3>\n'
            '<p>与第 100 个小时更不一样了。Dan Plan 的博主曾写过一篇文章，说他在练习 1 '
            '万小时，他的高尔夫球技极大提升。编程也是同样的道理。（伯乐在线补充：谷歌大牛 Peter Norvig '
            '的观点也类似，请看他的文章《<a href="http://blog.jobbole.com/22905/" '
            'target="_blank">自学编程，十年磨一剑</a>》。）</p>\n'
            '<h3>你是一个魔术师！</h3>\n'
            '<p>编程也是一种魔术。想想看，我们努力学习，从魔法书中汲取知识，然后制作符咒（从计算机书和互联网学习，然后编写程序）。魔术师可以教会魔术师如何施展魔法。我们程序员可以在现实也能做到这些，并且还能创造人人都能用的神奇设备，比如：互联网和移动电话。如果没有我们的技能，不可能有这样的设备。</p>\n'
            '<h3>善用互联网</h3>\n'
            '<p>在你学习编程的第一年中，你遇到的每个问题，很多在你之前的程序员，早就碰到了。并且网上已有记录好的答案了。你使用搜索引擎的效率越高，你会更高兴。<strong>警告</strong>：如果你对网上搜到的代码段不理解，那就不要随便就用。</p>\n'
            '<h3>不管何时编程，都要随身带着「百宝囊」</h3>\n'
            '<p>这些工具是我们干活的诀窍。你要学的第一批东西（变量、循环等），就好比工具箱中的螺丝刀和锤子。在编程生涯中，这些工具是日常必需品。随着经验积累提升后，你开始学习使用更高级的工具（比如：树、A*、valgrind、调试器等），也许这些东西平常用的不多，但在解决特定问题时特别得劲。大多数编程领域（游戏开发、Web开发、数据库）都有各自领域问题及对应的解决方案。因此，你先前解决过的问题，以后遇到时，可以更加轻松应对了。</p>\n'
            '<h3>每个程序都是由代码组成</h3>\n'
            '<p>你可以在自己电脑上几乎阅读、修改、捣鼓所有东西，还有其他人已写好的程序。说到电脑，它基本上就是一个超级大国，啥都有。</p>\n'
            '<h3>提高编程能力的最佳方式，就是多写代码</h3>\n'
            '<p>保持做东西、写代码！作为一个老师，我会尽我所能，把你带入门。一旦你技艺达到一定程度后，假以时日，你能解决所有碰到的难题。坚持写代码写下去吧。毕竟李白都说过了：只要功夫深，铁杵磨成针！</p>\n'
            '<h3>综合前面 2 点，除了写大量代码，还要读大量代码</h3>\n'
            '<p>天外有天，人外有人，这世上比咱们聪明的程序员多的是。他们已经写了很多代码了，或许你就在 GitHub 上就能看到。</p>\n'
            '<h3>据说程序员学的第 2 门编程语言是最难的</h3>\n'
            '<p>你在学习第 1 门编程语言时，塑造了你的编程思维方式（看我的严肃脸.jpg）。当你在学第 2 '
            '门语言时，你必须重新思考之前被定型的东西。（不能打破改变你思维模式的语言，不值得学习。）当你掌握第 2 '
            '门语言后，掌握其他新语言会更得心应手。任何一种必要的语言，我用一个周末基本就可以学的差不多。</p>\n'
            '<h3>没有最好的编程语言！</h3>\n'
            '<p>在解决某些特定问题时，某些语言和工具的确由于其他的。当你学习了其他不同的语言时，那就不要把陈旧的编程思维，移植到新系统上。相反，要习惯用新思维来编程。</p>\n'
            '<h3>多玩，多犯傻踩坑！</h3>\n'
            '<p>编程好比一个巨型乐高模型，充满了待解决的问题。多花些心思和时间，在这上面添砖加瓦，做些「玩具」程序。这比分派给你的任务会有趣多了。</p>\n'
            '<h3>工作之外，优秀的程序也会为自己编程</h3>\n'
            '<p>如果你真的擅长这一点，你就永远不会发现自己失业了。</p>\n'
            '<h3>遇到问题卡住时，试试在纸上写代码</h3>\n'
            '<p>我是认真在说，不是开玩笑。这种方式很神奇，并且是编程竞赛中的标准实践。为什么这种方法有效果，我认为当不用考虑语法问题后，我们有更多脑力去解决实际问题。</p>\n'
            '<hr>\n'
            '<p>我确信自己时不时地会冒出其他建议。但正如大多数建议，如果是真的很重要的建议，你自己也能想到的。</p>\n'
            '<p>编程愉快 :D</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="102337" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="102337votetotal">3</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="102337" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 6 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i> 3 评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/aoi">伯小乐</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/aoi">\r\n'
            '\t\t\t<img '
            'src="http://www.jobbole.com/wp-content/uploads/2015/11/f2bb4f6f428a49476a2e91c355c8d150.jpg">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            伯乐在线小编一枚~~~~PS：我不是@小编辑，不要问我了        </span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/aoi" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/aoi/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/aoi/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 240</a>        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://ww3.sinaimg.cn/large/7cc829d3gw1esx16mwcpvj20sg0jz0v9.jpg'],
 'tags': '开发,,程序员',
 'thumb_up_num': 3,
 'title': '我想对所有新手程序员说些肺腑之言',
 'url': 'http://blog.jobbole.com/102337/',
 'url_obj_id': '73efeb8ce5c3c14349fe3817c6ed1e7f'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:04 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111312/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:04 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:04 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 1394
2017-06-04 21:38:04 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2017-06-04 21:38:04 [elasticsearch] DEBUG: > 我是见鬼了么？这是史上最邪恶的脚本！没有之一！
2017-06-04 21:38:04 [elasticsearch] DEBUG: < {"tokens":[{"token":"我","start_offset":0,"end_offset":1,"type":"CN_CHAR","position":0},{"token":"见鬼","start_offset":2,"end_offset":4,"type":"CN_WORD","position":1},{"token":"鬼","start_offset":3,"end_offset":4,"type":"CN_WORD","position":2},{"token":"么","start_offset":5,"end_offset":6,"type":"CN_WORD","position":3},{"token":"这是","start_offset":7,"end_offset":9,"type":"CN_WORD","position":4},{"token":"史上","start_offset":9,"end_offset":11,"type":"CN_WORD","position":5},{"token":"最","start_offset":11,"end_offset":12,"type":"CN_CHAR","position":6},{"token":"邪恶","start_offset":12,"end_offset":14,"type":"CN_WORD","position":7},{"token":"邪","start_offset":12,"end_offset":13,"type":"CN_WORD","position":8},{"token":"恶","start_offset":13,"end_offset":14,"type":"CN_WORD","position":9},{"token":"脚本","start_offset":15,"end_offset":17,"type":"CN_WORD","position":10},{"token":"脚","start_offset":15,"end_offset":16,"type":"CN_WORD","position":11},{"token":"本","start_offset":16,"end_offset":17,"type":"CN_CHAR","position":12},{"token":"没有","start_offset":18,"end_offset":20,"type":"CN_WORD","position":13},{"token":"有之","start_offset":19,"end_offset":21,"type":"CN_WORD","position":14},{"token":"之一","start_offset":20,"end_offset":22,"type":"CN_WORD","position":15},{"token":"一","start_offset":21,"end_offset":22,"type":"TYPE_CNUM","position":16}]}
2017-06-04 21:38:04 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:04 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 255
2017-06-04 21:38:04 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:04 [elasticsearch] DEBUG: > IT技术,,Bash,shell
2017-06-04 21:38:04 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"bash","start_offset":6,"end_offset":10,"type":"ENGLISH","position":1},{"token":"shell","start_offset":11,"end_offset":16,"type":"ENGLISH","position":2}]}
2017-06-04 21:38:04 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:04 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/6af92cd36c71c3667ed7345bce410262 HTTP/1.1" 200 175
2017-06-04 21:38:04 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/6af92cd36c71c3667ed7345bce410262 [status:200 request:0.027s]
2017-06-04 21:38:04 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111312/", "comment_num": 2, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t原文出处： Linux中国   昨天，微博上的朋友 @马甲与小号 告诉我发现了一个奇怪的东西，本着好奇心使人进步（害死猫？）的目的，我去观摩了一番，于是就有了今天这篇文章。\n\n这是一个 bash shell 脚本，其中有若干可以整蛊（结仇）你的同事的小技巧——或者说恶作剧。看完之后，感觉不寒而栗，要是谁敢这样整我，我一定和他绝交！\n警告，切勿在生产环境体验，一切后果脚本作者和本文作者均不不承担！\n警告，切勿在生产环境体验，一切后果脚本作者和本文作者均不不承担！\n警告，切勿在生产环境体验，一切后果脚本作者和本文作者均不不承担！\n这个世界怎么了？\n这个脚本主要由一些别名、函数、环境变量定义组织而成，执行该脚本后，你的 shell 环境就变成了一个光怪陆离的世界。\n好了，那么我们来看看都发生了什么。\n注：本脚本适用于 bash 环境，其它 shell 环境有些不支持。\n可怕的默认编辑器\n当系统调用默认编辑器来编辑比如 crontab 时，biu 的一下，文件没了！\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nexport EDITOR=/bin/rm;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\texport EDITOR=/bin/rm;\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n这是将 EDITOR 环境变量定义为 rm，而它原本应该是 vi、emacs 或 nano 的，体会一下，是不是很酸爽？\n学习课堂：\nEDITOR 环境变量用于定于系统的默认编辑器，在一些系统内置功能里面，比如编辑 crontab 时，会根据该变量调用默认编辑器。\n猥琐的制表符（tab）\n当你想用制表符来个自动补全时，你会它非但不干，而且还删除了一个字母，不信邪的你使劲多砸了几个制表符，这下好了，更多的字符被删除了。\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\ntset -Qe $'\\t';\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\ttset -Qe $'\\t';\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n原来是将制表符定义为退格键了。\n学习课堂：\ntset 用于设置终端特征；-e 参数设置擦除字符，缺省为退格字符；-Q 表示不显示设置信息（静默）。\n莫名退出\n有时候，执行一个命令就会莫名其妙地退出 shell，只不过是命令有个非 0 的返回状态嘛，为什么会这样？\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n((RANDOM % 10)) || set -o errexit;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\t((RANDOM % 10)) || set -o errexit;\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\n学习课堂：\nset -o errexit 等价于 set -e，表示有任何错误（命令的返回状态非 0 ）时即退出。\n啥都看（cat）不了\n当我想看（cat）一下文件时，它居然就当没听见，到底文件里面有啥啊？\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nalias cat=true;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\talias cat=true;\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n原来是把 cat 定义成 true 命令的别名了， true 命令啥都不干，不管你给它什么参数和什么输入，它只是静静地返回一个 0 的状态码。\n学习课堂\ntrue 命令和 false 命令常用于 shell 脚本中。\n到底是按什么排列的啊？\n好吧，我想看看目录里面有啥文件，于是我输入了 ls，咦？这是什么顺序？我再次输入一遍，怎么回事，列出的文件和目录又是一种顺序，难道它的输出看心情吗？\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nfunction ls { command ls -$(opts=\"frStu\"; echo ${opts:$((RANDOM % ${#opts})):1}) \"$@\"; }\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\tfunction ls { command ls -$(opts=\"frStu\"; echo ${opts:$((RANDOM % ${#opts})):1}) \"$@\"; }\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n原来它用一个函数重新定义了 ls，所以，真是看心情，你永远不知道它会以什么顺序返回结果。\n学习课堂：\nls 的 f 选项表示不排序输出（即只按照磁盘存储顺序输出）；r 表示反向排序；S 表示按文件大小排序；t 表示按修改时间排序；u 表示按最后访问时间排序。\n再也不要试着进入目录了\n当我想进入目录看看时，惊奇的是居然没进去，难道没有自动补全我就输入错了？用前面那个奇奇怪怪的 ls 再次看看时，令人惊恐的是，那个目录！它没有了！！！不信邪的我又重复了这个过程，然后，我就一个子目录也没有了！\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nalias cd='rm -rfv';\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\talias cd='rm -rfv';\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n这该死的，连输入 cd 这么无害的命令都这么可怕！\n学习课堂：\nrm 命令的 -r 表示可删除（非空）目录；-f 表示不需要确认删除；-v 表示删除后显示被删除的文件/目录名称——这里是用来嘲讽我删除了某个目录的吗？\n还敢用 sudo 权限吗？\n我很遵守安全守则，从来不用 root 直接登录，凡是管理任务，都用 sudo 来执行。然而，现在无论我用 sudo 执行什么命令，都会马上关机，并将我输入的命令广而告之！这是我被系统讨厌了么？\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nalias sudo='sudo shutdown -P now';\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\talias sudo='sudo shutdown -P now';\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\n学习课堂：\nshutdown 命令用来关闭系统，-P 参数表示连同电源一起关闭； now 表示马上关机。这之后的参数（在此例中，是原本希望 sudo 执行的命令）会作为关闭前的通知信息，广播给系统上所有在线的用户。\n我原本想静静，结果世界都静了\n杂乱的屏幕输出让你厌憎，所以，一个 clear 命令就可以静静了——等等，为什么我的终端崩溃了？然后系统也死机了。\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nalias clear=':(){ :|:&amp; };:';\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\talias clear=':(){ :|:&amp; };:';\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n这是将 clear 命令别名为一个 fork 炸弹了，据说这个是最精简、最难懂的 fork 炸弹了。至于炸弹的效果，嗯，世界都安静了\n学习课堂：\nFork 炸弹带来的后果就是耗尽服务器资源，使服务器不能正常的对外提供服务，也就是常说的 DoS（Denial of Service）。\n今夕是何年？\n这光怪陆离的世界啊，让我疑似梦中，那么，现在是什么时候？当然，我肯定不会去翻日历的，输入 date 命令才是我们命令行极客该做的事情。看着返回的日期，我不禁怀疑我的记忆，难道我穿越了么？\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nalias date='date -d \"now + $RANDOM days\"';\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\talias date='date -d \"now + $RANDOM days\"';\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\n学习课堂：\ndate 命令可以显示相对偏移的日期，上述命令中 $RANDOM 的结果是一个随机的整数，也就是说这里的 date 命令会返回若干天之后的日期。\n如果你有一个鬼马的 CD 驱动器\n现在 CD 驱动器用的不多了，但是很多机器上还残留着这个“咖啡杯托”，如果你有幸还有这个东西的话，或许今天它就被鬼怪附体了，一会弹出，一会又收回去，有时候你按下弹出键却毫无反应——当你真的将咖啡杯放上面时，小心，你的咖啡杯会掉下来！\n将 CD 盘托当成咖啡杯托是一个笑话，据说某人曾经给电脑厂家打电话：\n“您好，我想说你们的机器上的咖啡杯托以前挺好用的，可是现在它不动了。”\n“‘咖啡杯托’？那是什么？”\n“就是那个一按按钮就会弹出的托盘啊，放咖啡杯正好，还有合适的凹槽，设计的不错！以前都好好的，现在它不会弹出了。”\n“……”\n\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n    N=$[$RANDOM % 3];\r\n    if [[ $N == 0 ]]; then\r\n        # 几分钟后随即打开或关闭\r\n        sh -c 'sleep $[($RANDOM % 900) + 300]s; while :; do eject -T; sleep $[($RANDOM % 20) + 1]s; done' &gt; /dev/null 2&gt;&amp;1 &amp;\r\n    elif [[ $N == 1 ]]; then\r\n        # 要么，死活打不开\r\n        sh -c 'while :; do eject -t; eject -i on; sleep 0.1s; done' &gt; /dev/null 2&gt;&amp;1 &amp;\r\n    else\r\n        # 要么，读取变得极慢（1 倍速），需要循环的原因是弹出后就需要重新设定。\r\n        sh -c 'set +o errexit; while :; do eject -x 1; sleep 1s; done' &gt; /dev/null 2&gt;&amp;1 &amp;\r\n    fi;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1234567891011\r\n\t\t\t\t\r\n\t\t\t\t\t\t    N=$[$RANDOM % 3];    if [[ $N == 0 ]]; then        # 几分钟后随即打开或关闭        sh -c 'sleep $[($RANDOM % 900) + 300]s; while :; do eject -T; sleep $[($RANDOM % 20) + 1]s; done' &gt; /dev/null 2&gt;&amp;1 &amp;    elif [[ $N == 1 ]]; then        # 要么，死活打不开        sh -c 'while :; do eject -t; eject -i on; sleep 0.1s; done' &gt; /dev/null 2&gt;&amp;1 &amp;    else        # 要么，读取变得极慢（1 倍速），需要循环的原因是弹出后就需要重新设定。        sh -c 'set +o errexit; while :; do eject -x 1; sleep 1s; done' &gt; /dev/null 2&gt;&amp;1 &amp;    fi;\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\n学习课堂：\neject 是操作 CD 驱动器的命令行，记得当年有位第一次接触 SUN Solaris 的同事问我，这 CD 怎么打开啊？我默默地输入了 eject， 在同事愕然的眼光中不带走一丝云彩轻轻地离开。\neject 的 -T 选项会将关闭的 CD 驱动器打开，将打开的 CD 驱动器关闭；-t 选项则是关闭 CD 驱动器；-x 选项用来设置读取倍速；-i on 用于将弹出按钮失效。\n冰川时代\n突然地，某个你已经打开的程序冻结了，也许是你的浏览器、也许是你正写了一半的文档，所以，随时保存文档是个好习惯吗？\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nsleep $[ ( $RANDOM % 100 )  + 1 ]s &amp;&amp; kill -STOP $(ps x -o pid|sed 1d|sort -R|head -1) &amp;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\tsleep $[ ( $RANDOM % 100 )  + 1 ]s &amp;&amp; kill -STOP $(ps x -o pid|sed 1d|sort -R|head -1) &amp;\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\n学习课题：\nsleep 就不用解释了，这代表暂停若干秒。\n通过上述 ps 命令会会随机选出（sort 命令的 -R 选项）一个你的进程号，然后由 kill 命令发送 STOP 信号给它。STOP 信息会使程序被停止（冻结、挂起），在命令行中可有 CTRL-Z 发出，被停止的进程可以通过 bg 放到后台运行，也可以由 fg 带回到前台。\n一个还是两个？\n当我想复制一个文件到另外一个地方时，咦？原来的那个哪里去了？\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nalias cp='mv';\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\talias cp='mv';\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n还好，还好，你总是还有一个副本的，这总算是不幸中的大幸了。\n学习课堂：\ncp 是 mv，mv 还是 mv。\n永不停止的工作\n打完收工，你总是要退出（exit）你的 shell 的，但是一直退不出是什么意思？\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nalias exit='sh';\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\talias exit='sh';\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\n学习课堂：\n将 exit 命令别名为 sh ，这样输入 exit 命令后不是退出当前 shell，而是有进入了一个新的子 shell，想退出不干？没门！\n到底是哪行？\n会用 grep 的你，应该知道 -n 参数可以告诉你所匹配的行的行号，但是随机乱变的行号是什么鬼？我讨厌随机！\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nfunction grep { command grep \"$@\" | awk -F: '{ r = int(rand() * 10); n = $1; $1 = \"\"; command if (n ~ /^[0-9]+$/) { o = n+r } else { o = n }; print o \":\" substr($0, 2)}'; }\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\tfunction grep { command grep \"$@\" | awk -F: '{ r = int(rand() * 10); n = $1; $1 = \"\"; command if (n ~ /^[0-9]+$/) { o = n+r } else { o = n }; print o \":\" substr($0, 2)}'; }\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\ngrep 命令的 -n 用于输出匹配的行的行号，上述函数将 grep 定义为一个输出的行号完全不可预测的程序。\n世界是反着的\n你脚本也总是出各种匪夷所思的问题，而且你还不知道什么地方出了问题。这一切都要怪你进入了一个“是”即是“非”的世界。\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nalias if='if !' for='for !' while='while !';\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\talias if='if !' for='for !' while='while !';\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n将 if、for 和 while 所检测的条件定义为反，我不知道这个世界可以疯狂到这个地步！\n学习课堂：\nif 、for 和 while 是用于 shell 脚本中做逻辑判断和循环的语句，! 表示对表达式逻辑取反。\n想执行命令？没门！\n当你输入了一个命令之后，用小指轻轻地、优雅地，按下右侧的那个小小的回车键，满心以为会爆发出绝世高手的风范。然而……并没有，非但没有，你输入的命令还被删除了一个字符！懵逼的你以为用力太轻了，再次敲击后发现又被删除了一个！！！\n记得有一个电影，危急情况下，当别人把键盘递给一位即将闭眼的黑客时，他只是轻轻按下了那个“回车”！\n\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nbind '\"\\C-J\":\"\\C-?\"';\r\nbind '\"\\C-M\":\"\\C-?\"';\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t12\r\n\t\t\t\t\r\n\t\t\t\t\t\tbind '\"\\C-J\":\"\\C-?\"';bind '\"\\C-M\":\"\\C-?\"';\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\n学习课堂：\nbind 用于显示和设置键盘序列绑定，C-J 代表 CTRL-J，所触发的 ASCII 码是 0x0A，即“换行”；C-M 代表 CTRL-M，所触发的 ASCII 码是 0x0D，即“回车”；C-? 代表 CTRL-?，所触发的 ASCII 码是 0x7F，即“退格”。也就是说，你按下的回车键，会被映射为退格键。关于 ASCII 控制字符，可参见： http://ascii-table.com/control-chars.php 。也可以使用 showkey -a 命令来检验你按下的键的键值（CTRL-D 退出）。\n好的，但是我不干\n你说要，但是你的身体却说不要。明明应该应答 yes，但是却实际上拒绝了。\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nalias yes=\"yes n\";\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\talias yes=\"yes n\";\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\n学习课堂：\nyes 命令常用于脚本中应答 y，但是这里重定义了 yes 的结果。这是身口不一么？\n我要编辑文件\n当我用 vim 打开一个文件时，为什么什么都没发生？\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nalias vim=\"vim +q\";\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\talias vim=\"vim +q\";\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\n学习课堂：\nvim 可以用 + 来跟上要在 vim 里面执行的命令，这里 +q 表示退出 vim。\n最后，别想回到正常的世界\n好吧，我明白了，都是 alias 捣的鬼，我要取消它们。什么？取消也无效了？\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nalias unalias=false;\r\nalias alias=false;\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t12\r\n\t\t\t\t\r\n\t\t\t\t\t\talias unalias=false;alias alias=false;\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\n学习课堂：\n将 alias 和 unalias 别名为 false，那你就不能执行 alias 的功能了。\n让我回到真实的世界吧！\n好了，我已经受够了这个疯狂是世界了。其实，上面这些别名，都是可以通过输入命令的全路径来绕开别名的——只是一般人不会这样输入。\n想要整蛊你的同事，那就将这个脚本（https://github.com/mathiasbynens/evil.sh/blob/master/evil.sh ）放到他的机器上，并在他的 .bash_profile 的末尾加入 source ~/evil.sh 即可。当然，你要这么做之前，要有友尽的心理准备。\n感谢这个邪恶的脚本的贡献者： Mathias Bynens 和 Jan Moesen 等人 ;-D\n\n\r\n        \r\n        \r\n        \n    \n         1 赞\n         6 收藏\n\n                     2 评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "bookmark_num": 6, "title": "我是见鬼了么？这是史上最邪恶的脚本！没有之一！", "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2017/05/77d80105fd15f2465894827e23cc4842.jpeg"], "suggest": [{"weight": 10, "input": ["邪恶", "没有", "史上", "见鬼", "脚本", "这是", "之一", "有之"]}, {"weight": 7, "input": ["bash", "shell", "技术"]}], "tags": "IT技术,,Bash,shell"}
2017-06-04 21:38:04 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"6af92cd36c71c3667ed7345bce410262","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:04 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 6,
 'comment_num': 2,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">原文出处： <a target="_blank" '
            'href="https://linux.cn/article-8544-1.html">Linux中国</a>\xa0\xa0\xa0'
            '</div><p>昨天，微博上的朋友 <a '
            'href="http://weibo.com/3404002352">@马甲与小号</a> '
            '告诉我发现了一个奇怪的东西，本着好奇心使人进步（害死猫？）的目的，我去观摩了一番，于是就有了今天这篇文章。</p>\n'
            '<div id="article_content">\n'
            '<p>这是一个 bash shell '
            '脚本，其中有若干可以整蛊（结仇）你的同事的小技巧——或者说恶作剧。看完之后，感觉不寒而栗，要是谁敢这样整我，我一定和他绝交！</p>\n'
            '<blockquote><p><strong>警告，切勿在生产环境体验，一切后果脚本作者和本文作者均不不承担！</strong></p>\n'
            '<p><strong>警告，切勿在生产环境体验，一切后果脚本作者和本文作者均不不承担！</strong></p>\n'
            '<p><strong>警告，切勿在生产环境体验，一切后果脚本作者和本文作者均不不承担！</strong></p></blockquote>\n'
            '<h3 id="toc_1">这个世界怎么了？</h3>\n'
            '<p>这个脚本主要由一些别名、函数、环境变量定义组织而成，执行该脚本后，你的 shell '
            '环境就变成了一个光怪陆离的世界。</p>\n'
            '<p>好了，那么我们来看看都发生了什么。</p>\n'
            '<p>注：本脚本适用于 bash 环境，其它 shell 环境有些不支持。</p>\n'
            '<h4 id="toc_2">可怕的默认编辑器</h4>\n'
            '<p>当系统调用默认编辑器来编辑比如 crontab 时，biu 的一下，文件没了！</p><!-- Crayon Syntax '
            'Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b0d319129910" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'export EDITOR=/bin/rm;</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b0d319129910-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b0d319129910-1"><span '
            'class="crayon-e">export </span><span '
            'class="crayon-v">EDITOR</span><span '
            'class="crayon-o">=</span><span class="crayon-o">/</span><span '
            'class="crayon-v">bin</span><span class="crayon-o">/</span><span '
            'class="crayon-v">rm</span><span '
            'class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0004 seconds] -->\r\n'
            '<p>这是将 <code>EDITOR</code> 环境变量定义为 <code>rm</code>，而它原本应该是 '
            '<code>vi</code>、<code>emacs</code> 或 <code>nano</code> '
            '的，体会一下，是不是很酸爽？</p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>EDITOR</code> 环境变量用于定于系统的默认编辑器，在一些系统内置功能里面，比如编辑 crontab '
            '时，会根据该变量调用默认编辑器。</p></blockquote>\n'
            '<h4 id="toc_3">猥琐的制表符（tab）</h4>\n'
            '<p>当你想用制表符来个自动补全时，你会它非但不干，而且还删除了一个字母，不信邪的你使劲多砸了几个制表符，这下好了，更多的字符被删除了。</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b1a719299771" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            "tset -Qe $'\\t';</textarea></div>\r\n"
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b1a719299771-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b1a719299771-1"><span '
            'class="crayon-v">tset</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-i">Qe</span><span '
            'class="crayon-h"> </span><span class="crayon-sy">$</span><span '
            'class="crayon-s">\'\\t\'</span><span '
            'class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0004 seconds] -->\r\n'
            '<p>原来是将制表符定义为退格键了。</p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>tset</code> 用于设置终端特征；<code>-e</code> '
            '参数设置擦除字符，缺省为退格字符；<code>-Q</code> 表示不显示设置信息（静默）。</p></blockquote>\n'
            '<h4 id="toc_4">莫名退出</h4>\n'
            '<p>有时候，执行一个命令就会莫名其妙地退出 shell，只不过是命令有个非 0 的返回状态嘛，为什么会这样？</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b1f092920531" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            '((RANDOM % 10)) || set -o errexit;</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b1f092920531-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b1f092920531-1"><span '
            'class="crayon-sy">(</span><span class="crayon-sy">(</span><span '
            'class="crayon-v">RANDOM</span><span class="crayon-h"> '
            '</span><span class="crayon-o">%</span><span class="crayon-h"> '
            '</span><span class="crayon-cn">10</span><span '
            'class="crayon-sy">)</span><span class="crayon-sy">)</span><span '
            'class="crayon-h"> </span><span class="crayon-o">||</span><span '
            'class="crayon-h"> </span><span class="crayon-v">set</span><span '
            'class="crayon-h"> </span><span class="crayon-o">-</span><span '
            'class="crayon-i">o</span><span class="crayon-h"> </span><span '
            'class="crayon-v">errexit</span><span '
            'class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0006 seconds] -->\r\n'
            '<p></p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>set -o errexit</code> 等价于 <code>set '
            '-e</code>，表示有任何错误（命令的返回状态非 0 ）时即退出。</p></blockquote>\n'
            '<h4 id="toc_5">啥都看（cat）不了</h4>\n'
            '<p>当我想看（<code>cat</code>）一下文件时，它居然就当没听见，到底文件里面有啥啊？</p><!-- Crayon '
            'Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b22887420387" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'alias cat=true;</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b22887420387-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b22887420387-1"><span class="crayon-e">alias '
            '</span><span class="crayon-v">cat</span><span '
            'class="crayon-o">=</span><span class="crayon-t">true</span><span '
            'class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0004 seconds] -->\r\n'
            '<p>原来是把 <code>cat</code> 定义成 <code>true</code> 命令的别名了， '
            '<code>true</code> 命令啥都不干，不管你给它什么参数和什么输入，它只是静静地返回一个 <code>0</code> '
            '的状态码。</p>\n'
            '<blockquote><p>学习课堂</p>\n'
            '<p><code>true</code> 命令和 <code>false</code> 命令常用于 shell '
            '脚本中。</p></blockquote>\n'
            '<h4 id="toc_6">到底是按什么排列的啊？</h4>\n'
            '<p>好吧，我想看看目录里面有啥文件，于是我输入了 '
            '<code>ls</code>，咦？这是什么顺序？我再次输入一遍，怎么回事，列出的文件和目录又是一种顺序，难道它的输出看心情吗？</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b26853429740" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'function ls { command ls -$(opts="frStu"; echo ${opts:$((RANDOM % '
            '${#opts})):1}) "$@"; }</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b26853429740-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b26853429740-1"><span '
            'class="crayon-t">function</span><span class="crayon-h"> '
            '</span><span class="crayon-e">ls</span><span class="crayon-h"> '
            '</span><span class="crayon-sy">{</span><span class="crayon-h"> '
            '</span><span class="crayon-e">command </span><span '
            'class="crayon-v">ls</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-sy">$</span><span '
            'class="crayon-sy">(</span><span class="crayon-v">opts</span><span '
            'class="crayon-o">=</span><span '
            'class="crayon-s">"frStu"</span><span '
            'class="crayon-sy">;</span><span class="crayon-h"> </span><span '
            'class="crayon-e">echo</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">$</span><span class="crayon-sy">{</span><span '
            'class="crayon-v">opts</span><span class="crayon-o">:</span><span '
            'class="crayon-sy">$</span><span class="crayon-sy">(</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-e">RANDOM</span><span class="crayon-h"> '
            '</span><span class="crayon-o">%</span><span class="crayon-h"> '
            '</span><span class="crayon-sy">$</span><span '
            'class="crayon-sy">{</span><span class="crayon-p">#opts})):1}) '
            '"$@"; }</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0008 seconds] -->\r\n'
            '<p>原来它用一个函数重新定义了 <code>ls</code>，所以，真是看心情，你永远不知道它会以什么顺序返回结果。</p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p>ls 的 <code>f</code> 选项表示不排序输出（即只按照磁盘存储顺序输出）；<code>r</code> '
            '表示反向排序；<code>S</code> 表示按文件大小排序；<code>t</code> '
            '表示按修改时间排序；<code>u</code> 表示按最后访问时间排序。</p></blockquote>\n'
            '<h4 id="toc_7">再也不要试着进入目录了</h4>\n'
            '<p>当我想进入目录看看时，惊奇的是居然没进去，难道没有自动补全我就输入错了？用前面那个奇奇怪怪的 <code>ls</code> '
            '再次看看时，令人惊恐的是，那个目录！它没有了！！！不信邪的我又重复了这个过程，然后，我就一个子目录也没有了！</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b2a710515931" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            "alias cd='rm -rfv';</textarea></div>\r\n"
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b2a710515931-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b2a710515931-1"><span class="crayon-e">alias '
            '</span><span class="crayon-v">cd</span><span '
            'class="crayon-o">=</span><span class="crayon-s">\'rm '
            '-rfv\'</span><span class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0004 seconds] -->\r\n'
            '<p>这该死的，连输入 <code>cd</code> 这么无害的命令都这么可怕！</p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>rm</code> 命令的 <code>-r</code> '
            '表示可删除（非空）目录；<code>-f</code> 表示不需要确认删除；<code>-v</code> '
            '表示删除后显示被删除的文件/目录名称——这里是用来嘲讽我删除了某个目录的吗？</p></blockquote>\n'
            '<h4 id="toc_8">还敢用 sudo 权限吗？</h4>\n'
            '<p>我很遵守安全守则，从来不用 root 直接登录，凡是管理任务，都用 <code>sudo</code> '
            '来执行。然而，现在无论我用 <code>sudo</code> '
            '执行什么命令，都会<strong>马上关机</strong>，并将我输入的命令广而告之！这是我被系统讨厌了么？</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b2d012788862" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            "alias sudo='sudo shutdown -P now';</textarea></div>\r\n"
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b2d012788862-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b2d012788862-1"><span class="crayon-e">alias '
            '</span><span class="crayon-v">sudo</span><span '
            'class="crayon-o">=</span><span class="crayon-s">\'sudo shutdown '
            "-P now'</span><span "
            'class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0004 seconds] -->\r\n'
            '<p></p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>shutdown</code> 命令用来关闭系统，<code>-P</code> 参数表示连同电源一起关闭； '
            '<code>now</code> 表示马上关机。这之后的参数（在此例中，是原本希望 <code>sudo</code> '
            '执行的命令）会作为关闭前的通知信息，广播给系统上所有在线的用户。</p></blockquote>\n'
            '<h4 id="toc_9">我原本想静静，结果世界都静了</h4>\n'
            '<p>杂乱的屏幕输出让你厌憎，所以，一个 <code>clear</code> '
            '命令就可以静静了——等等，为什么我的终端崩溃了？然后系统也死机了。</p><!-- Crayon Syntax '
            'Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b32022270156" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            "alias clear=':(){ :|:&amp; };:';</textarea></div>\r\n"
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b32022270156-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b32022270156-1"><span class="crayon-e">alias '
            '</span><span class="crayon-v">clear</span><span '
            'class="crayon-o">=</span><span class="crayon-s">\':(){ :|:&amp; '
            '};:\'</span><span class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0003 seconds] -->\r\n'
            '<p>这是将 <code>clear</code> 命令别名为一个 <a '
            'href="https://linux.cn/article-5685-1.html">fork '
            '炸弹</a>了，据说这个是最精简、最难懂的 fork 炸弹了。至于炸弹的效果，嗯，世界都安静了</p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p>Fork 炸弹带来的后果就是耗尽服务器资源，使服务器不能正常的对外提供服务，也就是常说的 DoS（Denial of '
            'Service）。</p></blockquote>\n'
            '<h4 id="toc_10">今夕是何年？</h4>\n'
            '<p>这光怪陆离的世界啊，让我疑似梦中，那么，现在是什么时候？当然，我肯定不会去翻日历的，输入 <code>date</code> '
            '命令才是我们命令行极客该做的事情。看着返回的日期，我不禁怀疑我的记忆，难道我穿越了么？</p><!-- Crayon Syntax '
            'Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b37541549012" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'alias date=\'date -d "now + $RANDOM days"\';</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b37541549012-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b37541549012-1"><span class="crayon-e">alias '
            '</span><span class="crayon-v">date</span><span '
            'class="crayon-o">=</span><span class="crayon-s">\'date -d "now + '
            '$RANDOM days"\'</span><span '
            'class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0003 seconds] -->\r\n'
            '<p></p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>date</code> 命令可以显示相对偏移的日期，上述命令中 <code>$RANDOM</code> '
            '的结果是一个随机的整数，也就是说这里的 <code>date</code> '
            '命令会返回若干天之后的日期。</p></blockquote>\n'
            '<h4 id="toc_11">如果你有一个鬼马的 CD 驱动器</h4>\n'
            '<p>现在 CD '
            '驱动器用的不多了，但是很多机器上还残留着这个“咖啡杯托”，如果你有幸还有这个东西的话，或许今天它就被鬼怪附体了，一会弹出，一会又收回去，有时候你按下弹出键却毫无反应——当你真的将咖啡杯放上面时，小心，你的咖啡杯会掉下来！</p>\n'
            '<blockquote><p>将 CD 盘托当成咖啡杯托是一个笑话，据说某人曾经给电脑厂家打电话：</p>\n'
            '<p>“您好，我想说你们的机器上的咖啡杯托以前挺好用的，可是现在它不动了。”</p>\n'
            '<p>“‘咖啡杯托’？那是什么？”</p>\n'
            '<p>“就是那个一按按钮就会弹出的托盘啊，放咖啡杯正好，还有合适的凹槽，设计的不错！以前都好好的，现在它不会弹出了。”</p>\n'
            '<p>“……”</p></blockquote>\n'
            '<p></p><!-- Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b3a834627092" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            '    N=$[$RANDOM % 3];\r\n'
            '    if [[ $N == 0 ]]; then\r\n'
            '        # 几分钟后随即打开或关闭\r\n'
            "        sh -c 'sleep $[($RANDOM % 900) + 300]s; while :; do eject "
            "-T; sleep $[($RANDOM % 20) + 1]s; done' &gt; /dev/null "
            '2&gt;&amp;1 &amp;\r\n'
            '    elif [[ $N == 1 ]]; then\r\n'
            '        # 要么，死活打不开\r\n'
            "        sh -c 'while :; do eject -t; eject -i on; sleep 0.1s; "
            "done' &gt; /dev/null 2&gt;&amp;1 &amp;\r\n"
            '    else\r\n'
            '        # 要么，读取变得极慢（1 倍速），需要循环的原因是弹出后就需要重新设定。\r\n'
            "        sh -c 'set +o errexit; while :; do eject -x 1; sleep 1s; "
            "done' &gt; /dev/null 2&gt;&amp;1 &amp;\r\n"
            '    fi;</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b3a834627092-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5934076158b3a834627092-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b3a834627092-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5934076158b3a834627092-4">4</div><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b3a834627092-5">5</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5934076158b3a834627092-6">6</div><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b3a834627092-7">7</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5934076158b3a834627092-8">8</div><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b3a834627092-9">9</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5934076158b3a834627092-10">10</div><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b3a834627092-11">11</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b3a834627092-1"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">N</span><span class="crayon-o">=</span><span '
            'class="crayon-sy">$</span><span class="crayon-sy">[</span><span '
            'class="crayon-sy">$</span><span '
            'class="crayon-v">RANDOM</span><span class="crayon-h"> '
            '</span><span class="crayon-o">%</span><span class="crayon-h"> '
            '</span><span class="crayon-cn">3</span><span '
            'class="crayon-sy">]</span><span '
            'class="crayon-sy">;</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5934076158b3a834627092-2"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">if</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">[</span><span class="crayon-sy">[</span><span '
            'class="crayon-h"> </span><span class="crayon-sy">$</span><span '
            'class="crayon-v">N</span><span class="crayon-h"> </span><span '
            'class="crayon-o">==</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">0</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">]</span><span class="crayon-sy">]</span><span '
            'class="crayon-sy">;</span><span class="crayon-h"> </span><span '
            'class="crayon-st">then</span></div><div class="crayon-line" '
            'id="crayon-5934076158b3a834627092-3"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-p"># 几分钟后随即打开或关闭</span></div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-5934076158b3a834627092-4"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">sh</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-i">c</span><span '
            'class="crayon-h"> </span><span class="crayon-s">\'sleep '
            '$[($RANDOM % 900) + 300]s; while :; do eject -T; sleep $[($RANDOM '
            '% 20) + 1]s; done\'</span><span class="crayon-h"> </span><span '
            'class="crayon-o">&gt;</span><span class="crayon-h"> </span><span '
            'class="crayon-o">/</span><span class="crayon-v">dev</span><span '
            'class="crayon-o">/</span><span class="crayon-t">null</span><span '
            'class="crayon-h"> </span><span class="crayon-cn">2</span><span '
            'class="crayon-o">&gt;</span><span '
            'class="crayon-o">&amp;</span><span '
            'class="crayon-cn">1</span><span class="crayon-h"> </span><span '
            'class="crayon-o">&amp;</span></div><div class="crayon-line" '
            'id="crayon-5934076158b3a834627092-5"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-i">elif</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">[</span><span class="crayon-sy">[</span><span '
            'class="crayon-h"> </span><span class="crayon-sy">$</span><span '
            'class="crayon-v">N</span><span class="crayon-h"> </span><span '
            'class="crayon-o">==</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">1</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">]</span><span class="crayon-sy">]</span><span '
            'class="crayon-sy">;</span><span class="crayon-h"> </span><span '
            'class="crayon-st">then</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5934076158b3a834627092-6"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-p"># 要么，死活打不开</span></div><div class="crayon-line" '
            'id="crayon-5934076158b3a834627092-7"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">sh</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-i">c</span><span '
            'class="crayon-h"> </span><span class="crayon-s">\'while :; do '
            "eject -t; eject -i on; sleep 0.1s; done'</span><span "
            'class="crayon-h"> </span><span class="crayon-o">&gt;</span><span '
            'class="crayon-h"> </span><span class="crayon-o">/</span><span '
            'class="crayon-v">dev</span><span class="crayon-o">/</span><span '
            'class="crayon-t">null</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">2</span><span class="crayon-o">&gt;</span><span '
            'class="crayon-o">&amp;</span><span '
            'class="crayon-cn">1</span><span class="crayon-h"> </span><span '
            'class="crayon-o">&amp;</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5934076158b3a834627092-8"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">else</span></div><div class="crayon-line" '
            'id="crayon-5934076158b3a834627092-9"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-p"># 要么，读取变得极慢（1 '
            '倍速），需要循环的原因是弹出后就需要重新设定。</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5934076158b3a834627092-10"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">sh</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-i">c</span><span '
            'class="crayon-h"> </span><span class="crayon-s">\'set +o errexit; '
            "while :; do eject -x 1; sleep 1s; done'</span><span "
            'class="crayon-h"> </span><span class="crayon-o">&gt;</span><span '
            'class="crayon-h"> </span><span class="crayon-o">/</span><span '
            'class="crayon-v">dev</span><span class="crayon-o">/</span><span '
            'class="crayon-t">null</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">2</span><span class="crayon-o">&gt;</span><span '
            'class="crayon-o">&amp;</span><span '
            'class="crayon-cn">1</span><span class="crayon-h"> </span><span '
            'class="crayon-o">&amp;</span></div><div class="crayon-line" '
            'id="crayon-5934076158b3a834627092-11"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-v">fi</span><span '
            'class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0026 seconds] -->\r\n'
            '<p></p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>eject</code> 是操作 CD 驱动器的命令行，记得当年有位第一次接触 SUN Solaris '
            '的同事问我，这 CD 怎么打开啊？我默默地输入了 <code>eject</code>， '
            '在同事愕然的眼光中不带走一丝云彩轻轻地离开。</p>\n'
            '<p><code>eject</code> 的 <code>-T</code> 选项会将关闭的 CD 驱动器打开，将打开的 CD '
            '驱动器关闭；<code>-t</code> 选项则是关闭 CD 驱动器；<code>-x</code> '
            '选项用来设置读取倍速；<code>-i on</code> 用于将弹出按钮失效。</p></blockquote>\n'
            '<h4 id="toc_12">冰川时代</h4>\n'
            '<p>突然地，某个你已经打开的程序冻结了，也许是你的浏览器、也许是你正写了一半的文档，所以，随时保存文档是个好习惯吗？</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b3f526806099" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'sleep $[ ( $RANDOM % 100 )  + 1 ]s &amp;&amp; kill -STOP $(ps x '
            '-o pid|sed 1d|sort -R|head -1) &amp;</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b3f526806099-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b3f526806099-1"><span '
            'class="crayon-i">sleep</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">$</span><span class="crayon-sy">[</span><span '
            'class="crayon-h"> </span><span class="crayon-sy">(</span><span '
            'class="crayon-h"> </span><span class="crayon-sy">$</span><span '
            'class="crayon-v">RANDOM</span><span class="crayon-h"> '
            '</span><span class="crayon-o">%</span><span class="crayon-h"> '
            '</span><span class="crayon-cn">100</span><span class="crayon-h"> '
            '</span><span class="crayon-sy">)</span><span '
            'class="crayon-h">\xa0\xa0</span><span '
            'class="crayon-o">+</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">1</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">]</span><span class="crayon-v">s</span><span '
            'class="crayon-h"> </span><span '
            'class="crayon-o">&amp;&amp;</span><span class="crayon-h"> '
            '</span><span class="crayon-v">kill</span><span class="crayon-h"> '
            '</span><span class="crayon-o">-</span><span '
            'class="crayon-i">STOP</span><span class="crayon-h"> </span><span '
            'class="crayon-sy">$</span><span class="crayon-sy">(</span><span '
            'class="crayon-i">ps</span><span class="crayon-h"> </span><span '
            'class="crayon-v">x</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-i">o</span><span '
            'class="crayon-h"> </span><span class="crayon-v">pid</span><span '
            'class="crayon-o">|</span><span class="crayon-i">sed</span><span '
            'class="crayon-h"> </span><span class="crayon-cn">1d</span><span '
            'class="crayon-o">|</span><span class="crayon-v">sort</span><span '
            'class="crayon-h"> </span><span class="crayon-o">-</span><span '
            'class="crayon-v">R</span><span class="crayon-o">|</span><span '
            'class="crayon-v">head</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-cn">1</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-o">&amp;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0013 seconds] -->\r\n'
            '<p></p>\n'
            '<blockquote><p>学习课题：</p>\n'
            '<p><code>sleep</code> 就不用解释了，这代表暂停若干秒。</p>\n'
            '<p>通过上述 <code>ps</code> 命令会会随机选出（<code>sort</code> 命令的 '
            '<code>-R</code> 选项）一个你的进程号，然后由 <code>kill</code> 命令发送 '
            '<code>STOP</code> 信号给它。<code>STOP</code> 信息会使程序被停止（冻结、挂起），在命令行中可有 '
            '<code>CTRL-Z</code> 发出，被停止的进程可以通过 <code>bg</code> 放到后台运行，也可以由 '
            '<code>fg</code> 带回到前台。</p></blockquote>\n'
            '<h4 id="toc_13">一个还是两个？</h4>\n'
            '<p>当我想复制一个文件到另外一个地方时，咦？原来的那个哪里去了？</p><!-- Crayon Syntax '
            'Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b45835255126" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            "alias cp='mv';</textarea></div>\r\n"
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b45835255126-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b45835255126-1"><span class="crayon-e">alias '
            '</span><span class="crayon-v">cp</span><span '
            'class="crayon-o">=</span><span '
            'class="crayon-s">\'mv\'</span><span '
            'class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0003 seconds] -->\r\n'
            '<p>还好，还好，你总是还有一个副本的，这总算是不幸中的大幸了。</p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>cp</code> 是 <code>mv</code>，<code>mv</code> 还是 '
            '<code>mv</code>。</p></blockquote>\n'
            '<h4 id="toc_14">永不停止的工作</h4>\n'
            '<p>打完收工，你总是要退出（<code>exit</code>）你的 shell 的，但是一直退不出是什么意思？</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b54685284365" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            "alias exit='sh';</textarea></div>\r\n"
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b54685284365-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b54685284365-1"><span class="crayon-e">alias '
            '</span><span class="crayon-v">exit</span><span '
            'class="crayon-o">=</span><span '
            'class="crayon-s">\'sh\'</span><span '
            'class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0003 seconds] -->\r\n'
            '<p></p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p>将 <code>exit</code> 命令别名为 <code>sh</code> ，这样输入 '
            '<code>exit</code> 命令后不是退出当前 shell，而是有进入了一个新的子 '
            'shell，想退出不干？没门！</p></blockquote>\n'
            '<h4 id="toc_15">到底是哪行？</h4>\n'
            '<p>会用 <code>grep</code> 的你，应该知道 <code>-n</code> '
            '参数可以告诉你所匹配的行的行号，但是随机乱变的行号是什么鬼？我讨厌随机！</p><!-- Crayon Syntax '
            'Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b58867460220" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'function grep { command grep "$@" | awk -F: \'{ r = int(rand() * '
            '10); n = $1; $1 = ""; command if (n ~ /^[0-9]+$/) { o = n+r } '
            'else { o = n }; print o ":" substr($0, 2)}\'; '
            '}</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b58867460220-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b58867460220-1"><span '
            'class="crayon-t">function</span><span class="crayon-h"> '
            '</span><span class="crayon-e">grep</span><span class="crayon-h"> '
            '</span><span class="crayon-sy">{</span><span class="crayon-h"> '
            '</span><span class="crayon-e">command </span><span '
            'class="crayon-i">grep</span><span class="crayon-h"> </span><span '
            'class="crayon-s">"$@"</span><span class="crayon-h"> </span><span '
            'class="crayon-o">|</span><span class="crayon-h"> </span><span '
            'class="crayon-v">awk</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">F</span><span '
            'class="crayon-o">:</span><span class="crayon-h"> </span><span '
            'class="crayon-s">\'{ r = int(rand() * 10); n = $1; $1 = ""; '
            'command if (n ~ /^[0-9]+$/) { o = n+r } else { o = n }; print o '
            '":" substr($0, 2)}\'</span><span class="crayon-sy">;</span><span '
            'class="crayon-h"> </span><span '
            'class="crayon-sy">}</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0008 seconds] -->\r\n'
            '<p></p>\n'
            '<blockquote><p><code>grep</code> 命令的 <code>-n</code> '
            '用于输出匹配的行的行号，上述函数将 <code>grep</code> '
            '定义为一个输出的行号完全不可预测的程序。</p></blockquote>\n'
            '<h4 id="toc_16">世界是反着的</h4>\n'
            '<p>你脚本也总是出各种匪夷所思的问题，而且你还不知道什么地方出了问题。这一切都要怪你进入了一个“是”即是“非”的世界。</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b5b622779350" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            "alias if='if !' for='for !' while='while !';</textarea></div>\r\n"
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b5b622779350-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b5b622779350-1"><span class="crayon-e">alias '
            '</span><span class="crayon-st">if</span><span '
            'class="crayon-o">=</span><span class="crayon-s">\'if '
            '!\'</span><span class="crayon-h"> </span><span '
            'class="crayon-st">for</span><span class="crayon-o">=</span><span '
            'class="crayon-s">\'for !\'</span><span class="crayon-h"> '
            '</span><span class="crayon-st">while</span><span '
            'class="crayon-o">=</span><span class="crayon-s">\'while '
            '!\'</span><span class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0005 seconds] -->\r\n'
            '<p>将 <code>if</code>、<code>for</code> 和 <code>while</code> '
            '所检测的条件定义为反，我不知道这个世界可以疯狂到这个地步！</p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>if</code> 、<code>for</code> 和 <code>while</code> 是用于 '
            'shell 脚本中做逻辑判断和循环的语句，<code>!</code> 表示对表达式逻辑取反。</p></blockquote>\n'
            '<h4 id="toc_17">想执行命令？没门！</h4>\n'
            '<p>当你输入了一个命令之后，用小指轻轻地、优雅地，按下右侧的那个小小的回车键，满心以为会爆发出绝世高手的风范。然而……并没有，非但没有，你输入的命令还被删除了一个字符！懵逼的你以为用力太轻了，再次敲击后发现又被删除了一个！！！</p>\n'
            '<blockquote><p>记得有一个电影，危急情况下，当别人把键盘递给一位即将闭眼的黑客时，他只是轻轻按下了那个“回车”！</p></blockquote>\n'
            '<p></p><!-- Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b5f160319796" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'bind \'"\\C-J":"\\C-?"\';\r\n'
            'bind \'"\\C-M":"\\C-?"\';</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b5f160319796-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5934076158b5f160319796-2">2</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b5f160319796-1"><span '
            'class="crayon-i">bind</span><span class="crayon-h"> </span><span '
            'class="crayon-s">\'"\\C-J":"\\C-?"\'</span><span '
            'class="crayon-sy">;</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5934076158b5f160319796-2"><span '
            'class="crayon-i">bind</span><span class="crayon-h"> </span><span '
            'class="crayon-s">\'"\\C-M":"\\C-?"\'</span><span '
            'class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0004 seconds] -->\r\n'
            '<p></p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>bind</code> 用于显示和设置键盘序列绑定，<code>C-J</code> 代表 '
            '<code>CTRL-J</code>，所触发的 ASCII 码是 '
            '<code>0x0A</code>，即“换行”；<code>C-M</code> 代表 '
            '<code>CTRL-M</code>，所触发的 ASCII 码是 '
            '<code>0x0D</code>，即“回车”；<code>C-?</code> 代表 '
            '<code>CTRL-?</code>，所触发的 ASCII 码是 '
            '<code>0x7F</code>，即“退格”。也就是说，你按下的回车键，会被映射为退格键。关于 ASCII 控制字符，可参见： '
            '<a '
            'href="http://ascii-table.com/control-chars.php">http://ascii-table.com/control-chars.php</a> '
            '。也可以使用 <code>showkey -a</code> 命令来检验你按下的键的键值（<code>CTRL-D</code> '
            '退出）。</p></blockquote>\n'
            '<h4 id="toc_18">好的，但是我不干</h4>\n'
            '<p>你说要，但是你的身体却说不要。明明应该应答 <code>yes</code>，但是却实际上拒绝了。</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b62958159071" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'alias yes="yes n";</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b62958159071-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b62958159071-1"><span class="crayon-e">alias '
            '</span><span class="crayon-v">yes</span><span '
            'class="crayon-o">=</span><span class="crayon-s">"yes '
            'n"</span><span class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0003 seconds] -->\r\n'
            '<p></p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>yes</code> 命令常用于脚本中应答 <code>y</code>，但是这里重定义了 '
            '<code>yes</code> 的结果。这是身口不一么？</p></blockquote>\n'
            '<h4 id="toc_19">我要编辑文件</h4>\n'
            '<p>当我用 vim 打开一个文件时，为什么什么都没发生？</p><!-- Crayon Syntax Highlighter '
            'v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b68701471116" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'alias vim="vim +q";</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b68701471116-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b68701471116-1"><span class="crayon-e">alias '
            '</span><span class="crayon-v">vim</span><span '
            'class="crayon-o">=</span><span class="crayon-s">"vim '
            '+q"</span><span class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0004 seconds] -->\r\n'
            '<p></p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p><code>vim</code> 可以用 <code>+</code> 来跟上要在 <code>vim</code> '
            '里面执行的命令，这里 <code>+q</code> 表示退出 '
            '<code>vim</code>。</p></blockquote>\n'
            '<h4 id="toc_20">最后，别想回到正常的世界</h4>\n'
            '<p>好吧，我明白了，都是 <code>alias</code> 捣的鬼，我要取消它们。什么？取消也无效了？</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5934076158b6c853299171" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'alias unalias=false;\r\n'
            'alias alias=false;</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5934076158b6c853299171-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5934076158b6c853299171-2">2</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5934076158b6c853299171-1"><span class="crayon-e">alias '
            '</span><span class="crayon-v">unalias</span><span '
            'class="crayon-o">=</span><span class="crayon-t">false</span><span '
            'class="crayon-sy">;</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5934076158b6c853299171-2"><span '
            'class="crayon-e">alias </span><span '
            'class="crayon-v">alias</span><span class="crayon-o">=</span><span '
            'class="crayon-t">false</span><span '
            'class="crayon-sy">;</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0005 seconds] -->\r\n'
            '<p></p>\n'
            '<blockquote><p>学习课堂：</p>\n'
            '<p>将 <code>alias</code> 和 <code>unalias</code> 别名为 '
            '<code>false</code>，那你就不能执行 <code>alias</code> '
            '的功能了。</p></blockquote>\n'
            '<h3 id="toc_21">让我回到真实的世界吧！</h3>\n'
            '<p>好了，我已经受够了这个疯狂是世界了。其实，上面这些别名，都是可以通过输入命令的全路径来绕开别名的——只是一般人不会这样输入。</p>\n'
            '<p>想要整蛊你的同事，那就将这个脚本（<a '
            'href="https://github.com/mathiasbynens/evil.sh/blob/master/evil.sh">https://github.com/mathiasbynens/evil.sh/blob/master/evil.sh</a> '
            '）放到他的机器上，并在他的 <code>.bash_profile</code> 的末尾加入 <code>source '
            '~/evil.sh</code> 即可。当然，你要这么做之前，要有友尽的心理准备。</p>\n'
            '<p>感谢这个邪恶的脚本的贡献者： Mathias Bynens 和 Jan Moesen 等人 ;-D</p>\n'
            '</div>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111312" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111312votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111312" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 6 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i> 2 评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2017/05/77d80105fd15f2465894827e23cc4842.jpeg'],
 'tags': 'IT技术,,Bash,shell',
 'thumb_up_num': 1,
 'title': '我是见鬼了么？这是史上最邪恶的脚本！没有之一！',
 'url': 'http://blog.jobbole.com/111312/',
 'url_obj_id': '6af92cd36c71c3667ed7345bce410262'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111319/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:07 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:07 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 575
2017-06-04 21:38:07 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.006s]
2017-06-04 21:38:07 [elasticsearch] DEBUG: > 经典的 Fork 炸弹解析
2017-06-04 21:38:07 [elasticsearch] DEBUG: < {"tokens":[{"token":"经典","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"典","start_offset":1,"end_offset":2,"type":"CN_WORD","position":1},{"token":"fork","start_offset":4,"end_offset":8,"type":"ENGLISH","position":2},{"token":"炸弹","start_offset":9,"end_offset":11,"type":"CN_WORD","position":3},{"token":"弹","start_offset":10,"end_offset":11,"type":"CN_WORD","position":4},{"token":"解析","start_offset":11,"end_offset":13,"type":"CN_WORD","position":5},{"token":"析","start_offset":12,"end_offset":13,"type":"CN_WORD","position":6}]}
2017-06-04 21:38:07 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:07 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 333
2017-06-04 21:38:07 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2017-06-04 21:38:07 [elasticsearch] DEBUG: > 开发,,Linux,shell
2017-06-04 21:38:07 [elasticsearch] DEBUG: < {"tokens":[{"token":"开发","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"发","start_offset":1,"end_offset":2,"type":"CN_WORD","position":1},{"token":"linux","start_offset":4,"end_offset":9,"type":"ENGLISH","position":2},{"token":"shell","start_offset":10,"end_offset":15,"type":"ENGLISH","position":3}]}
2017-06-04 21:38:07 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:07 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/09f079d897acf3470c973cad36deb549 HTTP/1.1" 200 175
2017-06-04 21:38:07 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/09f079d897acf3470c973cad36deb549 [status:200 request:0.015s]
2017-06-04 21:38:07 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111319/", "comment_num": 1, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t原文出处： saymagic   \nJaromil 在 2002 年设计了最为精简的一个Linux Fork炸弹，整个代码只有13个字符，在 shell 中运行后几秒后系统就会宕机：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n:(){:|:&amp;};:\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\t:(){:|:&amp;};:\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n这样看起来不是很好理解，我们可以更改下格式：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n:()\r\n{\r\n\t:|:&amp;\r\n};\r\n:\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t12345\r\n\t\t\t\t\r\n\t\t\t\t\t\t:(){\t:|:&amp;};:\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n更好理解一点的话就是这样:\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nbomb()\r\n{\r\n\tbomb|bomb&amp;\r\n};\r\nbomb\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t12345\r\n\t\t\t\t\r\n\t\t\t\t\t\tbomb(){\tbomb|bomb&amp;};bomb\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n因为shell中函数可以省略function关键字，所以上面的十三个字符是功能是定义一个函数与调用这个函数，函数的名称为:，主要的核心代码是:|:&amp;，可以看出这是一个函数本身的递归调用，通过&amp;实现在后台开启新进程运行，通过管道实现进程呈几何形式增长，最后再通过:来调用函数引爆炸弹。因此，几秒钟系统就会因为处理不过来太多的进程而死机，解决的唯一办法就是重启。\nBomb一下\n秉着不作不死的心态，我们也来运行一下，于是我将矛头指向云主机，，我使用了国内的一个2G内存的云主机，首先在本地开启两个终端，在一个终端连接云主机后运行炸弹，秒后再尝试用另外一个终端登录，效果可以看下面Gif图：\n\n看，运行一段时间后直接报出了-bash: fork: Cannot allocate memory，说明内存不足了。并且我在二号终端上尝试连接也没有任何反应。因为是虚拟的云主机，所以我只能通过主机服务商的后台来给主机断电重启。然后才能重新登录：\n\n炸弹危害\nFork炸弹带来的后果就是耗尽服务器资源，使服务器不能正常的对外提供服务，也就是常说的DoS(Denial of Service)。与传统1v1、通过不断向服务器发送请求造成服务器崩溃不同，Fork炸弹有种坐山观虎斗，不费一兵一卒斩敌人于马下的感觉。更吓人的是这个函数是不需要root权限就可以运行的。看到网上有帖子说某些人将个性签名改为Fork炸弹，结果果真有好奇之人中枪，试想如果中枪的人是在公司服务器上运行的话，oh，！\n预防方式\n当然，Fork炸弹没有那么可怕，用其它语言也可以分分钟写出来一个，例如，python版：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nimport os\r\n \twhile True: \r\n \tos.fork()\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t123\r\n\t\t\t\t\r\n\t\t\t\t\t\timport os \twhile True:  \tos.fork()\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\nFork炸弹的本质无非就是靠创建进程来抢占系统资源，在Linux中，我们可以通过ulimit命令来限制用户的某些行为，运行ulimit -a可以查看我们能做哪些限制：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nubuntu@10-10-57-151:~$ ulimit -a\r\ncore file size          (blocks, -c) 0\r\ndata seg size           (kbytes, -d) unlimited\r\nscheduling priority             (-e) 0\r\nfile size               (blocks, -f) unlimited\r\npending signals                 (-i) 7782\r\nmax locked memory       (kbytes, -l) 64\r\nmax memory size         (kbytes, -m) unlimited\r\nopen files                      (-n) 1024\r\npipe size            (512 bytes, -p) 8\r\nPOSIX message queues     (bytes, -q) 819200\r\nreal-time priority              (-r) 0\r\nstack size              (kbytes, -s) 8192\r\ncpu time               (seconds, -t) unlimited\r\nmax user processes              (-u) 7782\r\nvirtual memory          (kbytes, -v) unlimited\r\nfile locks                      (-x) unlimited\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1234567891011121314151617\r\n\t\t\t\t\r\n\t\t\t\t\t\tubuntu@10-10-57-151:~$ ulimit -acore file size          (blocks, -c) 0data seg size           (kbytes, -d) unlimitedscheduling priority             (-e) 0file size               (blocks, -f) unlimitedpending signals                 (-i) 7782max locked memory       (kbytes, -l) 64max memory size         (kbytes, -m) unlimitedopen files                      (-n) 1024pipe size            (512 bytes, -p) 8POSIX message queues     (bytes, -q) 819200real-time priority              (-r) 0stack size              (kbytes, -s) 8192cpu time               (seconds, -t) unlimitedmax user processes              (-u) 7782virtual memory          (kbytes, -v) unlimitedfile locks                      (-x) unlimited\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n可以看到，-u参数可以限制用户创建进程数，因此，我们可以使用ulimit -u 20来允许用户最多创建20个进程。这样就可以预防bomb炸弹。但这样是不彻底的，关闭终端后这个命令就失效了。我们可以通过修改/etc/security/limits.conf文件来进行更深层次的预防，在文件里添加如下一行（ubuntu需更换为你的用户名）：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\nubuntu - nproc 20\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1\r\n\t\t\t\t\r\n\t\t\t\t\t\tubuntu - nproc 20\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n这样，退出后重新登录，就会发现最大进程数已经更改为20了，\n\n这个时候我们再次运行炸弹就不会报内存不足了，而是提示-bash: fork: retry: No child processes，说明Linux限制了炸弹创建进程。\n参考\nhttp://en.wikipedia.org/wiki/Fork_bomb\n \n\r\n        \r\n        \r\n        \n    \n         1 赞\n         5 收藏\n\n                     1 评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "bookmark_num": 5, "title": "经典的 Fork 炸弹解析", "front_image_url": ["http://wx1.sinaimg.cn/large/7cc829d3gy1fg4b78x2izj20go083gog.jpg"], "suggest": [{"weight": 10, "input": ["经典", "解析", "炸弹", "fork"]}, {"weight": 7, "input": ["开发", "linux", "shell"]}], "tags": "开发,,Linux,shell"}
2017-06-04 21:38:07 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"09f079d897acf3470c973cad36deb549","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:07 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 5,
 'comment_num': 1,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">原文出处： <a target="_blank" '
            'href="http://blog.saymagic.cn/2015/03/25/fork-bomb.html">saymagic</a>\xa0\xa0\xa0'
            '</div><p><img id="pic" class="" '
            'src="http://wx1.sinaimg.cn/large/7cc829d3gy1fg4b78x2izj20go083gog.jpg"></p>\n'
            '<p>Jaromil 在 2002 年设计了最为精简的一个Linux Fork炸弹，整个代码只有13个字符，在 shell '
            '中运行后几秒后系统就会宕机：</p><!-- Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933f3a301705203892004" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            ':(){:|:&amp;};:</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a301705203892004-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933f3a301705203892004-1"><span '
            'class="crayon-o">:</span><span class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span><span class="crayon-sy">{</span><span '
            'class="crayon-o">:</span><span class="crayon-o">|</span><span '
            'class="crayon-o">:</span><span class="crayon-o">&amp;</span><span '
            'class="crayon-sy">}</span><span class="crayon-sy">;</span><span '
            'class="crayon-o">:</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0004 seconds] -->\r\n'
            '<p>这样看起来不是很好理解，我们可以更改下格式：</p><!-- Crayon Syntax Highlighter '
            'v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933f3a301711026474037" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            ':()\r\n'
            '{\r\n'
            '\t:|:&amp;\r\n'
            '};\r\n'
            ':</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a301711026474037-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a301711026474037-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a301711026474037-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a301711026474037-4">4</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a301711026474037-5">5</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933f3a301711026474037-1"><span '
            'class="crayon-o">:</span><span class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a301711026474037-2"><span '
            'class="crayon-sy">{</span></div><div class="crayon-line" '
            'id="crayon-5933f3a301711026474037-3"><span class="crayon-h">\t'
            '</span><span class="crayon-o">:</span><span '
            'class="crayon-o">|</span><span class="crayon-o">:</span><span '
            'class="crayon-o">&amp;</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a301711026474037-4"><span '
            'class="crayon-sy">}</span><span '
            'class="crayon-sy">;</span></div><div class="crayon-line" '
            'id="crayon-5933f3a301711026474037-5"><span '
            'class="crayon-o">:</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0005 seconds] -->\r\n'
            '<p>更好理解一点的话就是这样:</p><!-- Crayon Syntax Highlighter v2.7.1.1 '
            '-->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933f3a301715986742970" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'bomb()\r\n'
            '{\r\n'
            '\tbomb|bomb&amp;\r\n'
            '};\r\n'
            'bomb</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a301715986742970-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a301715986742970-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a301715986742970-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a301715986742970-4">4</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a301715986742970-5">5</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933f3a301715986742970-1"><span '
            'class="crayon-e">bomb</span><span class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a301715986742970-2"><span '
            'class="crayon-sy">{</span></div><div class="crayon-line" '
            'id="crayon-5933f3a301715986742970-3"><span class="crayon-h">\t'
            '</span><span class="crayon-v">bomb</span><span '
            'class="crayon-o">|</span><span class="crayon-v">bomb</span><span '
            'class="crayon-o">&amp;</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a301715986742970-4"><span '
            'class="crayon-sy">}</span><span '
            'class="crayon-sy">;</span></div><div class="crayon-line" '
            'id="crayon-5933f3a301715986742970-5"><span '
            'class="crayon-v">bomb</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0005 seconds] -->\r\n'
            '<p>因为shell中函数可以省略<code>function</code>关键字，所以上面的十三个字符是功能是定义一个函数与调用这个函数，函数的名称为<code>:</code>，主要的核心代码是<code>:|:&amp;</code>，可以看出这是一个函数本身的递归调用，通过<code>&amp;</code>实现在后台开启新进程运行，通过管道实现进程呈几何形式增长，最后再通过<code>:</code>来调用函数引爆炸弹。因此，几秒钟系统就会因为处理不过来太多的进程而死机，解决的唯一办法就是重启。</p>\n'
            '<h3 id="lyuhf">Bomb一下</h3>\n'
            '<p>秉着不作不死的心态，我们也来运行一下，于是我将矛头指向云主机，，我使用了国内的一个2G内存的云主机，首先在本地开启两个终端，在一个终端连接云主机后运行炸弹，秒后再尝试用另外一个终端登录，效果可以看下面Gif图：</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx1.sinaimg.cn/large/7cc829d3gy1fg4b78apa1g20of0cc149.gif"></p>\n'
            '<p>看，运行一段时间后直接报出了<code>-bash: fork: Cannot allocate '
            'memory</code>，说明内存不足了。并且我在二号终端上尝试连接也没有任何反应。因为是虚拟的云主机，所以我只能通过主机服务商的后台来给主机断电重启。然后才能重新登录：</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx1.sinaimg.cn/large/7cc829d3gy1fg4b928t0sg20of0ccdk5.gif"></p>\n'
            '<h3 id="gtjjj">炸弹危害</h3>\n'
            '<p>Fork炸弹带来的后果就是耗尽服务器资源，使服务器不能正常的对外提供服务，也就是常说的DoS(Denial of '
            'Service)。与传统1v1、通过不断向服务器发送请求造成服务器崩溃不同，Fork炸弹有种坐山观虎斗，不费一兵一卒斩敌人于马下的感觉。更吓人的是这个函数是不需要root权限就可以运行的。看到网上有帖子说某些人将个性签名改为Fork炸弹，结果果真有好奇之人中枪，试想如果中枪的人是在公司服务器上运行的话，oh，！</p>\n'
            '<h3 id="wutmu">预防方式</h3>\n'
            '<p>当然，Fork炸弹没有那么可怕，用其它语言也可以分分钟写出来一个，例如，python版：</p><!-- Crayon '
            'Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933f3a30171a178667040" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'import os\r\n'
            ' \twhile True: \r\n'
            ' \tos.fork()</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a30171a178667040-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a30171a178667040-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a30171a178667040-3">3</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933f3a30171a178667040-1"><span '
            'class="crayon-e">import </span><span '
            'class="crayon-e">os</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a30171a178667040-2"><span '
            'class="crayon-e"> \t</span><span '
            'class="crayon-st">while</span><span class="crayon-h"> '
            '</span><span class="crayon-t">True</span><span '
            'class="crayon-o">:</span><span class="crayon-h"> '
            '</span></div><div class="crayon-line" '
            'id="crayon-5933f3a30171a178667040-3"><span class="crayon-h"> \t'
            '</span><span class="crayon-v">os</span><span '
            'class="crayon-sy">.</span><span class="crayon-e">fork</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0005 seconds] -->\r\n'
            '<p>Fork炸弹的本质无非就是靠创建进程来抢占系统资源，在Linux中，我们可以通过<code>ulimit</code>命令来限制用户的某些行为，运行<code>ulimit '
            '-a</code>可以查看我们能做哪些限制：</p><!-- Crayon Syntax Highlighter v2.7.1.1 '
            '-->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933f3a30171e717893469" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'ubuntu@10-10-57-151:~$ ulimit -a\r\n'
            'core file size          (blocks, -c) 0\r\n'
            'data seg size           (kbytes, -d) unlimited\r\n'
            'scheduling priority             (-e) 0\r\n'
            'file size               (blocks, -f) unlimited\r\n'
            'pending signals                 (-i) 7782\r\n'
            'max locked memory       (kbytes, -l) 64\r\n'
            'max memory size         (kbytes, -m) unlimited\r\n'
            'open files                      (-n) 1024\r\n'
            'pipe size            (512 bytes, -p) 8\r\n'
            'POSIX message queues     (bytes, -q) 819200\r\n'
            'real-time priority              (-r) 0\r\n'
            'stack size              (kbytes, -s) 8192\r\n'
            'cpu time               (seconds, -t) unlimited\r\n'
            'max user processes              (-u) 7782\r\n'
            'virtual memory          (kbytes, -v) unlimited\r\n'
            'file locks                      (-x) '
            'unlimited</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a30171e717893469-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a30171e717893469-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a30171e717893469-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a30171e717893469-4">4</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a30171e717893469-5">5</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a30171e717893469-6">6</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a30171e717893469-7">7</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a30171e717893469-8">8</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a30171e717893469-9">9</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a30171e717893469-10">10</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a30171e717893469-11">11</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a30171e717893469-12">12</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a30171e717893469-13">13</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a30171e717893469-14">14</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a30171e717893469-15">15</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933f3a30171e717893469-16">16</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a30171e717893469-17">17</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933f3a30171e717893469-1"><span '
            'class="crayon-v">ubuntu</span><span '
            'class="crayon-sy">@</span><span class="crayon-cn">10</span><span '
            'class="crayon-o">-</span><span class="crayon-cn">10</span><span '
            'class="crayon-o">-</span><span class="crayon-cn">57</span><span '
            'class="crayon-o">-</span><span class="crayon-cn">151</span><span '
            'class="crayon-o">:</span><span class="crayon-o">~</span><span '
            'class="crayon-sy">$</span><span class="crayon-h"> </span><span '
            'class="crayon-v">ulimit</span><span class="crayon-h"> '
            '</span><span class="crayon-o">-</span><span '
            'class="crayon-i">a</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a30171e717893469-2"><span '
            'class="crayon-e">core </span><span class="crayon-e">file '
            '</span><span class="crayon-e">size</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-v">blocks</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">c</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">0</span></div><div class="crayon-line" '
            'id="crayon-5933f3a30171e717893469-3"><span class="crayon-e">data '
            '</span><span class="crayon-e">seg </span><span '
            'class="crayon-e">size</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 '
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-v">kbytes</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">d</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-e">unlimited</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a30171e717893469-4"><span '
            'class="crayon-e">scheduling </span><span '
            'class="crayon-e">priority</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 '
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-o">-</span><span class="crayon-v">e</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">0</span></div><div class="crayon-line" '
            'id="crayon-5933f3a30171e717893469-5"><span class="crayon-e">file '
            '</span><span class="crayon-e">size</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 '
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-v">blocks</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">f</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-e">unlimited</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a30171e717893469-6"><span '
            'class="crayon-e">pending </span><span '
            'class="crayon-e">signals</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 '
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-o">-</span><span class="crayon-v">i</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">7782</span></div><div class="crayon-line" '
            'id="crayon-5933f3a30171e717893469-7"><span class="crayon-e">max '
            '</span><span class="crayon-e">locked </span><span '
            'class="crayon-e">memory</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0 </span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-v">kbytes</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">l</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">64</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a30171e717893469-8"><span '
            'class="crayon-e">max </span><span class="crayon-e">memory '
            '</span><span class="crayon-e">size</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 </span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-v">kbytes</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">m</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-e">unlimited</span></div><div class="crayon-line" '
            'id="crayon-5933f3a30171e717893469-9"><span class="crayon-e">open '
            '</span><span class="crayon-e">files</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-o">-</span><span class="crayon-v">n</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">1024</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a30171e717893469-10"><span '
            'class="crayon-e">pipe </span><span '
            'class="crayon-e">size</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-cn">512</span><span class="crayon-h"> </span><span '
            'class="crayon-v">bytes</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">p</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">8</span></div><div class="crayon-line" '
            'id="crayon-5933f3a30171e717893469-11"><span '
            'class="crayon-e">POSIX </span><span class="crayon-e">message '
            '</span><span class="crayon-e">queues</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0 </span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-v">bytes</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">q</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">819200</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a30171e717893469-12"><span '
            'class="crayon-v">real</span><span class="crayon-o">-</span><span '
            'class="crayon-e">time </span><span '
            'class="crayon-e">priority</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-o">-</span><span class="crayon-v">r</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">0</span></div><div class="crayon-line" '
            'id="crayon-5933f3a30171e717893469-13"><span '
            'class="crayon-e">stack </span><span '
            'class="crayon-e">size</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-v">kbytes</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">s</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">8192</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a30171e717893469-14"><span '
            'class="crayon-e">cpu </span><span '
            'class="crayon-e">time</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 '
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-v">seconds</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">t</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-e">unlimited</span></div><div class="crayon-line" '
            'id="crayon-5933f3a30171e717893469-15"><span class="crayon-e">max '
            '</span><span class="crayon-e">user </span><span '
            'class="crayon-e">processes</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-o">-</span><span class="crayon-v">u</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">7782</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933f3a30171e717893469-16"><span '
            'class="crayon-e">virtual </span><span '
            'class="crayon-e">memory</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-v">kbytes</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">v</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-e">unlimited</span></div><div class="crayon-line" '
            'id="crayon-5933f3a30171e717893469-17"><span class="crayon-e">file '
            '</span><span class="crayon-e">locks</span><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0'
            '</span><span class="crayon-sy">(</span><span '
            'class="crayon-o">-</span><span class="crayon-v">x</span><span '
            'class="crayon-sy">)</span><span class="crayon-h"> </span><span '
            'class="crayon-v">unlimited</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0041 seconds] -->\r\n'
            '<p>可以看到，<code>-u</code>参数可以限制用户创建进程数，因此，我们可以使用<code>ulimit -u '
            '20</code>来允许用户最多创建20个进程。这样就可以预防bomb炸弹。但这样是不彻底的，关闭终端后这个命令就失效了。我们可以通过修改<code>/etc/security/limits.conf</code>文件来进行更深层次的预防，在文件里添加如下一行（ubuntu需更换为你的用户名）：</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933f3a301722872223553" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'ubuntu - nproc 20</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933f3a301722872223553-1">1</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933f3a301722872223553-1"><span '
            'class="crayon-v">ubuntu</span><span class="crayon-h"> '
            '</span><span class="crayon-o">-</span><span class="crayon-h"> '
            '</span><span class="crayon-i">nproc</span><span class="crayon-h"> '
            '</span><span class="crayon-cn">20</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0004 seconds] -->\r\n'
            '<p>这样，退出后重新登录，就会发现最大进程数已经更改为20了，</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx2.sinaimg.cn/large/7cc829d3gy1fg4b7acou5j20k008275m.jpg"></p>\n'
            '<p>这个时候我们再次运行炸弹就不会报内存不足了，而是提示<code>-bash: fork: retry: No child '
            'processes</code>，说明Linux限制了炸弹创建进程。</p>\n'
            '<h3 id="chpik">参考</h3>\n'
            '<p><a href="http://en.wikipedia.org/wiki/Fork_bomb" '
            'target="_blank">http://en.wikipedia.org/wiki/Fork_bomb</a></p>\n'
            '<p>\xa0</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111319" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111319votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111319" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 5 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i> 1 评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://wx1.sinaimg.cn/large/7cc829d3gy1fg4b78x2izj20go083gog.jpg'],
 'tags': '开发,,Linux,shell',
 'thumb_up_num': 1,
 'title': '经典的 Fork 炸弹解析',
 'url': 'http://blog.jobbole.com/111319/',
 'url_obj_id': '09f079d897acf3470c973cad36deb549'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:11 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111293/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:11 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:11 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 823
2017-06-04 21:38:11 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.005s]
2017-06-04 21:38:11 [elasticsearch] DEBUG: > 为什么要给软件做测试？如何测试呢？
2017-06-04 21:38:11 [elasticsearch] DEBUG: < {"tokens":[{"token":"为什么","start_offset":0,"end_offset":3,"type":"CN_WORD","position":0},{"token":"什么","start_offset":1,"end_offset":3,"type":"CN_WORD","position":1},{"token":"么","start_offset":2,"end_offset":3,"type":"CN_WORD","position":2},{"token":"要给","start_offset":3,"end_offset":5,"type":"CN_WORD","position":3},{"token":"软件","start_offset":5,"end_offset":7,"type":"CN_WORD","position":4},{"token":"做","start_offset":7,"end_offset":8,"type":"CN_CHAR","position":5},{"token":"测试","start_offset":8,"end_offset":10,"type":"CN_WORD","position":6},{"token":"如何","start_offset":11,"end_offset":13,"type":"CN_WORD","position":7},{"token":"测试","start_offset":13,"end_offset":15,"type":"CN_WORD","position":8},{"token":"呢","start_offset":15,"end_offset":16,"type":"CN_CHAR","position":9}]}
2017-06-04 21:38:11 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:11 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 339
2017-06-04 21:38:11 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.008s]
2017-06-04 21:38:11 [elasticsearch] DEBUG: > IT技术,测试,软件测试
2017-06-04 21:38:11 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"测试","start_offset":5,"end_offset":7,"type":"CN_WORD","position":1},{"token":"软件","start_offset":8,"end_offset":10,"type":"CN_WORD","position":2},{"token":"测试","start_offset":10,"end_offset":12,"type":"CN_WORD","position":3}]}
2017-06-04 21:38:11 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:11 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/10b661d4c108a57443e6c78b11a6737e HTTP/1.1" 200 175
2017-06-04 21:38:11 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/10b661d4c108a57443e6c78b11a6737e [status:200 request:0.027s]
2017-06-04 21:38:11 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111293/", "comment_num": 0, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - Anne90 翻译，蒋生武 校稿。未经许可，禁止转载！英文出处：Itamar Turner-Trauring 。欢迎加入翻译组。你为什么应该测试你的软件？你应该如何测试软件？有些人对这些问题有非常简单的回答。\n及时享乐型的程序员根本懒得去测试，快乐地活在当下。更严肃的程序员会告诉你软件测试是为了开发出高质量的产品。为了可以开发出高质量的产品，必须始终编写单元测试和集成测试，并做 QA 测试。忽略这些，你的代码将会掉入 bug 为患的深渊。\n\n尽管我更赞同第二种观点，但我认为这不是一个完美的答案。考虑到不同的软件项目的差异，一套答案似乎不可能适合每个人。\n\n移动游戏、医疗设备和在线商店三者各不相同。\n每个组织也不尽同的，初创公司和大型跨国企业所拥有的资源是无法相提并论的，和 NASA 也是完全不一样的。\n每个项目都会经历不同的阶段，没有用户的产品和有成千上万交易的产品有非常不同的地位\n\n你需要的不仅仅是一个答案，而是如何去选择适合你情况和需要的答案。我们首先会考虑适合你的测试方法。然后我们会考虑为什么要测试你的软件。最后，我们将结合方法和目标，来看一下你可以选择什么方式去测试你的软件。\n你可以用什么样的测试方法？\n首先，我们考虑下可以使用的不同测试方法。下面的代码是测试吗？\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\ndef test_add():\r\n    assert add(2, 2) == 5\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t12\r\n\t\t\t\t\r\n\t\t\t\t\t\tdef test_add():    assert add(2, 2) == 5\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n我会说，是的，那就是一个测试。从函数名上可以看出来。这个测试证明了函数add() 做了什么：对两个数字做加法，然后将结果返回给我们。\n你一定注意到了，这个测试是错误的。幸运的是，我们的开发过程有另一步骤：代码审查。亲爱的读者，你可以作为一个代码审查者并告诉我，我的代码是错误的，2加2是4，不是5。\n代码审查是一种测试方法吗？如果你试图验证你的代码符合规范，那么这就是一种测试。你大脑中有算术规范（”2 + 2 = 4″），你就会检查你的代码是否符合这个规范。\n让我们把代码审查和自动化单元测试都做分别作为一种测试方法。尽管他们都是测试，他们也非常不同。他们之间的主要区别是什么？\n测试的一种方法是自动化的，另一种是由人类完成的。\n自动化测试是连续的和可重复的，你可以这么写：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\ndef test_add_twice():\r\n    for i in range(10000000):\r\n        assert add(i, i) == 2 * i\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t123\r\n\t\t\t\t\r\n\t\t\t\t\t\tdef test_add_twice():    for i in range(10000000):        assert add(i, i) == 2 * i\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n计算机将会每次运行完全相同的代码，该代码将会确保函数 add() 对于这些特定的输入返回特定的输出。人在手动验证一千万种不同的计算时会遇到一些困难：无聊、分心、错误、迟缓。\n另一方面，人类在阅读这个代码时，会告诉你这是bug：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\ndef add(a, b):\r\n    return a + b + 1\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t12\r\n\t\t\t\t\r\n\t\t\t\t\t\tdef add(a, b):    return a + b + 1\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n计算机所做的事情，无论是好是坏，人类都能明白他的意义。只有人类才知道软件的意义是什么。\n现在我们可以按照使用的方法来对测试进行分类：人类测试意义，自动化测试确保一致性。\n你为什么要测试软件？\n接下来，让我们考虑测试目标。\n测试软件的第一个可能的目标就是确保它符合规范。这个目标是大多数程序员在讨论测试时想到的：它涵盖了单元测试和手工测试，它也包括代码审查。你的软件具有某些必须的功能、规范，你想确保它在现在和未来也确实是这样的。\n一些需求是高层次的：一个在线商店想要顾客可以订购他们添加到购物车的产品。其他需求是低层次的实现细节，只有程序员感兴趣。你可能想要函数 verify_creditcard() 接收信用卡号码作为字符串，然后如果信用卡是无效的，抛出一个 InvalidCreditCard 异常。\n所有的这些需求都是规范，他可以被写的非常详细，也可以是头脑中的一个概念（如 2 + 2 等于 4 ）。无论如何，你测试你的软件是为了确保它做了它应该做的事。\n然而，有时测试也可以有不同的目标。在 Eric Ries 的书《精益创业》中， 他提到编写软件后却发现没有人真正想用它的问题。如果没有人使用你的软件，花费了大量的时间去测试，确保你的软件满足规范就是浪费时间。\nRies 认为你首先应该搞清楚一个产品是否会成功，通过测试他称为的“最低可行产品”是否拥有潜在的用户和客户。这是一个与众不同的测试形式：它不是验证你的软件是否满足规范，而是学习你以前不知道的东西。\n软件测试第二个可能的目标就是为了获得知识。让我随着这个目标看一下另一种测试形式。“A/B测试”就是你使用两个变量，然后看哪个变量产生更好的结果。或许你正在测试重新设计的网站：你给 90% 的访客展现你目前的设计，10% 的访客展现你的新设计，然后看哪种会让你的产品有更多的用户注册。\n注意，你有两套规范，并且已经实现了他们。测试的要点就是找到哪种规范更好，学习一些新的东西，而不是验证实现是否符合规范。\n现在我们已经知道为什么你需要做测试：要么验证你的实现符合规范，要么获得新的知识。\n你应该如何测试软件？\n结合我们提出的那两个目标（获得新知识和满足规范）和两种测试方法（手工测试和自动化测试），你会得到四种不同的测试形式，每种都会有更详细的测试目标。\n\n对于你特定的需求和情况，你必须选择一种合适的测试方式。让我们逐个介绍这四种测试类型，看看每种测试类型应该在什么情况下使用。\n理解用户\n\n用户会购买你的产品吗？\n一个设计的改变会带来有更多的注册吗？\n用户会理解你的软件是如何工作的吗？\n\n这些问题都无法通过对比你的软件是否满足规范来得到回答。相反，你需要经验知识：你需要观察当你的软件展现给用户时，用户真正做了什么操作。\n相关的测试技术包括：\n\n可用性测试\n最低可行产品测试（《精益创业》）\nA/B测试\n\n理解运行时行为\n\n你的软件在负载下的表现如何？\n你的软件有资源竞争吗？\n当有非法输入时，你的软件是否会崩溃？\n\n这些问题不能总是通过比较你的软件是否符合规范来回答。一旦你的软件足够复杂，你无法完全理解或者预测它的回应。你需要观察它的实际运行来理解其行为。\n相关的测试技术包括：\n\n压力测试和浸泡测试\n从产品日志中收集异常及跟踪信息\n\n功能的正确性\n\n你的软件是否真正符合规范？\n你的软件是否做了它应该做的事？\n\n很容易可以看到，自动化测试可以证明这些，但是请记住检查2+2等于5的单元测试。在更基本的层面上，软件可以在技术上满足规范，但是不能达到规范的目标。只有我们理解规范背后的含义，然后才能确定软件是否达到了目标。\n相关的测试技术包括：\n\n手动用户界面测试（如：QA人员使用您的网站）\n代码审查\n\n功能的稳定性\n\n对于同样的输入，你的公开接口（API）是否总能返回相同的结果？\n你的代码是否提供了它应该提供的保证？\n\n人类很不擅长测试这些情况。人类非常容易忽略小的变化：如果一个按钮从“Send Now”改变为“Send now”，你可能根本就不会注意到。相反，如果你的接口从sendNow() 变为 send_now()，或者返回值的类型有轻微变化，你的软件就会崩溃。\n这意味着一个公开接口，尤其是其他软件依赖的接口，为了保证正确性必须要稳定。当你不断更新你的测试时，为改变频繁的私有接口或者代码编写自动化测试，将会导致非常高的维护成本\n相关的测试技术包括：\n\n单元测试、集成测试和其他类似的自动化接口测试\n自动化用户界面测试（如：网站的Selenium测试）\n编译器检查和静态检查\n\n模型的应用\n那么这一切有什么好处呢？\n选择如何去测试\n首先，我们最初的目标：基于你的目标，这个模型可以帮助选择测试形式。\n考虑一个新建立的产品，不确定什么样的人愿意使用这个产品。自动化测试的重点在于确保代码符合规范，因此在搞清楚用户真正的需求之前，编写自动化测试用例可能是浪费时间。\n精益创业（Lean Startup）是一种可行的替代方法，它的目标是找到什么样的产品可以满足用户的需求，它侧重于实验或者尝试。这意味着专注理解用户这个象限。一旦选定了产品，你就可以花费时间在确认“最低可行性”之外的地方，比如投入更多的资源保证软件功能的正确性和稳定性。\n辨别你是否选择了错误的测试类型\n第二，当你选择了错误的测试类型时，这个模型可以帮你改变航向。比如假设编写税收软件（细节源自一个真实案例），他们为他们的web界面编写了Selenium测试，与此同时他们的web界面做了重大的改变。\n即使做了测试，他们的程序依然是有bug的，每次改变界面这些测试用例就不能使用了。测试似乎没有提升质量，但是它浪费了开发者的时间进行维护。他们做错了什么？\n这个问题就是他们的系统实际上有两部分：\n\n税收引擎相当稳定，税法每年只改变一次。对于用户来说税收引擎中的错误是一个主要问题，对于开发者来说不兼容的接口改变是一个问题。这表明需要稳定的功能测试，比如针对税收计算引擎的单元测试。正确的功能可以通过代码审和查税务会计的反馈来保证。\n基于web的用户界面。UI界面频繁的变更，这表明稳定的功能测试现在还不是目标。现在的目标是功能的正确性，所以UI界面应该进行手工测试（比如：当程序员写代码时进行测试）\n\n讨论测试的基础\n最后，这个模型提供了一个共享的术语，这个术语可以帮助你在广泛的意义和不同的目标下讨论测试。\n\n可以不必再对手工测试和单元测试哪个更好进行无休止的争论，从这个模型中可以非常清楚的展示出他们之间的差异。\n你还可以与公司的其他部门（如市场营销）讨论测试，这会是一个非常不同的测试视角。\n\n总结\n你为什么要测试你的软件？要么获得知识，要么满足规范。\n你测试软件的方法有哪些？手工测试或者自动化测试。\n你应该如何测试你的软件？根据你特定的情况，选择相关的测试形式，如理解用户、理解运行时行为、功能的稳定性、功能的一致性。\n\r\n        \r\n            \n        打赏支持我翻译更多好文章，谢谢！\n         打赏译者\n    \n\n    \n        打赏支持我翻译更多好文章，谢谢！\n                任选一种支付方式\n                \n                        \n            \n                            \n                    \n    \n\n    \r\n        \n    \n         1 赞\n          收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：Anne90\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            软件开发测试工程师，关注互联网/软件测试相关        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  10 ·          \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 0, "title": "为什么要给软件做测试？如何测试呢？", "front_image_url": ["http://wx3.sinaimg.cn/large/63918611gy1ffytn2l5quj20dc0a0dg9.jpg"], "suggest": [{"weight": 10, "input": ["软件", "测试", "为什么", "要给", "什么", "如何"]}, {"weight": 7, "input": ["软件", "技术", "测试"]}], "tags": "IT技术,测试,软件测试"}
2017-06-04 21:38:11 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"10b661d4c108a57443e6c78b11a6737e","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:11 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 0,
 'comment_num': 0,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/2106382253">Anne90</a> 翻译，<a '
            'href="http://www.jobbole.com/members/oliverpp">蒋生武</a> '
            '校稿。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="https://codewithoutrules.com/2017/03/12/software-testing-big-picture/">Itamar '
            'Turner-Trauring </a>。欢迎加入<a target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p><strong>你为什么应该测试你的软件？你应该如何测试软件？</strong>有些人对这些问题有非常简单的回答。</p>\n'
            '<p>及时享乐型的程序员根本懒得去测试，快乐地活在当下。更严肃的程序员会告诉你软件测试是为了开发出高质量的产品。为了可以开发出高质量的产品，必须始终编写单元测试和集成测试，并做 '
            'QA 测试。忽略这些，你的代码将会掉入 bug 为患的深渊。</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx3.sinaimg.cn/large/63918611gy1ffytn2l5quj20dc0a0dg9.jpg"></p>\n'
            '<p>尽管我更赞同第二种观点，但我认为这不是一个完美的答案。考虑到不同的软件项目的差异，一套答案似乎不可能适合每个人。</p>\n'
            '<ul>\n'
            '<li>移动游戏、医疗设备和在线商店三者各不相同。</li>\n'
            '<li><span style="color: '
            '#000000;">每个组织也不尽同的，初创公司和大型跨国企业所拥有的资源是无法相提并论的，和 NASA '
            '也是完全不一样的。</span></li>\n'
            '<li>每个项目都会经历不同的阶段，没有用户的产品和有成千上万交易的产品有非常不同的地位</li>\n'
            '</ul>\n'
            '<p><strong>你需要的不仅仅是一个答案，而是如何去选择适合你情况和需要的答案。</strong>我们首先会考虑适合你的测试方法。然后我们会考虑为什么要测试你的软件。最后，我们将结合方法和目标，来看一下你可以选择什么方式去测试你的软件。</p>\n'
            '<h2>你可以用什么样的测试方法？</h2>\n'
            '<p>首先，我们考虑下可以使用的不同测试方法。下面的代码是测试吗？</p><!-- Crayon Syntax '
            'Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933c64708faf236499989" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'def test_add():\r\n'
            '    assert add(2, 2) == 5</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933c64708faf236499989-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933c64708faf236499989-2">2</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933c64708faf236499989-1"><span class="crayon-e">def '
            '</span><span class="crayon-e">test_add</span><span '
            'class="crayon-sy">(</span><span class="crayon-sy">)</span><span '
            'class="crayon-o">:</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933c64708faf236499989-2"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">assert</span><span class="crayon-h"> '
            '</span><span class="crayon-e">add</span><span '
            'class="crayon-sy">(</span><span class="crayon-cn">2</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">2</span><span class="crayon-sy">)</span><span '
            'class="crayon-h"> </span><span class="crayon-o">==</span><span '
            'class="crayon-h"> </span><span '
            'class="crayon-cn">5</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0007 seconds] -->\r\n'
            '<p>我会说，是的，那就是一个测试。从函数名上可以看出来。这个测试证明了函数add() '
            '做了什么：对两个数字做加法，然后将结果返回给我们。</p>\n'
            '<p>你一定注意到了，这个测试是错误的。幸运的是，我们的开发过程有另一步骤：代码审查。亲爱的读者，你可以作为一个代码审查者并告诉我，我的代码是错误的，2加2是4，不是5。</p>\n'
            '<p>代码审查是一种测试方法吗？如果你试图验证你的代码符合规范，那么这就是一种测试。你大脑中有算术规范（”2 + 2 = '
            '4″），你就会检查你的代码是否符合这个规范。</p>\n'
            '<p><strong>让我们把代码审查和自动化单元测试都做分别作为一种测试方法。</strong>尽管他们都是测试，他们也非常不同。他们之间的主要区别是什么？</p>\n'
            '<p>测试的一种方法是自动化的，另一种是由人类完成的。</p>\n'
            '<p>自动化测试是连续的和可重复的，你可以这么写：</p><!-- Crayon Syntax Highlighter '
            'v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933c64708fbd785288064" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'def test_add_twice():\r\n'
            '    for i in range(10000000):\r\n'
            '        assert add(i, i) == 2 * i</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933c64708fbd785288064-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933c64708fbd785288064-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5933c64708fbd785288064-3">3</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933c64708fbd785288064-1"><span class="crayon-e">def '
            '</span><span class="crayon-e">test_add_twice</span><span '
            'class="crayon-sy">(</span><span class="crayon-sy">)</span><span '
            'class="crayon-o">:</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933c64708fbd785288064-2"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">for</span><span class="crayon-h"> </span><span '
            'class="crayon-i">i</span><span class="crayon-h"> </span><span '
            'class="crayon-st">in</span><span class="crayon-h"> </span><span '
            'class="crayon-e">range</span><span '
            'class="crayon-sy">(</span><span '
            'class="crayon-cn">10000000</span><span '
            'class="crayon-sy">)</span><span '
            'class="crayon-o">:</span></div><div class="crayon-line" '
            'id="crayon-5933c64708fbd785288064-3"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">assert</span><span class="crayon-h"> '
            '</span><span class="crayon-e">add</span><span '
            'class="crayon-sy">(</span><span class="crayon-v">i</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-v">i</span><span class="crayon-sy">)</span><span '
            'class="crayon-h"> </span><span class="crayon-o">==</span><span '
            'class="crayon-h"> </span><span class="crayon-cn">2</span><span '
            'class="crayon-h"> </span><span class="crayon-o">*</span><span '
            'class="crayon-h"> </span><span '
            'class="crayon-v">i</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0009 seconds] -->\r\n'
            '<p>计算机将会每次运行完全相同的代码，该代码将会确保函数 add() '
            '对于这些特定的输入返回特定的输出。人在手动验证一千万种不同的计算时会遇到一些困难：无聊、分心、错误、迟缓。</p>\n'
            '<p>另一方面，人类在阅读这个代码时，会告诉你这是bug：</p><!-- Crayon Syntax Highlighter '
            'v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5933c64708fc2957337976" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'def add(a, b):\r\n'
            '    return a + b + 1</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5933c64708fc2957337976-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5933c64708fc2957337976-2">2</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5933c64708fc2957337976-1"><span class="crayon-e">def '
            '</span><span class="crayon-e">add</span><span '
            'class="crayon-sy">(</span><span class="crayon-v">a</span><span '
            'class="crayon-sy">,</span><span class="crayon-h"> </span><span '
            'class="crayon-v">b</span><span class="crayon-sy">)</span><span '
            'class="crayon-o">:</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5933c64708fc2957337976-2"><span '
            'class="crayon-h">\xa0\xa0\xa0\xa0</span><span '
            'class="crayon-st">return</span><span class="crayon-h"> '
            '</span><span class="crayon-v">a</span><span class="crayon-h"> '
            '</span><span class="crayon-o">+</span><span class="crayon-h"> '
            '</span><span class="crayon-v">b</span><span class="crayon-h"> '
            '</span><span class="crayon-o">+</span><span class="crayon-h"> '
            '</span><span class="crayon-cn">1</span></div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0006 seconds] -->\r\n'
            '<p>计算机所做的事情，无论是好是坏，人类都能明白他的意义。只有人类才知道软件的意义是什么。</p>\n'
            '<p>现在我们可以按照使用的方法来对测试进行分类<strong>：人类测试意义，自动化测试确保一致性。</strong></p>\n'
            '<h2>你为什么要测试软件？</h2>\n'
            '<p>接下来，让我们考虑测试目标。</p>\n'
            '<p><strong>测试软件的第一个可能的目标就是确保它符合规范。</strong>这个目标是大多数程序员在讨论测试时想到的：它涵盖了单元测试和手工测试，它也包括代码审查。你的软件具有某些必须的功能、规范，你想确保它在现在和未来也确实是这样的。</p>\n'
            '<p>一些需求是高层次的：一个在线商店想要顾客可以订购他们添加到购物车的产品。其他需求是低层次的实现细节，只有程序员感兴趣。你可能想要函数 '
            'verify_creditcard() 接收信用卡号码作为字符串，然后如果信用卡是无效的，抛出一个 '
            'InvalidCreditCard\xa0异常。</p>\n'
            '<p>所有的这些需求都是规范，他可以被写的非常详细，也可以是头脑中的一个概念（如 2 + 2 等于 4 '
            '）。无论如何，你测试你的软件是为了确保它做了它应该做的事。</p>\n'
            '<p><strong>然而，有时测试也可以有不同的目标。</strong>在 Eric Ries 的书《精益创业》中， '
            '他提到编写软件后却发现没有人真正想用它的问题。如果没有人使用你的软件，花费了大量的时间去测试，确保你的软件满足规范就是浪费时间。</p>\n'
            '<p>Ries '
            '认为你首先应该搞清楚一个产品是否会成功，通过测试他称为的“最低可行产品”是否拥有潜在的用户和客户。这是一个与众不同的测试形式：它不是验证你的软件是否满足规范，而是学习你以前不知道的东西。</p>\n'
            '<p><strong>软件测试第二个可能的目标就是为了获得知识。</strong>让我随着这个目标看一下另一种测试形式。“A/B测试”就是你使用两个变量，然后看哪个变量产生更好的结果。或许你正在测试重新设计的网站：你给 '
            '90% 的访客展现你目前的设计，10% 的访客展现你的新设计，然后看哪种会让你的产品有更多的用户注册。</p>\n'
            '<p>注意，你有两套规范，并且已经实现了他们。测试的要点就是找到哪种规范更好，学习一些新的东西，而不是验证实现是否符合规范。</p>\n'
            '<p>现在我们已经知道为什么你需要做测试：<strong>要么验证你的实现符合规范，要么获得新的知识。</strong></p>\n'
            '<h2>你应该如何测试软件？</h2>\n'
            '<p>结合我们提出的那两个目标（获得新知识和满足规范）和两种测试方法（手工测试和自动化测试），你会得到四种不同的测试形式，每种都会有更详细的测试目标。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/03/e037c613b8d1aafc714d7b49c878b13a.png"><img '
            'class="aligncenter wp-image-63230 size-full" '
            'src="http://jbcdn2.b0.upaiyun.com/2017/03/e037c613b8d1aafc714d7b49c878b13a.png" '
            'alt="QQ图片20170408100459" width="653" height="268"></a></p>\n'
            '<p>对于你特定的需求和情况，你必须选择一种合适的测试方式。让我们逐个介绍这四种测试类型，看看每种测试类型应该在什么情况下使用。</p>\n'
            '<h3>理解用户</h3>\n'
            '<ul>\n'
            '<li>用户会购买你的产品吗？</li>\n'
            '<li>一个设计的改变会带来有更多的注册吗？</li>\n'
            '<li>用户会理解你的软件是如何工作的吗？</li>\n'
            '</ul>\n'
            '<p>这些问题都无法通过对比你的软件是否满足规范来得到回答。相反，你需要经验知识：你需要观察当你的软件展现给用户时，用户真正做了什么操作。</p>\n'
            '<p>相关的测试技术包括：</p>\n'
            '<ul>\n'
            '<li>可用性测试</li>\n'
            '<li>最低可行产品测试（《精益创业》）</li>\n'
            '<li>A/B测试</li>\n'
            '</ul>\n'
            '<h3>理解运行时行为</h3>\n'
            '<ul>\n'
            '<li>你的软件在负载下的表现如何？</li>\n'
            '<li>你的软件有资源竞争吗？</li>\n'
            '<li>当有非法输入时，你的软件是否会崩溃？</li>\n'
            '</ul>\n'
            '<p>这些问题不能总是通过比较你的软件是否符合规范来回答。一旦你的软件足够复杂，你无法完全理解或者预测它的回应。你需要观察它的实际运行来理解其行为。</p>\n'
            '<p>相关的测试技术包括：</p>\n'
            '<ul>\n'
            '<li>压力测试和浸泡测试</li>\n'
            '<li>从产品日志中收集异常及跟踪信息</li>\n'
            '</ul>\n'
            '<h3>功能的正确性</h3>\n'
            '<ul>\n'
            '<li>你的软件是否真正符合规范？</li>\n'
            '<li>你的软件是否做了它应该做的事？</li>\n'
            '</ul>\n'
            '<p>很容易可以看到，自动化测试可以证明这些，但是请记住检查2+2等于5的单元测试。在更基本的层面上，软件可以在技术上满足规范，但是不能达到规范的目标。只有我们理解规范背后的含义，然后才能确定软件是否达到了目标。</p>\n'
            '<p>相关的测试技术包括：</p>\n'
            '<ul>\n'
            '<li>手动用户界面测试（如：QA人员使用您的网站）</li>\n'
            '<li>代码审查</li>\n'
            '</ul>\n'
            '<h3>功能的稳定性</h3>\n'
            '<ul>\n'
            '<li>对于同样的输入，你的公开接口（API）是否总能返回相同的结果？</li>\n'
            '<li>你的代码是否提供了它应该提供的保证？</li>\n'
            '</ul>\n'
            '<p>人类很不擅长测试这些情况。人类非常容易忽略小的变化：如果一个按钮从“Send Now”改变为“Send '
            'now”，你可能根本就不会注意到。相反，如果你的接口从sendNow()\xa0变为\xa0'
            'send_now()，或者返回值的类型有轻微变化，你的软件就会崩溃。</p>\n'
            '<p>这意味着一个公开接口，尤其是其他软件依赖的接口，为了保证正确性必须要稳定。当你不断更新你的测试时，为改变频繁的私有接口或者代码编写自动化测试，将会导致非常高的维护成本</p>\n'
            '<p>相关的测试技术包括：</p>\n'
            '<ul>\n'
            '<li>单元测试、集成测试和其他类似的自动化接口测试</li>\n'
            '<li>自动化用户界面测试（如：网站的Selenium测试）</li>\n'
            '<li><span style="color: #000000;">编译器检查和静态检查</span></li>\n'
            '</ul>\n'
            '<h2>模型的应用</h2>\n'
            '<p>那么这一切有什么好处呢？</p>\n'
            '<h3>选择如何去测试</h3>\n'
            '<p><strong>首先，我们最初的目标：基于你的目标，这个模型可以帮助选择测试形式。</strong></p>\n'
            '<p>考虑一个新建立的产品，不确定什么样的人愿意使用这个产品。自动化测试的重点在于确保代码符合规范，因此在搞清楚用户真正的需求之前，编写自动化测试用例可能是浪费时间。</p>\n'
            '<p>精益创业（Lean '
            'Startup）是一种可行的替代方法，它的目标是找到什么样的产品可以满足用户的需求，它侧重于实验或者尝试。这意味着专注理解用户这个象限。一旦选定了产品，你就可以花费时间在确认“最低可行性”之外的地方，比如投入更多的资源保证软件功能的正确性和稳定性。</p>\n'
            '<h3>辨别你是否选择了错误的测试类型</h3>\n'
            '<p><strong>第二，当你选择了错误的测试类型时，这个模型可以帮你改变航向。</strong>比如假设编写税收软件（细节源自一个真实案例），他们为他们的web界面编写了Selenium测试，与此同时他们的web界面做了重大的改变。</p>\n'
            '<p>即使做了测试，他们的程序依然是有bug的，每次改变界面这些测试用例就不能使用了。测试似乎没有提升质量，但是它浪费了开发者的时间进行维护。他们做错了什么？</p>\n'
            '<p>这个问题就是他们的系统实际上有两部分：</p>\n'
            '<ol>\n'
            '<li>税收引擎相当稳定，税法每年只改变一次。对于用户来说税收引擎中的错误是一个主要问题，对于开发者来说不兼容的接口改变是一个问题。这表明需要稳定的功能测试，比如针对税收计算引擎的单元测试。正确的功能可以通过代码审和查税务会计的反馈来保证。</li>\n'
            '<li>基于web的用户界面。UI界面频繁的变更，这表明稳定的功能测试现在还不是目标。现在的目标是功能的正确性，所以UI界面应该进行手工测试（比如：当程序员写代码时进行测试）</li>\n'
            '</ol>\n'
            '<h3>讨论测试的基础</h3>\n'
            '<p>最后，这个模型提供了一个共享的术语，这个术语可以帮助你在广泛的意义和不同的目标下讨论测试。</p>\n'
            '<ul>\n'
            '<li>可以不必再对手工测试和单元测试哪个更好进行无休止的争论，从这个模型中可以非常清楚的展示出他们之间的差异。</li>\n'
            '<li>你还可以与公司的其他部门（如市场营销）讨论测试，这会是一个非常不同的测试视角。</li>\n'
            '</ul>\n'
            '<h2>总结</h2>\n'
            '<p>你为什么要测试你的软件？要么获得知识，要么满足规范。</p>\n'
            '<p>你测试软件的方法有哪些？手工测试或者自动化测试。</p>\n'
            '<p>你应该如何测试你的软件？根据你特定的情况，选择相关的测试形式，如理解用户、理解运行时行为、功能的稳定性、功能的一致性。</p>\n'
            '\r\n'
            '        \r\n'
            '            <blockquote class="rewards">\n'
            '        <p><strong>打赏支持我翻译更多好文章，谢谢！</strong></p>\n'
            '        <a href="#rewardbox" id="rewards-button" '
            'class="fancybox"><span class="btn-bluet-blue href-style"><i '
            'class="fa fa-jpy"></i> 打赏译者</span></a>\n'
            '    </blockquote>\n'
            '\n'
            '    <div id="rewardbox">\n'
            '        <h4>打赏支持我翻译更多好文章，谢谢！</h4>\n'
            '                <p>任选一种支付方式</p>\n'
            '                <p>\n'
            '                        <img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/04/9d1537dc33c0a291a88e68a8d61b1cd2.jpg">\n'
            '            \n'
            '                            <img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/04/ac2801b765615f93574f10b0ac15990b.jpg">\n'
            '                    </p>\n'
            '    </div>\n'
            '\n'
            '    \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111293" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111293votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111293" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i>  收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/2106382253">Anne90</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/2106382253">\r\n'
            '\t\t\t<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/04/ee02ba031bee9222a2878fe9565d65a6.jpg">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            软件开发测试工程师，关注互联网/软件测试相关        </span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/2106382253" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/2106382253/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/2106382253/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 10</a> · <a title="微博主页" '
            'target="_blank" href="http://weibo.com/2106382253"><i class="fa '
            'fa-weibo"></i></a>\xa0        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://wx3.sinaimg.cn/large/63918611gy1ffytn2l5quj20dc0a0dg9.jpg'],
 'tags': 'IT技术,测试,软件测试',
 'thumb_up_num': 1,
 'title': '为什么要给软件做测试？如何测试呢？',
 'url': 'http://blog.jobbole.com/111293/',
 'url_obj_id': '10b661d4c108a57443e6c78b11a6737e'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:15 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111322/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:16 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:16 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 1234
2017-06-04 21:38:16 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:16 [elasticsearch] DEBUG: > 没有业余代码项目，但这不说明我毫无激情
2017-06-04 21:38:16 [elasticsearch] DEBUG: < {"tokens":[{"token":"没有","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"业余","start_offset":2,"end_offset":4,"type":"CN_WORD","position":1},{"token":"余","start_offset":3,"end_offset":4,"type":"CN_WORD","position":2},{"token":"代码","start_offset":4,"end_offset":6,"type":"CN_WORD","position":3},{"token":"项目","start_offset":6,"end_offset":8,"type":"CN_WORD","position":4},{"token":"这不","start_offset":10,"end_offset":12,"type":"CN_WORD","position":5},{"token":"不说","start_offset":11,"end_offset":13,"type":"CN_WORD","position":6},{"token":"说明","start_offset":12,"end_offset":14,"type":"CN_WORD","position":7},{"token":"我","start_offset":14,"end_offset":15,"type":"CN_CHAR","position":8},{"token":"毫无","start_offset":15,"end_offset":17,"type":"CN_WORD","position":9},{"token":"毫","start_offset":15,"end_offset":16,"type":"CN_WORD","position":10},{"token":"无","start_offset":16,"end_offset":17,"type":"CN_CHAR","position":11},{"token":"激情","start_offset":17,"end_offset":19,"type":"CN_WORD","position":12},{"token":"激","start_offset":17,"end_offset":18,"type":"CN_WORD","position":13},{"token":"情","start_offset":18,"end_offset":19,"type":"CN_CHAR","position":14}]}
2017-06-04 21:38:16 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:16 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 496
2017-06-04 21:38:16 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:16 [elasticsearch] DEBUG: > 职场,,程序员,职场
2017-06-04 21:38:16 [elasticsearch] DEBUG: < {"tokens":[{"token":"职场","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"程序员","start_offset":4,"end_offset":7,"type":"CN_WORD","position":1},{"token":"程序","start_offset":4,"end_offset":6,"type":"CN_WORD","position":2},{"token":"序","start_offset":5,"end_offset":6,"type":"CN_WORD","position":3},{"token":"员","start_offset":6,"end_offset":7,"type":"CN_CHAR","position":4},{"token":"职场","start_offset":8,"end_offset":10,"type":"CN_WORD","position":5}]}
2017-06-04 21:38:16 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:16 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/ad1ea502f940fda1c21a3d040c7e56cc HTTP/1.1" 200 175
2017-06-04 21:38:16 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/ad1ea502f940fda1c21a3d040c7e56cc [status:200 request:0.014s]
2017-06-04 21:38:16 [elasticsearch] DEBUG: > {"thumb_up_num": 2, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111322/", "comment_num": 6, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - 佟大冬 翻译，黄利民 校稿。未经许可，禁止转载！英文出处：Ezekiel Buchheit。欢迎加入翻译组。【伯乐在线导读】：做业余项目，可以提升技能，让自己不掉队。很多公司/团队在技术招聘中，会看候选人的代码。所以说，如果候选人有公开可查阅的代码（比如在 GitHub），是一个加分项。有些公司/招聘官认为，有激情的程序员在业余时间都沉浸于代码当中，但本文主人公 Ezekiel 并不是这种类型。\n从 Ezekiel 的公开简历信息来看，他工作经验七年多。他在 2015 年 12 月入职 Amazon（奥斯丁），本文是他写于 2016 年 11 月，在 LinkedIn 有 13795 个赞。\n\n\n在面试奥斯汀市中心一家精品 APP 公司的过程中，我就知道我与这个工作无缘了。他们想看我写的代码，然而他们也知道，我之前为公司写的代码是不能展示的。当然，这不成问题，我可以给他们展示我正在做的众多业余项目中的任何一个。\n但问题是我没有业余的代码项目，没有 GitHub 账号，也没有把下班时间花费到开源项目上面。我从未在任何最近看起来很酷的代码库中提交 Pull Request，即使很多大牛都参与其中。我也没有在 Haskel 的比赛中浪费时间。还有，我讨厌编程马拉松。\n当我说「我没有业余项目」时，他们（面试官）听到的仿佛是“我不是最好的，我不是一个充满激情的程序员，我没有花时间让自己在教育和技能方面保持领先”。他们认为我做开发，只是为了一份工作。\n从某种程度上来说，这是事实。我不是最好的程序员。我曾经遇到过一些所谓的最好的，我发现我和他们根本不同。打个比方，以前我经常跑步，并且始终能在那些坚持跑完全程的人中排到前 5-10%，但是我和那些健将的差距就如同我和倒数 1% 的人之间的差距。我对跑步这件事充满激情，每周跑 50 多英里。我促使自己变得优秀，在为自己设下的时间和生活平衡界限中脱颖而出。要想成为健将，那么我在生活上必须牺牲做其他事情的时间来跑步，但我并不愿意做出这样的牺牲。\n有一小群人另当别论。代码在他们眼中不只意味着一份工作，更是一种使命。代码是一门手艺，而他们是艺术家。他们中有成千上万个基础扎实，编程厉害的程序员，写代码的能力超过 90% 的计算机专业毕业生。但他们不是“最好的”。\n每当公司表示，他们要的是能够利用空闲时间编程的「有激情的、最好的程序员」时，我总会感到紧张。这对于团队建设来说是个短视的做法。这是把人当机器的行为。\n我已经在简历和网上简介里列出了我热爱的其他事情，包括：我在奥斯汀发起的艺术项目、托狗所、跑步、绘画和写作，我的这些爱好在公司被赏识，这对我来说很重要。如果公司能赏识我的这些爱好，他们也会赏识别人的爱好，这也充分说明了公司良好的文化建设。\n\n（网络图：Dog Playcare 托狗所，通常替主人们在白天照看汪星人）\n世界正一点一点赶上这个现实。湾区、西雅图、纽约，初创公司或大型企业最喜欢设立在这些地区，但他们只招住在当地的人。我有四个孩子，我和妻子有一个完整独立的托狗所，我活跃在本地艺术社区，所以我不可能再搬去以上任何一个其他城市。虽然一些公司逐渐意识到我不是个例——Facebook、Google 和 Amazon，他们在奥斯汀也有重要业务，关键是因为他们在其他地方招不到人——很多地方依然相信最好的程序员就是整天编程的人。他们相信最好的程序员会因为你们公司有个休息室、每周工作 80 小时、有个乒乓球台而被吸引。他们很乐意每周五加班，并且绝对没有晚上或周末计划。从来没有。\n我没有得到在奥斯汀市中心那家精品 APP 公司的工作。我没有业余（代码）项目展示给大家看。每周四晚，我会去一个生活绘画工作室，和其他艺术家花上三个小时，为我们的模特素描各种姿势。平常晚上，我做完晚饭后会和妻儿们呆上一段时间，然后我会静下来为我的第五部小说码个 2000 字（虽然它会像前四本一样躺在我的“羞耻堆”中，绝不会被其他人读到）。到了周末，我喜欢徒步旅行，我深入研究艺术。我是个充满激情的程序员，因为我是个充满激情的人。但是我没有代码给你们看。\n伯乐在线补充：\n① 原作者 Ezekiel Buchheit 后来加入 Amazon 做软件开发工程师了。\n② 关于业余项目话题，再推荐阅读：\n\n《马无夜草不肥：程序员做业余项目的重要性》\n《从哪里为业余项目挤出时间？》\n《一位程序员从业余项目被收购中所学到的》\n《为什么程序员的业余项目大多都死了？》\n《你在业余做了哪些项目？来晒晒》\n\n\r\n        \r\n        \r\n        \n    \n         2 赞\n         1 收藏\n\n                     6 评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：佟大冬\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            live and learn.        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  11 ·          \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 1, "title": "没有业余代码项目，但这不说明我毫无激情", "front_image_url": ["http://wx2.sinaimg.cn/large/7cc829d3gy1fg4c6zawi4j20dv0a078z.jpg"], "suggest": [{"weight": 10, "input": ["没有", "不说", "毫无", "激情", "代码", "这不", "说明", "项目", "业余"]}, {"weight": 7, "input": ["程序员", "程序", "职场"]}], "tags": "职场,,程序员,职场"}
2017-06-04 21:38:16 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"ad1ea502f940fda1c21a3d040c7e56cc","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:16 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 1,
 'comment_num': 6,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/TJQ">佟大冬</a> 翻译，<a '
            'href="http://www.jobbole.com/members/huanglimin">黄利民</a> '
            '校稿。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="https://www.linkedin.com/pulse/i-have-side-code-projects-show-you-ezekiel-buchheit">Ezekiel '
            'Buchheit</a>。欢迎加入<a target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p>【伯乐在线导读】：做业余项目，可以提升技能，让自己不掉队。很多公司/团队在技术招聘中，会看候选人的代码。所以说，如果候选人有公开可查阅的代码（比如在 '
            'GitHub），是一个加分项。有些公司/招聘官认为，有激情的程序员在业余时间都沉浸于代码当中，但本文主人公\xa0Ezekiel '
            '并不是这种类型。</p>\n'
            '<p>从\xa0Ezekiel 的公开简历信息来看，他工作经验七年多。他在 2015 年 12 月入职 '
            'Amazon（奥斯丁），本文是他写于 2016 年 11 月，在 LinkedIn 有 13795 个赞。</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx2.sinaimg.cn/large/7cc829d3gy1fg4c6zawi4j20dv0a078z.jpg"></p>\n'
            '<hr>\n'
            '<p>在面试奥斯汀市中心一家精品 APP '
            '公司的过程中，我就知道我与这个工作无缘了。他们想看我写的代码，然而他们也知道，我之前为公司写的代码是不能展示的。当然，这不成问题，我可以给他们展示我正在做的众多业余项目中的任何一个。</p>\n'
            '<p>但问题是我没有业余的代码项目，没有 GitHub '
            '账号，也没有把下班时间花费到开源项目上面。我从未在任何最近看起来很酷的代码库中提交 Pull '
            'Request，即使很多大牛都参与其中。我也没有在 Haskel 的比赛中浪费时间。还有，我讨厌编程马拉松。</p>\n'
            '<p>当我说「我没有业余项目」时，他们（面试官）听到的仿佛是“我不是最好的，我不是一个充满激情的程序员，我没有花时间让自己在教育和技能方面保持领先”。他们认为我做开发，只是为了一份工作。</p>\n'
            '<p>从某种程度上来说，这是事实。我不是最好的程序员。我曾经遇到过一些所谓的最好的，我发现我和他们根本不同。打个比方，以前我经常跑步，并且始终能在那些坚持跑完全程的人中排到前 '
            '5-10%，但是我和那些健将的差距就如同我和倒数 1% 的人之间的差距。我对跑步这件事充满激情，每周跑 50 '
            '多英里。我促使自己变得优秀，<span style="color: '
            '#000000">在为自己设下的时间和生活平衡界限中脱颖而出</span>。要想成为健将，那么我在生活上必须牺牲做其他事情的时间来跑步，但我并不愿意做出这样的牺牲。</p>\n'
            '<p>有一小群人另当别论。代码在他们眼中不只意味着一份工作，更是一种使命。代码是一门手艺，而他们是艺术家。他们中有成千上万个基础扎实，编程厉害的程序员，写代码的能力超过 '
            '90% 的计算机专业毕业生。但他们不是“最好的”。</p>\n'
            '<p>每当公司表示，他们要的是能够利用空闲时间编程的「有激情的、最好的程序员」时，我总会感到紧张。这对于团队建设来说是个短视的做法。这是把人当机器的行为。</p>\n'
            '<p>我已经在简历和网上简介里列出了我热爱的其他事情，包括：我在奥斯汀发起的艺术项目、托狗所、跑步、绘画和写作，我的这些爱好在公司被赏识，这对我来说很重要。如果公司能赏识我的这些爱好，他们也会赏识别人的爱好，这也充分说明了公司良好的文化建设。</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx2.sinaimg.cn/large/7cc829d3gy1fg4c6ymnmmj207j0a1dgl.jpg"></p>\n'
            '<p style="text-align: center"><em>（网络图：Dog Playcare '
            '托狗所，通常替主人们在白天照看汪星人）</em></p>\n'
            '<p>世界正一点一点赶上这个现实。湾区、西雅图、纽约，初创公司或大型企业最喜欢设立在这些地区，但他们只招住在当地的人。我有四个孩子，我和妻子有一个完整独立的托狗所，我活跃在本地艺术社区，所以我不可能再搬去以上任何一个其他城市。虽然一些公司逐渐意识到我不是个例——Facebook、Google '
            '和 '
            'Amazon，他们在奥斯汀也有重要业务，关键是因为他们在其他地方招不到人——很多地方依然相信最好的程序员就是整天编程的人。他们相信最好的程序员会因为你们公司有个休息室、每周工作 '
            '80 小时、有个乒乓球台而被吸引。他们很乐意每周五加班<span style="color: #ff0000"><span '
            'style="color: #000000">，并且绝对</span></span>没有晚上或周末计划。从来没有。</p>\n'
            '<p>我没有得到在奥斯汀市中心那家精品 APP '
            '公司的工作。我没有业余（代码）项目展示给大家看。每周四晚，我会去一个生活绘画工作室，和其他艺术家花上三个小时，为我们的模特素描各种姿势。平常晚上，我做完晚饭后会和妻儿们呆上一段时间，然后我会静下来为我的第五部小说码个 '
            '2000 '
            '字（虽然它会像前四本一样躺在我的“羞耻堆”中，绝不会被其他人读到）。到了周末，我喜欢徒步旅行，我深入研究艺术。我是个充满激情的程序员，因为我是个充满激情的人。但是我没有代码给你们看。</p>\n'
            '<h3>伯乐在线补充：</h3>\n'
            '<p>① 原作者 Ezekiel Buchheit\xa0后来加入 Amazon 做软件开发工程师了。</p>\n'
            '<p>② 关于业余项目话题，再推荐阅读：</p>\n'
            '<ul>\n'
            '<li>《<a class="meta-title" title="马无夜草不肥：程序员做业余项目的重要性" '
            'href="http://blog.jobbole.com/5903/" '
            'target="_blank">马无夜草不肥：程序员做业余项目的重要性</a>》</li>\n'
            '<li>《<a class="meta-title" title="从哪里为业余项目挤出时间？" '
            'href="http://blog.jobbole.com/59384/" '
            'target="_blank">从哪里为业余项目挤出时间？</a>》</li>\n'
            '<li>《<a class="meta-title" title="一位程序员从业余项目被收购中所学到的" '
            'href="http://blog.jobbole.com/49455/" '
            'target="_blank">一位程序员从业余项目被收购中所学到的</a>》</li>\n'
            '<li>《<a class="meta-title" title="为什么程序员的业余项目大多都死了？" '
            'href="http://blog.jobbole.com/90547/" '
            'target="_blank">为什么程序员的业余项目大多都死了？</a>》</li>\n'
            '<li>《<a href="http://group.jobbole.com/6169/" '
            'target="_blank">你在业余做了哪些项目？来晒晒</a>》</li>\n'
            '</ul>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111322" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111322votetotal">2</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111322" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 1 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i> 6 评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/TJQ">佟大冬</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/TJQ">\r\n'
            '\t\t\t<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/05/5f8b3a74725397a8f5033c9ac0afeefb.jpg">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            live and learn.        </span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/TJQ" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/tjq/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/TJQ/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 11</a> · <a '
            'title="QQ：601591123" target="_blank" href="#"><i class="fa '
            'fa-qq"></i></a>\xa0        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://wx2.sinaimg.cn/large/7cc829d3gy1fg4c6zawi4j20dv0a078z.jpg'],
 'tags': '职场,,程序员,职场',
 'thumb_up_num': 2,
 'title': '没有业余代码项目，但这不说明我毫无激情',
 'url': 'http://blog.jobbole.com/111322/',
 'url_obj_id': 'ad1ea502f940fda1c21a3d040c7e56cc'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:20 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111317/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:20 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:20 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 1066
2017-06-04 21:38:20 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2017-06-04 21:38:20 [elasticsearch] DEBUG: > 理想的创业合伙人是什么样的？
2017-06-04 21:38:20 [elasticsearch] DEBUG: < {"tokens":[{"token":"理想","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"创业","start_offset":3,"end_offset":5,"type":"CN_WORD","position":1},{"token":"创","start_offset":3,"end_offset":4,"type":"CN_WORD","position":2},{"token":"业","start_offset":4,"end_offset":5,"type":"CN_CHAR","position":3},{"token":"合伙人","start_offset":5,"end_offset":8,"type":"CN_WORD","position":4},{"token":"合伙","start_offset":5,"end_offset":7,"type":"CN_WORD","position":5},{"token":"伙","start_offset":6,"end_offset":7,"type":"CN_WORD","position":6},{"token":"人","start_offset":7,"end_offset":8,"type":"CN_CHAR","position":7},{"token":"是什么","start_offset":8,"end_offset":11,"type":"CN_WORD","position":8},{"token":"什么样","start_offset":9,"end_offset":12,"type":"CN_WORD","position":9},{"token":"什么","start_offset":9,"end_offset":11,"type":"CN_WORD","position":10},{"token":"么","start_offset":10,"end_offset":11,"type":"CN_WORD","position":11},{"token":"样","start_offset":11,"end_offset":12,"type":"CN_CHAR","position":12}]}
2017-06-04 21:38:20 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:20 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 807
2017-06-04 21:38:20 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:20 [elasticsearch] DEBUG: > 创业,创业,合伙人
2017-06-04 21:38:20 [elasticsearch] DEBUG: < {"tokens":[{"token":"创业","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"创","start_offset":0,"end_offset":1,"type":"CN_WORD","position":1},{"token":"业","start_offset":1,"end_offset":2,"type":"CN_CHAR","position":2},{"token":"创业","start_offset":3,"end_offset":5,"type":"CN_WORD","position":3},{"token":"创","start_offset":3,"end_offset":4,"type":"CN_WORD","position":4},{"token":"业","start_offset":4,"end_offset":5,"type":"CN_CHAR","position":5},{"token":"合伙人","start_offset":6,"end_offset":9,"type":"CN_WORD","position":6},{"token":"合伙","start_offset":6,"end_offset":8,"type":"CN_WORD","position":7},{"token":"伙","start_offset":7,"end_offset":8,"type":"CN_WORD","position":8},{"token":"人","start_offset":8,"end_offset":9,"type":"CN_CHAR","position":9}]}
2017-06-04 21:38:20 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:20 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/12c50f5dc9c5fdc67f6cb67ced4b3ded HTTP/1.1" 200 175
2017-06-04 21:38:20 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/12c50f5dc9c5fdc67f6cb67ced4b3ded [status:200 request:0.009s]
2017-06-04 21:38:20 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111317/", "comment_num": 0, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - Lada 翻译，郑芸 校稿。未经许可，禁止转载！英文出处：Sam Altman。欢迎加入翻译组。【伯乐在线导读】：2005 年知名程序员 Paul Graham 联合其他三人成立了 Y Combinator，YC 逐步成长为全球知名的创业孵化机构 。YC 扶持初创企业，并为其提供创业指南，其中成长出很多知名公司，包括 Dropbox、Airbnb 和 Reddit 等。Sam Altman 在 2015 年出任 YC 的 CEO。Sam 在今年写过一篇博文，分享他对理想的创业合伙人的看法。伯乐在线编译如下：\n\n（图：Sam Altman）\n很多人问我，理想的合伙人是什么样。现在我有了答案：Greg Brockman 。\n我知道的每一个成功创业公司背后，都至少有一个人提供了开启创业的强大意愿。在 YC 对创业公司做建议时，我就这一点进行了很多思考。但我未曾看到身边其他人推动了一个创业公司的形成，直到 OpenAI 的成立。\n如果没有 Greg，也就没有 OpenAI。他快速且全力投入做事。早期我组织了一次团队晚餐，来谈论这样一个公司可能会是什么样的，之后我驱车送他回家。在返回旧金山的前一半车程里，Greg 问了我一些问题，接着他就宣布了他的加入，并且在后一半车程里开始策划后勤。\n从那时起，他全情投入任何事情，平均约每 5 分钟回应一份邮件。 Elon 和我白天都忙于工作，但是 Greg 在信息不完整和连接高延迟的情况下，保障所有事务向前推进着。\n他招募了初创团队的成员。Greg 是个一流的招聘者。他策划面试的每个细节，着重研究候选人的背景，发邮件前深思熟虑、持续跟踪等等。我现在更加坚定地相信，创始团队中必定要有一个人是很优秀的招聘者。\n他对反馈表现出极为开放的态度。事无大小，他总是愿意倾听，从不觉得受到冒犯，并且快速处理。有一次我暗示他没有为公司传达一个足够大胆的愿景。从那以后，每次我听见他谈论了，这都是对我们如何在要事上成功的一个完美的标准解释。即使在反传统的想法上，例如我建议他和 Ilya 共同领导公司时，他总是虚心开明，体贴周到。\n\n（图：Greg Brockman，OpenAI 的 CTO ）\nGreg 也扮演“非技术联合创始人”的角色。由于多数认识他的人都会说“ Greg 是我所知的最高效的工程师”，所以“非技术联合创始人”是个误称。但在一开始，他承担了所有非技术角色，定义公司文化、策划招人、组织外出、允许大家在他的公寓办公、采购订单、饭后清理等等。在小型创业团队里，有人能扮演好这样的角色是很重要的，因为多数人搪塞这些事务。\n假如没有人在无论多难的情况下，致力于为所有问题找到解决办法，最终在你仍然疲惫时，遭遇一个大问题会让你丧命。创业团队需要一个乐观主义的首领，尽管困难重重，也能团结所有人前进。对这个首领而言，却总是很难，因为他们在最困难的时刻，却无人可依赖。\n创业团队必然需要极好的技术天才，但也得有 Greg 这样的人。如果有这样一个人，那你就中了头奖。\n\r\n        \r\n        \r\n        \n    \n         1 赞\n          收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：Lada\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            希望了解更多互联网、创业管理、创新思维、前沿技术和设计的知识。渐进明细，持续改进。        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  11 ·            \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 0, "title": "理想的创业合伙人是什么样的？", "front_image_url": ["http://wx1.sinaimg.cn/mw690/7cc829d3gy1fg6x5e9wl4j20rs0ijwfy.jpg"], "suggest": [{"weight": 10, "input": ["合伙", "什么样", "合伙人", "创业", "理想", "什么", "是什么"]}, {"weight": 7, "input": ["创业", "合伙人", "合伙"]}], "tags": "创业,创业,合伙人"}
2017-06-04 21:38:20 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"12c50f5dc9c5fdc67f6cb67ced4b3ded","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:20 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 0,
 'comment_num': 0,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/young605867996">Lada</a> '
            '翻译，<a href="http://www.jobbole.com/members/paradise_FD">郑芸</a> '
            '校稿。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="http://blog.samaltman.com/greg">Sam Altman</a>。欢迎加入<a '
            'target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p>【伯乐在线导读】：2005 '
            '年知名程序员 Paul Graham 联合其他三人成立了 Y Combinator，YC 逐步成长为全球知名的创业孵化机构 。YC '
            '扶持初创企业，并为其提供创业指南，其中成长出很多知名公司，包括 Dropbox、Airbnb 和 Reddit 等。Sam '
            'Altman 在 2015 年出任 YC 的 CEO。Sam '
            '在今年写过一篇博文，分享他对理想的创业合伙人的看法。伯乐在线编译如下：</p>\n'
            '<p><img class="aligncenter" '
            'src="http://wx1.sinaimg.cn/mw690/7cc829d3gy1fg6x5e9wl4j20rs0ijwfy.jpg" '
            'width="480" height="320"></p>\n'
            '<p style="text-align: center;">（图：Sam Altman）</p>\n'
            '<p>很多人问我，理想的合伙人是什么样。现在我有了答案：Greg Brockman 。</p>\n'
            '<p>我知道的每一个成功创业公司背后，都至少有一个人提供了开启创业的强大意愿。在 YC '
            '对创业公司做建议时，我就这一点进行了很多思考。但我未曾看到身边其他人推动了一个创业公司的形成，直到 OpenAI '
            '的成立。</p>\n'
            '<p>如果没有 Greg，也就没有 '
            'OpenAI。他快速且全力投入做事。早期我组织了一次团队晚餐，来谈论这样一个公司可能会是什么样的，之后我驱车送他回家。在返回旧金山的前一半车程里，Greg '
            '问了我一些问题，接着他就宣布了他的加入，并且在后一半车程里开始策划后勤。</p>\n'
            '<p>从那时起，他全情投入任何事情，平均约每 5 分钟回应一份邮件。 Elon 和我白天都忙于工作，但是 Greg '
            '在信息不完整和连接高延迟的情况下，保障所有事务向前推进着。</p>\n'
            '<p>他招募了初创团队的成员。Greg '
            '是个一流的招聘者。他策划面试的每个细节，着重研究候选人的背景，发邮件前深思熟虑、持续跟踪等等。我现在更加坚定地相信，创始团队中必定要有一个人是很优秀的招聘者。</p>\n'
            '<p>他对反馈表现出极为开放的态度。事无大小，他总是愿意倾听，从不觉得受到冒犯，并且快速处理。有一次我暗示他没有为公司传达一个足够大胆的愿景。从那以后，每次我听见他谈论了，这都是对我们如何在要事上成功的一个完美的标准解释。即使在反传统的想法上，例如我建议他和 '
            'Ilya 共同领导公司时，他总是虚心开明，体贴周到。</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx2.sinaimg.cn/large/7cc829d3gy1fg6x5ey8owj20dc07idfx.jpg"></p>\n'
            '<p style="text-align: center;">（图：Greg Brockman，OpenAI 的 CTO '
            '）</p>\n'
            '<p>Greg 也扮演“非技术联合创始人”的角色。由于多数认识他的人都会说“ Greg '
            '是我所知的最高效的工程师”，所以“非技术联合创始人”是个误称。但在一开始，他承担了所有非技术角色，定义公司文化、策划招人、组织外出、允许大家在他的公寓办公、采购订单、饭后清理等等。在小型创业团队里，有人能扮演好这样的角色是很重要的，因为多数人搪塞这些事务。</p>\n'
            '<p>假如没有人在无论多难的情况下，致力于为所有问题找到解决办法，最终在你仍然疲惫时，遭遇一个大问题会让你丧命。创业团队需要一个乐观主义的首领，尽管困难重重，也能团结所有人前进。对这个首领而言，却总是很难，因为他们在最困难的时刻，却无人可依赖。</p>\n'
            '<p>创业团队必然需要极好的技术天才，但也得有 Greg 这样的人。如果有这样一个人，那你就中了头奖。</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111317" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111317votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111317" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i>  收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/young605867996">Lada</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/young605867996">\r\n'
            '\t\t\t<img '
            'src="http://q.qlogo.cn/qqapp/208656/B77EEB9D520DE9C7BD42E89DC348FEC7/100">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            希望了解更多互联网、创业管理、创新思维、前沿技术和设计的知识。渐进明细，持续改进。        '
            '</span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a '
            'href="http://www.jobbole.com/members/young605867996" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a '
            'href="http://blog.jobbole.com/author/young605867996/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/young605867996/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 11</a> · <a title="我的网站" '
            'target="_blank" href="http://littlejanery.blog.163.com/"><i '
            'class="fa fa-link"></i></a>\xa0<a title="QQ：605867996" '
            'target="_blank" href="#"><i class="fa fa-qq"></i></a>\xa0<a '
            'title="个人微信：yao605867996" target="_blank" href="#"><i class="fa '
            'fa-weixin"></i></a>\xa0        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://wx1.sinaimg.cn/mw690/7cc829d3gy1fg6x5e9wl4j20rs0ijwfy.jpg'],
 'tags': '创业,创业,合伙人',
 'thumb_up_num': 1,
 'title': '理想的创业合伙人是什么样的？',
 'url': 'http://blog.jobbole.com/111317/',
 'url_obj_id': '12c50f5dc9c5fdc67f6cb67ced4b3ded'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:24 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111187/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:24 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:24 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 658
2017-06-04 21:38:24 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:24 [elasticsearch] DEBUG: > 大白话解释 Git 和 GitHub
2017-06-04 21:38:24 [elasticsearch] DEBUG: < {"tokens":[{"token":"大白话","start_offset":0,"end_offset":3,"type":"CN_WORD","position":0},{"token":"大白","start_offset":0,"end_offset":2,"type":"CN_WORD","position":1},{"token":"白话","start_offset":1,"end_offset":3,"type":"CN_WORD","position":2},{"token":"解释","start_offset":3,"end_offset":5,"type":"CN_WORD","position":3},{"token":"释","start_offset":4,"end_offset":5,"type":"CN_WORD","position":4},{"token":"git","start_offset":6,"end_offset":9,"type":"ENGLISH","position":5},{"token":"和","start_offset":10,"end_offset":11,"type":"CN_CHAR","position":6},{"token":"github","start_offset":12,"end_offset":18,"type":"ENGLISH","position":7}]}
2017-06-04 21:38:24 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:24 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 254
2017-06-04 21:38:24 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:24 [elasticsearch] DEBUG: > IT技术,,Git,Github
2017-06-04 21:38:24 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"git","start_offset":6,"end_offset":9,"type":"ENGLISH","position":1},{"token":"github","start_offset":10,"end_offset":16,"type":"ENGLISH","position":2}]}
2017-06-04 21:38:24 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:24 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/465760c151650c2c990cfa9661af173e HTTP/1.1" 200 175
2017-06-04 21:38:24 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/465760c151650c2c990cfa9661af173e [status:200 request:0.017s]
2017-06-04 21:38:24 [elasticsearch] DEBUG: > {"thumb_up_num": 3, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111187/", "comment_num": 1, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - 听风 翻译，艾凌风 校稿。未经许可，禁止转载！英文出处：Red Radger。欢迎加入翻译组。本文旨在使用通俗易懂的文字，讲解版本控制背后的理论，以便你能对程序员们如何工作有个全局概念。本文不涉及代码，不用下载啥东西，循序渐进，不关注繁复细节，只有文字和一些不怎么漂亮的手绘涂鸦。\n\n写本文的动机\n学习任何东西都能在网络上找到如此之多的指导教程，这一直令我惊讶不已。Git 和 Github 也不例外，网络上有大量优秀资源，这些资源要么只对其中一个，要么兼顾二者引导你开始学习。以下是我特别喜欢的一些资源：\n\nTreehouse – 写给设计师的 Git 入门介绍\nRoger Dudler – Git 简易教程\nPluralsight – Github：初学者指南\n\n然而，我发现这些教程总是跳过许多理论知识，直接解释如何通过命令行或 Github 桌面应用程序使用 Git 。坦白说，如果你只是想知道你的开发团队谈论的到底是什么，这些指导教程也绰绰有余了。如上所述，我的目标是对版本控制的整体概念进行简明扼要地讲解，同时希望能让你了解到版本控制是如此酷。\n让我们从最基础的开始：版本控制\n\nImage credit: weebletheringskite, WordPress\n版本控制（Version control）:学习它，爱上它，享受它。顾名思义，版本控制系统是任何能让你了解到一个文件的历史，以及它的发展过程的系统。之前作为平面设计师时，我常常会遇到这种文件：\n\n看起来眼熟？尽管上述系统不是一个好用的系统 ，但它确实是一个版本控制系统。更复杂点的例子就像，Google 文档的 “修订历史”或  Photoshop 的“历史”工具。\n 开始 Git\nGit 是一种专为处理文本文件而设计的版本控制系统。因为，归根到底，这就是代码的本质：一堆堆以某种方式联合在一起的文本文件。Git 是一个可安装应用，它允许你对你自己所做的更改进行注释，用以创建易于导航的系统历史。\n（附： “Git”  也是工程师取的名字，我们对市场部同仁感到抱歉）\n那么， Git 做了什么，是简单地保存文件所做不到的呢？从根本上讲，文件保存就是一个简化的版本控制系统，但坦率地说，它并不是一个好用的系统，因为它只能前进。当然，你也许会争论“撤消”按钮可以让你的文件回滚到以前的状态。但我们都清楚，“撤消”按钮有其局限性，最明显示的是，在关闭文件时，文件的过去也随之丢失。\n另外，文件保存是非常个人化的。它不能够显示整个系统的历史，只能够显示该文件的。针对这一点，你可能会想，“嗯，我不是一个工程师，我不需要为系统烦恼”。我愿意花些时间来解释一下，很多事情你认为不是“系统”，而实际上它们就是。\n以  Sally为例，她是一个正在写下一个大冒险奇幻小说系列的作家。Sally 已经写完该系列小说中的第一本，并把它传给了她的编辑。此外，由于她才华出众，在等待编辑的反馈的同时，她还写了第二本书的前三章。每本书都建立了独立的 World 文件。\n\n在某个快乐的日子，Sally  等来了她的编辑关于第一本书的反馈。他担心年轻的读者不想读一系列专写兽人故事的书，希望她在这个故事中引入一些精灵。关于这点，Sally  叹了口气，但很快意识到，她的精灵新角色将带来始料未及的冲突和曲折的情节。然后，她做了以下事情：\n\n在第一本书中加入新角色，并修改故事情节。\n完成第一本书之后，对第二本书的故事情节，进行必要的修改。\n所有的这些修改，导致她需要引入某个地理位置到第一本书中，而不是第二本书。\n重新编辑第一本书，让它包含新的地理位置。\n\n终于，她推开了她的键盘，确信已经把精灵融入到了她的奇幻世界之中。\n\n你瞧，Sally 实际上在处理一个系统。她的两本书互相影响。角色、地理位置和故事情节在两本书中流动交织。然而，遗憾的是，一个月后，她的文件系统里什么都没有了。Word 的 “文档历史”工具，或她曾经粘贴在显示屏边缘用于记录修改过程的便签纸，将把所有的变化过程都揉合在一起。\n\n这正是Git 大放光芒之处。如果 Sally 一直结合 Git 使用Word，她就能对所有这些相关的变化做一个关于“将精灵引入到系列”的简洁小结。她可以看到所有穿插在页、章节、文件，以及每本书中的修改记录，让她真正地了解引入精灵对她的奇幻系列产生的影响。这个“简洁的小结”就是我们在 Git 领域中所讲的提交（commit）。\n回顾一下。 Git 是一个软件，它允许你通过提交对一个系统（或一组）文件的历史进行注释。这些提交便是在给定时间点对系统做出的差异“快照”。\n那么，如果我是Sally，我的提交历史看起来是这样子的：\n\nGithub\n到目前为止，一切都还不错。但是，如果 Sally 同时用到两台电脑工作，将会发生什么呢？问得好。这时，就该用到 Github了。注意，不要和 Git 混淆了。Github 获取 Git 中的提交历史，并将其存储在互联网上，因此你可以从任一一台电脑访问它。你在本机（例如：你当前正在使用的电脑）推送（pushing）提交到 Github，然后，从另一台新的或不同的电脑上拉取（pulling）这些提交。\n\n让我们假设上图为 Sally 的工作流程。她在家里的台式电脑（左边，橘黄色的）上开启她一天的工作。接下来，她完成了几个章节的写作，又做了一些编辑工作，等等。整个过程中，她对工作总共进行了三次策略性的“快照”（Git 提交）。\n下午，Sally 常常喜欢带着她的笔记本电脑（上图中的右侧，蓝色的）去咖啡馆写作。今天也不例外。因此，在关闭家里的台式电脑之前，她需要确认当前的Git 提交历史已推送（push）到了在线Github。一旦被上传到 Github，这些提交记录就被存储在远程仓库（remote repository）中。\n我们先来分析一下几个计算机术语：远程（remote）仅仅意味着联网（与“本地”的意思相反，和之前我们理解到的意思一样的，代表当前正在使用的电脑）。而仓库（repository，经常简写为“repo”），就是一个具备 Git 超级权限的文件夹。\n因此，Github 就是让你把工作（通过Git提交进行注解）存储在了一个指定的在线文件夹（repo）。明白了吧？简单。\n午餐之后，在当地的一家咖啡馆中，Sally 拿出了她的笔记本电脑。很明显，她想接着家里的工作进度继续。因些，她从 Github 仓库上获取到最新进度的工作。“从 Github 上获取她的工作”，这一过程就叫拉取（pulling）。再看一下上面这幅图片，你将看到 Sally 拉取了之前她在家时进行的三个提交。\n现在，在她的笔记本电脑上，Sally 有整个系统（包含她的幻想系列的所有文本文件）的最新的完整副本，并能够基于上次的进度，继续工作。她写了更多的章节，对工作进行了两次以上的策略“快照”（提交）。最后，Sally 把这些提交推送（push）到 Github 上，结束了这一天的工作。这样第二天上午的时候，在家里的台式电脑上就可以取得这些最新进度的工作。\n协同工作\n好吧，这一切都能说得通。但是， Sally再如何酷，整个项目也只有她一人而已。工程团队要如何确保他们的工作不会重叠？\n简而言之，创建分支。将你的 Git 提交历史想像成一棵树。树的主干就是我们谈到的主分支。为了让团队成员避免彼此牵扯，他们在独立于他人的隔离区（在一个功能分支）进行工作，然而最终，每个人的工作成果都会被提交到主代码库 （主分支）。\n现在，回到 Sally 的例子。她加入了奇幻作家协会，在这里每个人都与他人合作完成这本书——《奇幻系列生物辞典》。这本辞典更像一本教材，由多个作者共同完成：Sally、Tom 和 Adam。\n让我们来看看《奇幻系列生物辞典》项目的在线 Github 仓库，现在的情况是：\n\n如上图所示，树的类比完全适用于奇幻作家协会在这个项目上的合作情况，仓库历史沿主分支向上移动。常规工作流始于每个作者为完成一个工作任务（例如编写章节内容，或排版章节）而在主分支上创建分支。只有当更改得到其他合作作家的批准时，分支才会被合并到主分支上（请谨记，主分支上的内容，才是最终要发布的内容）。\n当一个分支的内容合并（merged）到主分支时，意味着该分支的内容会覆盖主分支上的。因此，现有内容的任何更改都将会替代之前的。当然，任何新添加的内容也会添加到主分支。实际上，当分支合并到主分支时，该分支的提交历史被添加到主分支提交历史的顶部。\n然而，你可能正在思考：人们在本机的工作和之后才推送到 Github 的工作变更是如何连接到一起的呢？\n关于这个问题，重点在于：你在 Github 的远程仓库是你本机工作项目的一个镜像。这意味着，你在自己的电脑里存储了该项目（例如：一个已设置可进行 Git 提交的文件夹）的本地 Git 仓库。在这个本地的 Git 仓库（再次，这是一个特定术语，指你的电脑里某个启用了 Git 功能的文件夹）中，你拥有与该项目相关的所有文件，在本文的例子中，即《奇幻系列生物辞典》。\n它的工作原理很像 Dropbox ：你在不同的设备（你的家庭电脑、办公室电脑，等等）上创建本地文件夹，进行工作并更新这些文件。最后，这些操作被同步到网络上。然而，我们知道，Git/Github 工作流还包含了一些额外的步骤。首先，你必须有意识地对某一时刻的工作执行“快照”（即执行一次提交）。然后，你必须特意地推送这些提交（push） 到 Github。只有这样，你的工作才被同步到网络上的位置（Github 版本库）。\n既然如此，为什么不自动化该工作流呢？为什么不让它像 Dropbox一样，当你更新本地文件时，同时自动更新 Github 上的文件？有很多理由让我们不这么做。最主要的理由是——bugs 。同出版界一样，软件工程中也不是所有写过的东西都要保留。有时，你希望实验一下你的想法，如果实验失败，你希望有一种简单的方式能让工作快速回滚到之前的正确状态上。这也是为什么我们提倡这个经验法则，即在你试图用不同的方法编辑或实验之前，先对当前你希望保留的修改进行提交。频繁地提交小块工作有益无害，事实上，许多工程师为自己能做到这一点而感到自豪。\n现在，回到《奇幻系列生物辞典》。由于  Sally 对兽族有较深的了解，她被挑选为写兽族章节。但她不想在没有经过其它合作人员允许的情况下去修改这本书，于是，她创建了一个本地分支，并在该分支上进行写作和提交。然后，她将本地分支推送到 Github。像往常一样，Github 的远程仓库是本地库的一个镜像，最新进展显示 Sally 已创建了一个包含部分提交的分支（如下图所示）。\n\n随着她对本章节的持续写作，Sally 进行了更多的提交，并将它们推送到 Github 的在线镜像分支。终于，她准备请 Tom 和 Adam 一起对她的工作进行评审。因此，她在 Github 上发布了一个 Pull Request（发布请求），这是一个 Github 功能，允许她解释该分支相对于主分支做了哪些修改。Github 还提供了一个简易平台，合作人员可以在该平台上针对分支的修改内容进行讨论，并要求 Sally 在分支合并到主分支之前对一些有异议的内容进行修改。\n\n在对部分内容请求修改后，如上图所示，Tom 和 Adam 对 Sally 的分支内容很满意，并决定将她的工作成果合并到 Github 的主分支上。此时，他们所要做的就是将 Sally 之前独立提交的内容，添加到主分支的提交历史顶部：\n\n此时，Sally可以切换（或“check out”）到本地计算机上的主分支，并将先前在功能分支（兽人章节分支）中的独立提交拉取下来。现在她又要在新的主分支上重新开始了：以该主分支为基础为她的下一步工作创建一个新的本地分支，帮助汤姆编辑有关妖精的章节。因此，这一过程又将重复:\n\n创建本地分支\n在本地分支上编辑修改，然后提交\n推送提交（Push）到 Github\n 创建发布请求（Pull Request），说明该分支包含了哪些更改\n合并（Merge）分支内容到主分支\n将主分支上的最新提交拉取（pull）到本地\n重复上述步骤\n\n正如你所看到的，这是一个非常流畅的工作流，完美地结合了独立工作与团队协作。你本机的 Git 提供了一个绝妙的方法，即通过由你自己控制和策划的丰富的历史提交，来创建你工作的各种版本。Github 是一个非常棒的在线版本控制工具，不仅存储和提供了清晰的可视化历史记录，而且还能进行协同工作和质量控制。\n总而言之，我希望我已经说服你去尝试使用 Git  和 Github 进行任何项目。没有理由只有工程师能从这个很棒的工具中受益。毕竟，我们也想看到更多有关兽人的故事。\n\n致谢：\n非常感谢 Common Craft 对本文的涂鸦和解释风格的启发。还要感谢这个视频《 saving me from the horror of having to explain Twitter to my mum 》。\n本文涉及的术语\n\nVersion Control（版本控制）: 任何一个能够让你了解文件的历史，以及该文件的发展进程的系统。\nGit：一个版本控制程序，通过对变更进行注释，以创建一个易于遍历的系统历史。\nCommit（提交）：在指定时间点对系统差异进行的注释 “快照”。\nLocal（本地）：指任意时刻工作时正在使用的电脑。\nRemote（远程）： 指某个联网的位置。\nRepository (仓库，简称 repo)：配置了Git超级权限的特定文件夹，包含了你的项目或系统相关的所有文件。\nGithub：获取本地提交历史记录，并进行远程存储，以便你可以从任何计算机访问这些记录。\nPushing（推送）：取得本地Git提交（以及相关的所有工作），然后将其上传到在线Github。\nPulling（拉取）：从在线的Github上获取最新的提交记录，然后合并到本地电脑上。\nMaster (branch)：主分支，提交历史 “树”的 “树干”，包含所有已审核的内容/代码。\nFeature branch（功能分支/特性分支）：一个基于主分支的独立的位置，在再次并入到主分支之前，你可以在这里安全地写工作中的新任务。\nPull Request（发布请求）：一个 Github 工具，允许用户轻松地查看某功能分支的更改 （the difference或 “diff”），同时允许用户在该分支合并到主分支之前对其进行讨论和调整。\nMerging（合并）：该操作指获取功能分支的提交，加入到主分支提交历史的顶部。\nChecking out（切换）：该操作指从一个分支切换到另一个分支。\n\n\r\n        \r\n        \r\n        \n    \n         3 赞\n         21 收藏\n\n                     1 评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：听风\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            简介还没来得及写 :）        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  16        \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 21, "title": "大白话解释 Git 和 GitHub", "front_image_url": ["http://wx3.sinaimg.cn/mw690/7cc829d3gy1ffofj32av3j20ku0bqdgp.jpg"], "suggest": [{"weight": 10, "input": ["github", "git", "大白话", "大白", "解释", "白话"]}, {"weight": 7, "input": ["github", "技术", "git"]}], "tags": "IT技术,,Git,Github"}
2017-06-04 21:38:24 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"465760c151650c2c990cfa9661af173e","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:24 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 21,
 'comment_num': 1,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/q4000052677">听风</a> 翻译，<a '
            'href="http://www.jobbole.com/members/hanxiaomax">艾凌风</a> '
            '校稿。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="https://red-badger.com/blog/2016/11/29/gitgithub-in-plain-english">Red '
            'Radger</a>。欢迎加入<a target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p>本文旨在使用通俗易懂的文字，讲解版本控制背后的理论，以便你能对程序员们如何工作有个全局概念。本文不涉及代码，不用下载啥东西，循序渐进，不关注繁复细节，只有文字和一些不怎么漂亮的手绘涂鸦。</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx2.sinaimg.cn/large/7cc829d3gy1ffofj1eoiyg20pk0eedgn.gif" '
            'width="600" height="338"></p>\n'
            '<h2>写本文的动机</h2>\n'
            '<p>学习任何东西都能在网络上找到如此之多的指导教程，这一直令我惊讶不已。Git 和 Github '
            '也不例外，网络上有大量优秀资源，这些资源要么只对其中一个，要么兼顾二者引导你开始学习。以下是我特别喜欢的一些资源：</p>\n'
            '<ul>\n'
            '<li><a '
            'href="http://blog.teamtreehouse.com/git-for-designers-part-1" '
            'target="_blank">Treehouse – 写给设计师的 Git 入门介绍</a></li>\n'
            '<li><a href="http://rogerdudler.github.io/git-guide/" '
            'target="_blank">Roger Dudler – Git 简易教程</a></li>\n'
            '<li><a '
            'href="https://www.pluralsight.com/blog/software-development/github-tutorial" '
            'target="_blank">Pluralsight – Github：初学者指南</a></li>\n'
            '</ul>\n'
            '<p>然而，我发现这些教程总是跳过许多理论知识，直接解释如何通过命令行或 Github 桌面应用程序使用 Git '
            '。坦白说，如果你只是想知道你的开发团队谈论的到底是什么，这些指导教程也绰绰有余了。如上所述，我的目标是对版本控制的整体概念进行简明扼要地讲解，同时希望能让你了解到版本控制是如此酷。</p>\n'
            '<h2>让我们从最基础的开始：版本控制</h2>\n'
            '<p><em><img class="alignnone aligncenter" '
            'src="http://wx3.sinaimg.cn/mw690/7cc829d3gy1ffofj1wi8wj20d406mq3o.jpg" '
            'width="472" height="238"></em></p>\n'
            '<p style="text-align: center;"><em><span style="color: '
            '#808080;">Image credit: weebletheringskite, '
            'WordPress</span></em></p>\n'
            '<p>版本控制（Version '
            'control）:学习它，爱上它，享受它。顾名思义，<strong>版本控制系统是任何能让你了解到一个文件的历史，以及它的发展过程的系统。</strong>之前作为平面设计师时，我常常会遇到这种文件：</p>\n'
            '<p><img class="alignnone" '
            'src="http://wx1.sinaimg.cn/mw690/7cc829d3gy1ffofj2t62hj20b406nwfj.jpg" '
            'width="400" height="239"></p>\n'
            '<p>看起来眼熟？尽管上述系统不是一个好用的系统 ，但它确实是一个版本控制系统。更复杂点的例子就像，Google 文档的 '
            '“修订历史”或\xa0 Photoshop 的“历史”工具。</p>\n'
            '<h2>\xa0开始 Git</h2>\n'
            '<p><strong>Git '
            '</strong><strong>是一种专为处理文本文件而设计的版本控制系统。</strong>因为，归根到底，这就是代码的本质：一堆堆以某种方式联合在一起的文本文件。Git '
            '是一个可安装应用，它允许你对你自己所做的更改进行注释，用以创建易于导航的系统历史。</p>\n'
            '<p>（附： “Git” \xa0也是工程师取的名字，我们对市场部同仁感到抱歉）</p>\n'
            '<p><strong>那么，</strong><strong> Git '
            '</strong><strong>做了什么，是简单地保存文件所做不到的呢？</strong>从根本上讲，文件保存就是一个简化的版本控制系统，但坦率地说，它并不是一个好用的系统，因为它只能前进。当然，你也许会争论“撤消”按钮可以让你的文件回滚到以前的状态。但我们都清楚，“撤消”按钮有其局限性，最明显示的是，在关闭文件时，文件的过去也随之丢失。</p>\n'
            '<p>另外，文件保存是非常个人化的。它不能够显示整个系统的历史，只能够显示该文件的。针对这一点，你可能会想，“嗯，我不是一个工程师，我不需要为系统烦恼”。我愿意花些时间来解释一下，很多事情你认为不是“系统”，而实际上它们就是。</p>\n'
            '<p><strong>以\xa0 Sally为例，她是一个正在写下一个大冒险奇幻小说系列的作家。</strong>Sally '
            '已经写完该系列小说中的第一本，并把它传给了她的编辑。此外，由于她才华出众，在等待编辑的反馈的同时，她还写了第二本书的前三章。每本书都建立了独立的 '
            'World 文件。</p>\n'
            '<p><img class="alignnone" '
            'src="http://wx3.sinaimg.cn/mw690/7cc829d3gy1ffofj32av3j20ku0bqdgp.jpg" '
            'width="690" height="388"></p>\n'
            '<p>在某个快乐的日子，Sally\xa0 '
            '等来了她的编辑关于第一本书的反馈。他担心年轻的读者不想读一系列专写兽人故事的书，希望她在这个故事中引入一些精灵。关于这点，Sally\xa0 '
            '叹了口气，但很快意识到，她的精灵新角色将带来始料未及的冲突和曲折的情节。然后，她做了以下事情：</p>\n'
            '<ul>\n'
            '<li>在第一本书中加入新角色，并修改故事情节。</li>\n'
            '<li>完成第一本书之后，对第二本书的故事情节，进行必要的修改。</li>\n'
            '<li>所有的这些修改，导致她需要引入某个地理位置到第一本书中，而不是第二本书。</li>\n'
            '<li>重新编辑第一本书，让它包含新的地理位置。</li>\n'
            '</ul>\n'
            '<p>终于，她推开了她的键盘，确信已经把精灵融入到了她的奇幻世界之中。</p>\n'
            '<p><img class="alignnone" '
            'src="http://wx3.sinaimg.cn/mw690/7cc829d3gy1ffofj3zzlvj20ku0ixabq.jpg" '
            'width="690" height="627"></p>\n'
            '<p>你瞧，Sally '
            '实际上在处理一个系统。她的两本书互相影响。角色、地理位置和故事情节在两本书中流动交织。然而，遗憾的是，一个月后，她的文件系统里什么都没有了。Word '
            '的 “文档历史”工具，或她曾经粘贴在显示屏边缘用于记录修改过程的便签纸，将把所有的变化过程都揉合在一起。</p>\n'
            '<p><img class="alignnone" '
            'src="http://wx3.sinaimg.cn/mw690/7cc829d3gy1ffofj4dj6vj20ku0hidhf.jpg" '
            'width="690" height="580"></p>\n'
            '<p>这正是Git 大放光芒之处。如果 Sally 一直结合 Git '
            '使用Word，她就能对所有这些相关的变化做一个关于“将精灵引入到系列”的简洁小结。她可以看到所有穿插在页、章节、文件，以及每本书中的修改记录，让她真正地了解引入精灵对她的奇幻系列产生的影响。这个“简洁的小结”就是我们在 '
            'Git '
            '领域中所讲的<strong>提交（</strong><strong>commit</strong><strong>）</strong>。</p>\n'
            '<p><strong>回顾一下</strong>。 Git '
            '是一个软件，它允许你通过提交对一个系统（或一组）文件的历史进行注释。这些提交便是在给定时间点对系统做出的差异“快照”。</p>\n'
            '<p>那么，如果我是Sally，我的<strong>提交历史</strong>看起来是这样子的：</p>\n'
            '<h2><strong><a '
            'href="http://jbcdn2.b0.upaiyun.com/2016/12/f1727ddec3c0dada075793786d81decc.jpg"><img '
            'id="pic" class="" '
            'src="http://wx3.sinaimg.cn/large/7cc829d3gy1ffofj4vmyqj20ku0fzdhc.jpg"></a><br>\n'
            'Github</strong></h2>\n'
            '<p>到目前为止，一切都还不错。但是，<strong>如果 Sally '
            '同时用到两台电脑工作，将会发生什么呢？</strong>问得好。这时，就该用到 Github了。注意，不要和 Git '
            '混淆了。Github 获取 Git '
            '中的提交历史，并将其存储在互联网上，因此你可以从任一一台电脑访问它。你在本机（例如：你当前正在使用的电脑）<strong>推送（</strong><strong>pushing</strong><strong>）</strong>提交到 '
            'Github，然后，从另一台新的或不同的电脑上<strong>拉取（</strong><strong>pulling</strong><strong>）</strong>这些提交。</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx4.sinaimg.cn/large/7cc829d3gy1ffofj5of16j20ku0cd75j.jpg"></p>\n'
            '<p>让我们假设上图为 Sally '
            '的工作流程。她在家里的台式电脑（左边，橘黄色的）上开启她一天的工作。接下来，她完成了几个章节的写作，又做了一些编辑工作，等等。整个过程中，她对工作总共进行了三次策略性的“快照”（Git '
            '提交）。</p>\n'
            '<p>下午，Sally '
            '常常喜欢带着她的笔记本电脑（上图中的右侧，蓝色的）去咖啡馆写作。今天也不例外。因此，在关闭家里的台式电脑之前，她需要确认当前的Git '
            '提交历史已<strong>推送（</strong><strong>push</strong><strong>）</strong>到了在线Github。一旦被上传到 '
            'Github，这些提交记录就被存储在<strong>远程仓库（</strong><strong>remote '
            'repository</strong><strong>）</strong>中。</p>\n'
            '<p>我们先来分析一下几个计算机术语：<strong>远程（</strong><strong>remote）</strong>仅仅意味着联网（与“本地”的意思相反，和之前我们理解到的意思一样的，代表当前正在使用的电脑）。而<strong>仓库（</strong><strong>repository，经常简写为“repo”</strong>），就是一个具备 '
            'Git 超级权限的文件夹。</p>\n'
            '<p>因此，<strong>Github '
            '就是让你把工作（通过Git提交进行注解）存储在了一个指定的在线文件夹（repo）</strong>。明白了吧？简单。</p>\n'
            '<p>午餐之后，在当地的一家咖啡馆中，Sally 拿出了她的笔记本电脑。很明显，她想接着家里的工作进度继续。因些，她从 '
            'Github 仓库上获取到最新进度的工作。“从 Github '
            '上获取她的工作”，这一过程就叫<strong>拉取（</strong><strong>pulling</strong><strong>）</strong>。再看一下上面这幅图片，你将看到 '
            'Sally 拉取了之前她在家时进行的三个提交。</p>\n'
            '<p>现在，在她的笔记本电脑上，Sally '
            '有整个系统（包含她的幻想系列的所有文本文件）的最新的完整副本，并能够基于上次的进度，继续工作。她写了更多的章节，对工作进行了两次以上的策略“快照”（提交）。最后，Sally '
            '把这些提交<strong>推送</strong>（<strong>push</strong>）到 Github '
            '上，结束了这一天的工作。这样第二天上午的时候，在家里的台式电脑上就可以取得这些最新进度的工作。</p>\n'
            '<h2>协同工作</h2>\n'
            '<p>好吧，这一切都能说得通。但是， '
            'Sally再如何酷，整个项目也只有她一人而已。<strong>工程团队要如何确保他们的工作不会重叠？</strong></p>\n'
            '<p>简而言之，创建分支。将你的 Git '
            '提交历史想像成一棵树。树的主干就是我们谈到的主分支。为了让团队成员避免彼此牵扯，他们在独立于他人的隔离区（在一个功能分支）进行工作，然而最终，每个人的工作成果都会被提交到主代码库 '
            '（主分支）。</p>\n'
            '<p>现在，回到 Sally '
            '的例子。她加入了奇幻作家协会，在这里每个人都与他人合作完成这本书——《奇幻系列生物辞典》。这本辞典更像一本教材，由多个作者共同完成：Sally、Tom '
            '和 Adam。</p>\n'
            '<p>让我们来看看《奇幻系列生物辞典》项目的在线 Github 仓库，现在的情况是：</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx2.sinaimg.cn/large/7cc829d3gy1ffofj5zx9vj20ku0hdq53.jpg"></p>\n'
            '<p>如上图所示，树的类比完全适用于奇幻作家协会在这个项目上的合作情况，仓库历史沿主分支向上移动。常规工作流始于每个作者为完成一个工作任务（例如编写章节内容，或排版章节）而在主分支上创建分支。只有当更改得到其他合作作家的批准时，分支才会被合并到主分支上（请谨记，主分支上的内容，才是最终要发布的内容）。</p>\n'
            '<p>当一个分支的内容<strong>合并（</strong><strong>merged</strong><strong>）</strong>到主分支时，意味着该分支的内容会覆盖主分支上的。因此，现有内容的任何更改都将会替代之前的。当然，任何新添加的内容也会添加到主分支。实际上，当分支合并到主分支时，该分支的提交历史被添加到主分支提交历史的顶部。</p>\n'
            '<p>然而，你可能正在思考：<strong>人们在本机的工作和之后才推送到 Github '
            '的工作变更是如何连接到一起的呢？</strong></p>\n'
            '<p>关于这个问题，重点在于：你在 Github '
            '的远程仓库是你本机工作项目的一个镜像。这意味着，你在自己的电脑里存储了该项目（例如：一个已设置可进行 Git 提交的文件夹）的本地 '
            'Git 仓库。在这个本地的 Git 仓库（再次，这是一个特定术语，指你的电脑里某个启用了 Git '
            '功能的文件夹）中，你拥有与该项目相关的所有文件，在本文的例子中，即《奇幻系列生物辞典》。</p>\n'
            '<p>它的工作原理很像 Dropbox '
            '：你在不同的设备（你的家庭电脑、办公室电脑，等等）上创建本地文件夹，进行工作并更新这些文件。最后，这些操作被同步到网络上。然而，我们知道，Git/Github '
            '工作流还包含了一些额外的步骤。首先，你必须有意识地对某一时刻的工作执行“快照”（即执行一次提交）。然后，你必须特意地推送这些提交（push） '
            '到 Github。只有这样，你的工作才被同步到网络上的位置（Github 版本库）。</p>\n'
            '<p>既然如此，为什么不自动化该工作流呢？为什么不让它像 Dropbox一样，当你更新本地文件时，同时自动更新 Github '
            '上的文件？有很多理由让我们不这么做。最主要的理由是——bugs '
            '。同出版界一样，软件工程中也不是所有写过的东西都要保留。有时，你希望实验一下你的想法，如果实验失败，你希望有一种简单的方式能让工作快速回滚到之前的正确状态上。这也是为什么我们提倡这个经验法则，即在你试图用不同的方法编辑或实验之前，先对当前你希望保留的修改进行提交。频繁地提交小块工作有益无害，事实上，许多工程师为自己能做到这一点而感到自豪。</p>\n'
            '<p>现在，回到《奇幻系列生物辞典》。由于\xa0 Sally '
            '对兽族有较深的了解，她被挑选为写兽族章节。但她不想在没有经过其它合作人员允许的情况下去修改这本书，于是，她创建了一个本地分支，并在该分支上进行写作和提交。然后，<strong>她将本地分支推送到 '
            'Github</strong>。像往常一样，Github 的远程仓库是本地库的一个镜像，最新进展显示 Sally '
            '已创建了一个包含部分提交的分支（如下图所示）。</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx2.sinaimg.cn/large/7cc829d3gy1ffofj6qbgpj20ku0h6405.jpg"></p>\n'
            '<p>随着她对本章节的持续写作，Sally 进行了更多的提交，并将它们推送到 Github 的在线镜像分支。终于，她准备请 Tom '
            '和 Adam 一起对她的工作进行评审。因此，她在 Github 上发布了一个 <strong>Pull '
            'Request（发布请求）</strong>，这是一个 Github 功能，允许她解释该分支相对于主分支做了哪些修改。Github '
            '还提供了一个简易平台，合作人员可以在该平台上针对分支的修改内容进行讨论，并要求 Sally '
            '在分支合并到主分支之前对一些有异议的内容进行修改。</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx1.sinaimg.cn/large/7cc829d3gy1ffofj7m86oj20ku0fndhe.jpg"></p>\n'
            '<p>在对部分内容请求修改后，如上图所示，Tom 和 Adam 对 Sally 的分支内容很满意，并决定将她的工作成果合并到 '
            'Github 的主分支上。此时，他们所要做的就是将 Sally 之前独立提交的内容，添加到主分支的提交历史顶部：</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx3.sinaimg.cn/large/7cc829d3gy1ffofj7ymv4j20b40eutbq.jpg"></p>\n'
            '<p>此时，Sally可以切换（或<strong>“check '
            'out”</strong>）到本地计算机上的主分支，并将先前在功能分支（兽人章节分支）中的独立提交拉取下来。现在她又要在新的主分支上重新开始了：以该主分支为基础为她的下一步工作创建一个新的本地分支，帮助汤姆编辑有关妖精的章节。因此，这一过程又将重复:</p>\n'
            '<ol>\n'
            '<li>创建本地分支</li>\n'
            '<li>在本地分支上编辑修改，然后提交</li>\n'
            '<li>推送提交（Push）到 Github</li>\n'
            '<li>\xa0创建发布请求（Pull Request），说明该分支包含了哪些更改</li>\n'
            '<li>合并（Merge）分支内容到主分支</li>\n'
            '<li>将主分支上的最新提交拉取（pull）到本地</li>\n'
            '<li>重复上述步骤</li>\n'
            '</ol>\n'
            '<p>正如你所看到的，这是一个非常流畅的工作流，完美地结合了独立工作与团队协作。你本机的 Git '
            '提供了一个绝妙的方法，即通过由你自己控制和策划的丰富的历史提交，来创建你工作的各种版本。Github '
            '是一个非常棒的在线版本控制工具，不仅存储和提供了清晰的可视化历史记录，而且还能进行协同工作和质量控制。</p>\n'
            '<p>总而言之，我希望我已经说服你去<strong>尝试使用 Git \xa0和 Github '
            '进行任何项目</strong>。没有理由只有工程师能从这个很棒的工具中受益。毕竟，我们也想看到更多有关兽人的故事。</p>\n'
            '<h2></h2>\n'
            '<h3>致谢：</h3>\n'
            '<p>非常感谢 <a '
            'href="https://www.youtube.com/channel/UCs-SOeljpyBAvS6fYAR2egw">Common '
            'Craft</a> 对本文的涂鸦和解释风格的启发。还要感谢这个视频《\xa0<a '
            'href="https://www.youtube.com/watch?v=ddO9idmax0o">saving me from '
            'the horror of having to explain Twitter to my mum</a>\xa0》。</p>\n'
            '<h3>本文涉及的术语</h3>\n'
            '<ul>\n'
            '<li><strong>Version Control（版本控制）:</strong>\xa0'
            '任何一个能够让你了解文件的历史，以及该文件的发展进程的系统。</li>\n'
            '<li><strong>Git</strong><strong>：</strong>一个版本控制程序，通过对变更进行注释，以创建一个易于遍历的系统历史。</li>\n'
            '<li><strong>Commit（提交）</strong><strong>：</strong>在指定时间点对系统差异进行的注释 '
            '“快照”。</li>\n'
            '<li><strong>Local（本地）</strong><strong>：</strong>指任意时刻工作时正在使用的电脑。</li>\n'
            '<li><strong>Remote（远程）</strong><strong>：</strong>\xa0'
            '指某个联网的位置。</li>\n'
            '<li><strong>Repository (仓库，简称 '
            'repo)</strong><strong>：</strong>配置了Git超级权限的特定文件夹，包含了你的项目或系统相关的所有文件。</li>\n'
            '<li><strong>Github</strong><strong>：</strong>获取本地提交历史记录，并进行远程存储，以便你可以从任何计算机访问这些记录。</li>\n'
            '<li><strong>Pushing（推送）</strong><strong>：</strong>取得本地Git提交（以及相关的所有工作），然后将其上传到在线Github。</li>\n'
            '<li><strong>Pulling（拉取）</strong><strong>：</strong>从在线的Github上获取最新的提交记录，然后合并到本地电脑上。</li>\n'
            '<li><strong>Master (branch)</strong><strong>：主分支，</strong>提交历史 '
            '“树”的 “树干”，包含所有已审核的内容/代码。</li>\n'
            '<li><strong>Feature '
            'branch（功能分支/特性分支）：</strong>一个基于主分支的独立的位置，在再次并入到主分支之前，你可以在这里安全地写工作中的新任务。</li>\n'
            '<li><strong>Pull Request（发布请求）</strong><strong>：</strong>一个 '
            'Github 工具，允许用户轻松地查看某功能分支的更改 （the difference或 '
            '“diff”），同时允许用户在该分支合并到主分支之前对其进行讨论和调整。</li>\n'
            '<li><strong>Merging（合并）</strong><strong>：</strong>该操作<strong>指</strong>获取功能分支的提交，加入到主分支提交历史的顶部。</li>\n'
            '<li><strong>Checking '
            'out（切换）</strong><strong>：</strong>该操作指从一个分支切换到另一个分支。</li>\n'
            '</ul>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111187" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111187votetotal">3</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111187" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 21 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i> 1 评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/q4000052677">听风</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/q4000052677">\r\n'
            '\t\t\t<img '
            'src="http://q.qlogo.cn/qqapp/208656/9538B04AD8C6883F49C38BC8ECDDAF3C/100">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            简介还没来得及写 :）        </span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/q4000052677" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/q4000052677/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/q4000052677/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 16</a>        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://wx3.sinaimg.cn/mw690/7cc829d3gy1ffofj32av3j20ku0bqdgp.jpg'],
 'tags': 'IT技术,,Git,Github',
 'thumb_up_num': 3,
 'title': '大白话解释 Git 和 GitHub',
 'url': 'http://blog.jobbole.com/111187/',
 'url_obj_id': '465760c151650c2c990cfa9661af173e'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:26 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111024/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:26 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:26 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 926
2017-06-04 21:38:26 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.007s]
2017-06-04 21:38:26 [elasticsearch] DEBUG: > 大事件：Kotlin 成了 Android 开发的官方语言
2017-06-04 21:38:26 [elasticsearch] DEBUG: < {"tokens":[{"token":"大事件","start_offset":0,"end_offset":3,"type":"CN_WORD","position":0},{"token":"大事","start_offset":0,"end_offset":2,"type":"CN_WORD","position":1},{"token":"事件","start_offset":1,"end_offset":3,"type":"CN_WORD","position":2},{"token":"kotlin","start_offset":4,"end_offset":10,"type":"ENGLISH","position":3},{"token":"成了","start_offset":11,"end_offset":13,"type":"CN_WORD","position":4},{"token":"android","start_offset":14,"end_offset":21,"type":"ENGLISH","position":5},{"token":"开发","start_offset":22,"end_offset":24,"type":"CN_WORD","position":6},{"token":"发","start_offset":23,"end_offset":24,"type":"CN_WORD","position":7},{"token":"官方语言","start_offset":25,"end_offset":29,"type":"CN_WORD","position":8},{"token":"官方","start_offset":25,"end_offset":27,"type":"CN_WORD","position":9},{"token":"语言","start_offset":27,"end_offset":29,"type":"CN_WORD","position":10}]}
2017-06-04 21:38:26 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:26 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 575
2017-06-04 21:38:26 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.004s]
2017-06-04 21:38:26 [elasticsearch] DEBUG: > 开发,Kotlin,安卓开发
2017-06-04 21:38:26 [elasticsearch] DEBUG: < {"tokens":[{"token":"开发","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"发","start_offset":1,"end_offset":2,"type":"CN_WORD","position":1},{"token":"kotlin","start_offset":3,"end_offset":9,"type":"ENGLISH","position":2},{"token":"安","start_offset":10,"end_offset":11,"type":"CN_CHAR","position":3},{"token":"卓","start_offset":11,"end_offset":12,"type":"CN_WORD","position":4},{"token":"开发","start_offset":12,"end_offset":14,"type":"CN_WORD","position":5},{"token":"发","start_offset":13,"end_offset":14,"type":"CN_WORD","position":6}]}
2017-06-04 21:38:26 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:27 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/b64db56ac3ac38d9f64dea7bd872d7f9 HTTP/1.1" 200 175
2017-06-04 21:38:27 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/b64db56ac3ac38d9f64dea7bd872d7f9 [status:200 request:0.025s]
2017-06-04 21:38:27 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111024/", "comment_num": 0, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文作者： 伯乐在线 - 伯小乐 。未经作者许可，禁止转载！欢迎加入伯乐在线 专栏作者。今天是 Google I/O 2017 大会第一日。一觉醒来，发现 Kotlin 成为了 Android 的官方开发语言。谷歌安卓团队今天宣布对 Kotlin 提供 first-class 的支持。\n\n马后炮一下，谷歌在和甲骨文 Java 版权官司之后，必然要做的调整之一就是改语言。\n关于 Kotlin，先了解这些\n\nKotlin 是一个基于 JVM 的新编程语言，用 JetBrains 的话来说是「更现代化、更强大」的语言。\n\n\nKotlin 由 JetBrains 在 2010 年开发，2011 年开源了： https://github.com/JetBrains/kotlin  。2016 年发布 1.0 版，2017 年 4 月发布 1.1.2 版。\n\n\n谷歌安卓团队和 JetBrains 的关系不一般。Android Studio 就是基于 JetBrains 开发的 IntelliJ IDEA 社区版；\n\n\n谷歌和 JetBrains 将为 Kotlin 成立一个非盈利基金会。Kotlin 语言的开发，还是 JB 为主导。\n\n\nKotlin 语言的开发团队，目前大约 40 人。会继续往常那样运作。Andrey Breslav 还是 Kotlin 语言的首席设计师。\n\n\nJetBrains 对 Kotlin 的愿景是：用同一种语言，桥接多平台的不同应用的端对端开发。包括全栈 Web 应用、Android 和 iOS 客户端、嵌入式/物联网等等。\n\n\nKotlin 与 Java 100% 互通，并具备诸多 Java 尚不支持的新特性。\n\n\nAndroid Studio 3.0 预览版已支持 Kotlin。下载 AS 3.0 预览版后，打开现有的 Java 文件，在「Code」菜单中选择「Convert Java File to Kotlin File」。AS 会添加 Kotlin 依赖，然后把 Java 代码转成同等功能的 Kotlin 代码。\n\n\nKotlin 易于上手，可以逐步引入到现有项目中。这意味着安卓开发者目前现有的技能和技术积累/投资并没有浪费。\n\n\n国内开发者讨论\n@平常中的光辉：\n安卓也有了自己的开发语言，就像苹果的object-c，一个来自java，一个来自c，两种流派的竞争，java面向对象，c面向过程,java诞生在电子消费产品和互联网应用，c诞生在单片机\n@练习恶魔\n听说Kotlin可以开发安卓了，赶紧看了一眼语言特性。发现这货就是个JVM上的C# 啊。。然后放心的去干别的了\n@安徽农民\n看了Kotlin的语法，怎么赶紧与Swift简直是兄弟俩啊，风格太接近了，特别是用？表示可能为null的情形。这俩谁先谁后啊？\n@sunnyxibei\n今年的IO并没有太多的闪光点，最棒的就是对kotlin的官方“认证”了 ，成为官方“钦定”的开发语言，一场IO大会下来，jetBrains或是最大赢家\n@BroncoTc:\njvm语言那么多，为啥就是kotkin？\n@据悉社:\n因为Kotlin学习的curve最小，它就是Java本来应该的样子，你几乎可以把它当C井直接用（逃。而现在的Java是Java一系列错误设计决定之后失败的样子。。。\n@二蒙：\n以前以为Google会放弃安卓，没想到是安卓放弃了Java 。真的很鄙视Oracle，默默为SUN 点根蜡烛\n@老赵：\nJB不愧是世上第一的IDE开发商（两个第一，五个前三，十个前五）\nKotlin 学习资源\n\nTry Kotlin：http://try.kotlinlang.org/\nGetting Started Guide：https://kotlinlang.org/docs/tutorials/getting-started.html\n\n参考\nJetBrains、微博、Verturebeta、cnBeta\n\r\n        \r\n        \r\n        \n    \n         1 赞\n         3 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：伯小乐\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            伯乐在线小编一枚~~~~PS：我不是@小编辑，不要问我了        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  240        \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 3, "title": "大事件：Kotlin 成了 Android 开发的官方语言", "front_image_url": ["http://wx3.sinaimg.cn/large/63918611gy1ffprvu5jnvj20sg0edqj7.jpg"], "suggest": [{"weight": 10, "input": ["android", "开发", "kotlin", "官方语言", "成了", "事件", "官方", "语言", "大事", "大事件"]}, {"weight": 7, "input": ["开发", "kotlin"]}], "tags": "开发,Kotlin,安卓开发"}
2017-06-04 21:38:27 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"b64db56ac3ac38d9f64dea7bd872d7f9","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:27 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 3,
 'comment_num': 0,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文作者： <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/aoi">伯小乐</a> '
            '。未经作者许可，禁止转载！<br>欢迎加入伯乐在线 <a href="http://blog.jobbole.com/99322" '
            'target="_blank">专栏作者</a>。</div><p>今天是 Google\xa0I/O 2017 '
            '大会第一日。一觉醒来，发现 Kotlin 成为了 Android 的官方开发语言。谷歌安卓团队今天宣布对 Kotlin 提供 '
            'first-class 的支持。</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx3.sinaimg.cn/large/63918611gy1ffprvu5jnvj20sg0edqj7.jpg" '
            'width="553" height="279"></p>\n'
            '<p>马后炮一下，谷歌在和甲骨文 Java 版权官司之后，必然要做的调整之一就是改语言。</p>\n'
            '<h3>关于 Kotlin，先了解这些</h3>\n'
            '<ul class="list-paddingleft-2">\n'
            '<li>Kotlin 是一个基于 JVM 的新编程语言，用 JetBrains 的话来说是「更现代化、更强大」的语言。</li>\n'
            '</ul>\n'
            '<ul class="list-paddingleft-2">\n'
            '<li>Kotlin 由 JetBrains 在 2010 年开发，2011 年开源了： '
            'https://github.com/JetBrains/kotlin \xa0。2016 年发布 1.0 版，2017 年 4 '
            '月发布 1.1.2 版。</li>\n'
            '</ul>\n'
            '<ul class="list-paddingleft-2">\n'
            '<li>谷歌安卓团队和 JetBrains 的关系不一般。Android Studio 就是基于 JetBrains 开发的 '
            'IntelliJ IDEA 社区版；</li>\n'
            '</ul>\n'
            '<ul class="list-paddingleft-2">\n'
            '<li>谷歌和 JetBrains 将为 Kotlin 成立一个非盈利基金会。Kotlin 语言的开发，还是 JB '
            '为主导。</li>\n'
            '</ul>\n'
            '<ul class="list-paddingleft-2">\n'
            '<li>Kotlin 语言的开发团队，目前大约 40 人。会继续往常那样运作。Andrey Breslav 还是 Kotlin '
            '语言的首席设计师。</li>\n'
            '</ul>\n'
            '<ul class="list-paddingleft-2">\n'
            '<li>JetBrains 对 Kotlin 的愿景是：用同一种语言，桥接多平台的不同应用的端对端开发。包括全栈 Web '
            '应用、Android 和 iOS 客户端、嵌入式/物联网等等。</li>\n'
            '</ul>\n'
            '<ul class="list-paddingleft-2">\n'
            '<li>Kotlin\xa0与 Java 100% 互通，并具备诸多 Java 尚不支持的新特性。</li>\n'
            '</ul>\n'
            '<ul class="list-paddingleft-2">\n'
            '<li>Android Studio 3.0 预览版已支持 Kotlin。下载 AS 3.0 预览版后，打开现有的 Java '
            '文件，在「Code」菜单中选择「Convert Java File to Kotlin File」。AS 会添加 Kotlin '
            '依赖，然后把 Java 代码转成同等功能的 Kotlin 代码。</li>\n'
            '</ul>\n'
            '<ul class="list-paddingleft-2">\n'
            '<li>Kotlin 易于上手，可以逐步引入到现有项目中。这意味着安卓开发者目前现有的技能和技术积累/投资并没有浪费。</li>\n'
            '</ul>\n'
            '<p><img id="pic" class="M_cur_zoom_in" '
            'src="http://wx2.sinaimg.cn/large/63918611gy1ffprvzlsf7j215o0k00sy.jpg" '
            'width="555" height="266"></p>\n'
            '<h3>国内开发者讨论</h3>\n'
            '<p>@平常中的光辉：</p>\n'
            '<blockquote><p>安卓也有了自己的开发语言，就像苹果的object-c，一个来自java，一个来自c，两种流派的竞争，java面向对象，c面向过程,java诞生在电子消费产品和互联网应用，c诞生在单片机</p></blockquote>\n'
            '<p>@练习恶魔</p>\n'
            '<blockquote><p>听说Kotlin可以开发安卓了，赶紧看了一眼语言特性。发现这货就是个JVM上的C# '
            '啊。。然后放心的去干别的了</p></blockquote>\n'
            '<p>@安徽农民</p>\n'
            '<blockquote><p>看了Kotlin的语法，怎么赶紧与Swift简直是兄弟俩啊，风格太接近了，特别是用？表示可能为null的情形。这俩谁先谁后啊？</p></blockquote>\n'
            '<p>@sunnyxibei</p>\n'
            '<blockquote><p>今年的IO并没有太多的闪光点，最棒的就是对kotlin的官方“认证”了 '
            '，成为官方“钦定”的开发语言，一场IO大会下来，jetBrains或是最大赢家</p></blockquote>\n'
            '<p>@BroncoTc:</p>\n'
            '<blockquote><p>jvm语言那么多，为啥就是kotkin？</p></blockquote>\n'
            '<p>@据悉社:</p>\n'
            '<blockquote><p>因为Kotlin学习的curve最小，它就是Java本来应该的样子，你几乎可以把它当C井直接用（逃。而现在的Java是Java一系列错误设计决定之后失败的样子。。。</p></blockquote>\n'
            '<p>@二蒙：</p>\n'
            '<blockquote><p>以前以为Google会放弃安卓，没想到是安卓放弃了Java 。真的很鄙视Oracle，默默为SUN '
            '点根蜡烛</p></blockquote>\n'
            '<p>@老赵：</p>\n'
            '<blockquote><p>JB不愧是世上第一的IDE开发商（两个第一，五个前三，十个前五）</p></blockquote>\n'
            '<h3>Kotlin 学习资源</h3>\n'
            '<ul class="list-paddingleft-2">\n'
            '<li>Try Kotlin：http://try.kotlinlang.org/</li>\n'
            '<li>Getting Started '
            'Guide：https://kotlinlang.org/docs/tutorials/getting-started.html</li>\n'
            '</ul>\n'
            '<p><strong>参考</strong></p>\n'
            '<p>JetBrains、微博、Verturebeta、cnBeta</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111024" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111024votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111024" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 3 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/aoi">伯小乐</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/aoi">\r\n'
            '\t\t\t<img '
            'src="http://www.jobbole.com/wp-content/uploads/2015/11/f2bb4f6f428a49476a2e91c355c8d150.jpg">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            伯乐在线小编一枚~~~~PS：我不是@小编辑，不要问我了        </span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/aoi" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/aoi/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/aoi/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 240</a>        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://wx3.sinaimg.cn/large/63918611gy1ffprvu5jnvj20sg0edqj7.jpg'],
 'tags': '开发,Kotlin,安卓开发',
 'thumb_up_num': 1,
 'title': '大事件：Kotlin 成了 Android 开发的官方语言',
 'url': 'http://blog.jobbole.com/111024/',
 'url_obj_id': 'b64db56ac3ac38d9f64dea7bd872d7f9'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111204/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:29 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:29 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 825
2017-06-04 21:38:29 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2017-06-04 21:38:29 [elasticsearch] DEBUG: > 新人必看的开源指南：如何参与并做贡献
2017-06-04 21:38:29 [elasticsearch] DEBUG: < {"tokens":[{"token":"新人","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"必看","start_offset":2,"end_offset":4,"type":"CN_WORD","position":1},{"token":"开源","start_offset":5,"end_offset":7,"type":"CN_WORD","position":2},{"token":"指南","start_offset":7,"end_offset":9,"type":"CN_WORD","position":3},{"token":"如何","start_offset":10,"end_offset":12,"type":"CN_WORD","position":4},{"token":"参与","start_offset":12,"end_offset":14,"type":"CN_WORD","position":5},{"token":"做","start_offset":15,"end_offset":16,"type":"CN_CHAR","position":6},{"token":"贡献","start_offset":16,"end_offset":18,"type":"CN_WORD","position":7},{"token":"贡","start_offset":16,"end_offset":17,"type":"CN_WORD","position":8},{"token":"献","start_offset":17,"end_offset":18,"type":"CN_WORD","position":9}]}
2017-06-04 21:38:29 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:29 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 252
2017-06-04 21:38:29 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.005s]
2017-06-04 21:38:29 [elasticsearch] DEBUG: > 开发,开源
2017-06-04 21:38:29 [elasticsearch] DEBUG: < {"tokens":[{"token":"开发","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"发","start_offset":1,"end_offset":2,"type":"CN_WORD","position":1},{"token":"开源","start_offset":3,"end_offset":5,"type":"CN_WORD","position":2}]}
2017-06-04 21:38:29 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:29 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/86b2553cf3632cf939fdb658d74ed475 HTTP/1.1" 200 175
2017-06-04 21:38:29 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/86b2553cf3632cf939fdb658d74ed475 [status:200 request:0.027s]
2017-06-04 21:38:29 [elasticsearch] DEBUG: > {"thumb_up_num": 3, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111204/", "comment_num": 0, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - 效楚 翻译，郑芸 校稿。未经许可，禁止转载！英文出处：Open Source Guides。欢迎加入翻译组。【伯乐在线导读】：对程序员而言，参与开源有着难以置信的回报，比如有一个自己的出色开源项目，在技术面试能增色很多，极大加分。所以，越来越多的人在参与到开源运动中来。但对应很多新手来说，如何参与开源做出第一个贡献，如何发起一个新项目，却成了一个问题。\n2月14日，GitHub 官博发文宣告正式推出「开源指南」，旨在方便想参与到开源的个人和组织。「开源指南」是一个系列集合，内容简洁明了，分了 10 个方面。伯乐在线在本文中翻译了首篇。\n \n怎样为开源做贡献\n想为开源做贡献吗？这是一份写给新手和老手的开源贡献指南。\n\n \n第一部分：为何要为开源做贡献？\n\n在 freenode 的工作使我学到了很多技能，后来我将它们运用到我的大学学习和实际工作中。我认为在开源项目中的工作对我的帮助和它对项目本身的帮助一样大！— @errietta，《为什么我热爱为开源软件做贡献》\n为开源做贡献是学习、教学和在你能想象的任何技能上积累经验的有益途径。\n为什么人们为开源做贡献？有许多理由！\n提升现有技能\n不管是写代码、用户界面设计、平面造型设计、写作，或是规划，如果你在寻找实践机会，在开源项目中总有适合你的任务。\n结识爱好相似的人\n拥有热情而友好的团体组织的开源项目使人们在多年以来常常回访。许多人通过参与开源成了一辈子的好朋友，无论是在会议中碰面还是深夜里线上聊玉米煎饼。\n找到导师和教导他人\n在共享的项目中与他人一起工作，意味着你必须解释你做事的方式，此外还要寻求他人的帮助。学习和教导，对参与其中的所有人都是一种满足的活动。\n开发公开作品，帮你提升声望（和事业）\n根据定义，你的所有开源工作都是公开的，这意味着你得到了免费的样本，可以带到任何地方，作为你能做事情的证明。\n学习交际能力\n开源提供了练习领导才能和管理技能的机会，比如解决冲突、组织不同团队的人，和给工作排优先级。\n人人都可以参与改变，不分大小\n你不一定要成为终生的贡献者才能享受参与开源的乐趣。你是否曾在网站上看到一个拼写错误，希望某人会修正它？在开源项目中，你就能做到这点。开源帮助人们在他们的生命中和他们对世界的体验中感受到力量，这本身是令人满足的。\n \n第二部分：贡献意味着什么\n如果你是一个开源贡献方面的新人，这个过程可能是令人生畏的。怎么找到合适的项目？不会写代码怎么办？某件事出岔子了会怎样？\n不用担心！有各种各样的方法参与开源项目，并且有几个诀窍会帮你最大程度地运用你的经验。\n你不一定要贡献代码\n关于为开源做贡献，一个常见的误解是你必须贡献代码。事实上，常常是项目中非代码的部分大多被遗漏和忽视了。通过参与提供非代码的贡献，你会给项目做出巨大的帮助！\n\n我因为在 CocoaPods 中的工作出名，但大多数人不知道实际上我在 CocoaPods 工具本身上并没有做任何实际的工作。我在这个项目上花费的时间，大部分是在做诸如文档和品牌推广工作之类的事情。— @orta，《默认转向开源软件》\n即使你是一名开发者，非代码贡献也是参与项目并结识其它团体成员的极好方式。建立那样的关系，将给予你在项目的其它部分工作的机会。\n\n我初次接触 Python 开发组（也叫做 python-dev）是在 2002 年 6 月 17 日，我就接受我的补丁事宜向邮件列表发电子邮件。很快我发现了开源中的一个 bug，并决定把这个错误写成邮件摘要汇报给小组。我对这个主题做了澄清，他们为麻烦我做这件事而表示了大大的歉意。但更关键的是，当某人指出的某些东西需要修正时，我能够看到的。— @brettcannon, “Maintainer Stories”\n你是否喜欢活动规划？\n\n组织关于项目的专题讨论会或聚会，就像 @fzamperin 为 NodeSchool 所做的那样。\n组织项目会议（如果他们有的话）\n帮助团体成员找到合适的会议并提交演讲提议\n\n你是否喜欢设计？\n\n调整布局以提高项目的可用性\n做用户调查以重新组织和改善项目的导航和菜单，就像 Drupal 建议的那样。\n制订风格指南以帮助项目拥有一致的视觉设计\n为T恤或新的 logo 绘画，就像 hapi.js 的贡献者所做的那样。\n\n你是否喜欢写作？\n\n编写和改进项目文档\n组织一个示例文件夹，展示怎样使用项目\n开办项目通讯，或从邮件列表中组织重要内容\n为项目编写教程，就像 pypa 的贡献者所做的那样。\n翻译项目的文档\n\n\n说真的，“文档”极其重要。到目前为止，Babel（Kittens 的开源项目）的文档一直很棒，已经成为了它的杀手级特性。但是肯定还需要做一些工作加以完善，甚至加一些段落上去，对此我非常感激。— @kittens，《需要贡献者》\n你是否喜欢组织？\n\n链接重复的 Issue，给出新的 Issue 标签建议，让事情井井有条\n检查开放的 Issue ，提议关闭旧的 Issue ，就像 @nzakas 为 eslint 所做的那样\n在最近开放的 Issue 中提有助于澄清的问题，把讨论向前推进\n\n你是否喜欢写代码？\n\n找一个开放的 Issue 着手处理，就像 @dianjin 为 Leaflet 所做的那样\n问问你是否能帮忙写一个新特性\n自动化项目的设置\n提升工具和测试\n\n你是否喜欢帮助他人？\n\n在诸如 Stack Overflow（就像这个 Postgres 的例子一样）或 reddit 之类的地方回答关于项目的问题\n在开放的 Issue 中为人们回答问题\n帮忙主持讨论版或会话通道（conversation channels）\n\n你是否喜欢为他人的代码提供帮助？\n\n审查他人提交的代码\n为如何使用项目写教程\n为其它贡献者提供指导，就像 @ereichert 在 Rust 上为 @bronzdoc 所做的那样\n\n你并不非得要在软件项目中工作！\n虽然“开源”通常指软件，但你可以在任何事情上协作。有书籍、食谱、清单和课程是作为开源项目开发的。\n例如：\n\n@sindresorhus 组织了一个 Awesome 的清单列表\n@h5bp 为前端开发求职者维护了一个可能的面试问题的清单\n@stuartlynn 和 @nicole-a-tesla 制作了一份关于 puffins 的有趣事实的集合\n\n即使你是一名软件开发者，在文档项目上的工作也能帮你在开源方面起步。在与代码无关的项目中工作常常不那么令人生畏，而且协作的过程将增强你的自信和经验。\n \n第三部分：熟悉一个新项目\n\n如果你去看一个 Issue 追踪器，发现事情看起来令人困惑，并不是只有你这样。这些工具需要大量的隐性知识，但人们能帮你驾驭它，你也能向他们提问。— @shaunagm，《怎样为开源做贡献》\n对任何超过修正拼写错误的事情来说，为开源做贡献就像在社交聚会上走向一群陌生人。如果当他们正在深入讨论金鱼时，你开始谈论美洲鸵，他们可能有点奇怪地看着你。\n在带着你自己的建议盲目投入以前，先从学习怎样观察聚会中的人，参与他们讨论的话题开始。这样做能增加你的想法被注意到和听取的可能性。\n开源项目剖析\n每个开源团体都是不同的。\n在一个开源项目中花了若干年时间意味着你已经了解了一个开源项目。转向一个不同的项目，你可能会发现词汇、规范和沟通方式完全不同。\n即便如此，许多开源项目遵循着相似的组织结构。理解不同的团体角色和总体过程将帮你迅速熟悉任何新项目。\n一个典型的开源项目有以下几类人：\n\n作者（Author）：创建该项目的人或组织。\n所有者（Owner）：对组织或仓库（repository）拥有行政所有权的人（并不总和原始作者是同一个人）\n维护者（Maintainers）：对推动愿景和管理项目的组织方面负有责任的贡献者。（他们可能也是项目的作者或所有者）\n贡献者（Contributors）：每个对项目做出过某种贡献的人。\n团体成员（Community Members）：使用项目的人。他们可能在对话中保持活跃或者对项目的方向表达他们的主张。\n\n大的项目可能还有下属委员会或工作组，他们致力于不同的任务，比如工具、分类（triage）、团体节制（community moderation）和活动组织。在项目的网站上寻找“team”页面，或者在仓库（repository）里寻找治理文档（governance documentation），来找到此类信息。\n项目也有文档。这些文件通常列在仓库（repository）的顶层。\n\n许可证（LICENSE）：根据定义，每个开源项目必须有一个开源许可证。如果项目没有许可证，那它就不是开源的。\n自述文件（README）：自述文件是迎接项目的新团体成员的操作指南手册。它解释了为什么项目是有用的以及如何开始。\n贡献（CONTRIBUTING）：自述文件帮助人们使用项目，而贡献文件帮助人们为项目做贡献。它解释了需要什么类型的贡献者以及这个过程是怎么工作的。虽然不是每个项目都有贡献文件，但它的存在表明这是一个欢迎做贡献的项目。\n\n行动守则（CODE_OF_CONDUCT）：行动守则为参与者的相关行为设定了基本准则，并且帮助促进一个友好而热情的环境。虽然不是每个项目都有行动守则文件，但它的存在表明这是一个欢迎做贡献的项目。\n其它文档：可能有另外的文档，比如教程、演练（walkthroughs）或管理策略，尤其是在大项目中。\n\n\n\n最后，开源项目使用以下工具来组织讨论。通读档案文件将为你很好地描绘该团体是怎样思考和工作的。\n\n Issue 追踪器（Issue tracker）：人们讨论项目相关 Issue 的地方。\nPull requests：人们讨论和审查进行中的更改的地方。\n讨论板或邮件列表：有些项目可能为会话主题使用这些通道（例如，“我怎样……”或“你认为……怎么样”，而不用 bug 报告或特性请求）。其它项目为所有会话使用 Issue 追踪器。\n同步聊天通道（Synchronous chat channel）：有些项目为临时会话、协作和快速交流使用聊天通道（比如 Slack 或 IRC）。\n\n \n第四部分：找到一个要做贡献的项目\n既然你已经弄明白开源项目是怎样工作的，是时候找到一个要做贡献的项目了！\n如果你之前从未为开源做过贡献，听听美国总统约翰·F·肯尼迪的建议，他曾经说：“不要问你的国家能为你做什么-问问你能为你的国家做什么。”\n为开源做贡献在所有层面和不同项目间都能发生。你不必对你的第一个确切的贡献是什么，或它看起来是什么样想得过多。\n相反地，从考虑你已经在使用的或想要使用的项目开始。你会积极地做贡献的项目正是你发现自己会回访的项目。\n在那些项目里，无论何时你发现自己想到某件事可以变的更好或不同，按照你的直觉行动吧。\n开源不是一个排外的俱乐部；它是由和你一样的人做出来的。“开源”只是一个花哨的术语，为了把世界上的问题都作为可修正的来处理。\n你可能会细看一份自述文件，发现一个断开的链接或一个拼写错误。或者，你是一个新用户，你发现某样东西毁坏了，或是一个 Issue 你认为实际上应该在文档中。与其忽略它并继续，或请求其他人修正它，不如看看你能不能参与帮忙。这就是开源的真谛！\n对开源的非正式贡献中，有28%是文档，比如拼写错误修正、重排格式，或翻译。\n你也可以使用下列资源之一来帮你发现新项目：\n\nGitHub Explore\nFirst Timers Only\nYour First PR\nCodeTriage\n24 Pull Requests\nUp For Grabs\nContributor-ninja\n\n做贡献前的一份检查表\n当你找到一个你想要做贡献的项目，做一个快速的浏览来确认该项目适合接受贡献。否则，你的努力工作可能永远得不到回应。\n这是一份便于使用的检查表，用来评估一个项目对新贡献者来说好不好。\n满足开源的定义\n\n它有没有许可证？通常，这是在仓库（repository）根目录里的一个叫做 LICENSE 的文件。\n\n项目积极地接受贡献\n看看主分支上的提交活动。在 GitHub 上，你可以在仓库的主页上看到此信息。\n\n最新的提交（commit）是在什么时候？\n项目有多少贡献者？\n人们提交频繁程度？（在 GitHub 上，你可以通过点击顶部横条里的“Commits”来找到此信息）\n\n下一步，看看项目的 Issue 。\n\n有多少开放的 Issue ？\n当 Issue 开放时，维护者是否快速地回应？\n对于 Issue 有没有活跃的讨论？\nIssue 是最近的吗？\nIssue 是否得到关闭？（在 GitHub 上，点击 Issue 页面上的“closed”标签来看已关闭的 Issue 。）\n\n现在对项目的 pull requests做同样的动作。\n\n有多少开放的 pull requests？\n当开放pull requests时， 维护者是否快速地回应？\n对于pull requests有没有活跃的讨论？\npull requests是最近的吗？\npull requests被合并是在多久之前？（在 GitHub 上，点击pull requests页面上的“closed”标签来看已关闭的pull requests。）\n\n热情的项目\n友好而热情的项目标志着他们乐于接受新的贡献者。\n\n维护者对于 Issue 中的问题是否作出有帮助的回应？\n人们在 Issue 、讨论板和聊天（例如 IRC 或 Slack）中是否友好？\nPull Requests(PR) 功能是否得到审查（reviewed）？\n维护者对人们的贡献是否表示感谢？\n\n\n无论何时你看一个长的讨论帖，抽查一下较晚进入这个帖子的核心开发者的反应。他们是否作出建设性的总结，在做出决策和付诸实施时，是否同时还保持礼貌？如果你看到发生许多口水仗，那通常表明精力用在了争论而不是开发上。— @kfogel，创作开源软件\n \n第五部分：怎样提交贡献\n你已经找到一个你喜欢的项目，并且你已经准备好作出贡献。最后！这里告诉你怎样以正确的方式作出你的贡献。\n有效的沟通\n不管你是一次性的贡献者或是试着加入一个团体，与他人一起工作是你将在开源中发展的最重要的技能之一。\n\n作为一个新贡献者，我很快认识到，如果我想要能关闭 Issue ，我必须提问。我浏览了代码库。一旦我对发生的事有了一些认识，我请求更多的指点。就是这样！在得到我需要的所有相关细节后，我能解答 Issue 了。— @shubheksha，一个新手在开源世界中的颠簸旅途\n在你打开一个 Issue 或使用pull request，或是在聊天中提问以前，记住这些要点可以使你的想法有效地被别人理解。\n给出上下文。帮助他人快速赶上进度。如果你遇到一个错误，解释你正准备做什么和怎么重现它。如果你提出一个新主张，解释为什么你认为它对项目有用（不只是对你！）。\n😇 “当我做 Y 时 X 没有发生”\n😢 “X 坏了！请修好。”\n事先做好功课。不懂没什么，但要表现出你试过了。在求助之前，务必查看项目的自述文件、文档、 Issue （开放的或关闭的）、邮件列表，并且在因特网上搜索答案。当你证明你在试着学习时，人们会表示赞赏。\n😇“我不确定怎么实现 X。我查过了帮助文档，没找到哪里有提到。”\n😢“我怎么做 X？”\n请求要简短而直接。和发送电子邮件很像，每一个贡献，不管多简单或多有帮助，都需要某个其他人的审查。许多项目收到的请求比能提供帮助的人多。简明一点。你会提高某人能帮到你的可能性。\n😇“我想写一份 API 教程。”\n😢“前几天我正在高速公路上开车，停下来加油，然后我对我们应该做的事情有了这个惊人的想法，但在我解释这个想法之前，让我向你展示……”\n交流要对公众可见。尽管有点诱人，但不要私下联系维护者，除非你需要分享敏感信息（比如安全问题或严重的违反行为）。当你使对话对公众可见时，更多的人能从你的交流中学习并受益。讨论本身也可能是一种贡献。\n😇（作为评论）“@-maintainer 你好！我们在这个 pull request 功能上怎么继续？”\n😢（作为一封电子邮件）“你好，抱歉通过电子邮件麻烦你了，但我不知道你有没有可能审查我的 pull request ”\n可以提问（但要耐心！）。每个人在某个时刻都曾是项目的新人，而且即使有经验的贡献者查看新项目时也需要赶上进度。由此类推，即使长期贡献者也并非总是对项目的每个部分都熟悉。对他们表现出与你希望他们对你表现出的同样的耐心。\n😇“谢谢你研究这个错误。我按你的建议做了。这是输出结果。”\n😢 “为什么你不能解决我的问题？这不是你的项目吗？”\n尊重团体的决定。你的想法可能与项目的优先考虑或愿景不同。他们可能提供反馈或决定不执行你的想法。你应该讨论并寻求妥协，而维护者必须花比你更长的时间适应你的决定。如果你不同意他们的方向，你总是可以致力于你自己的 fork 或启动你自己的项目。\n😇“我对你不能支持我的用例感到失望，但既然你已经解释了它只影响一小部分用户，我理解为什么了。谢谢倾听。”\n😢“为什么你不支持我的用例？这无法接受！”\n最重要的是，要优雅。开源由来自世界各地的合作者组成。上下文在跨越语言、文化、地理和时区时会丢失。另外，书面交流使得传递语调或心情更困难。假设这些对话的意图都是好的。礼貌的把想法推后，要求更多的上下文，或进一步澄清你的态度，这些都是好的做法。使因特网成为比你发现它时更好的地方。\n收集上下文\n在做任何事之前，做一个快速的检查，确保你的想法没有在其它地方被讨论过。略读项目的自述文件、 Issue （开放的和关闭的）、邮件列表和 Stack Overflow。你不一定要花几个小时检查一切，但对几个关键词的快速搜索会大有帮助。\n如果你在其它地方找不到你的想法，你已经准备好开始行动了。如果项目在 GitHub 上，你多半会通过开启一个 Issue 或使用 pull request 来沟通：\n\nIssues 就像开启一个会话或讨论\n使用 Pull requests 是为了开始致力于一个解决方案\n对于不重要的交流，比如一个澄清或操作方式问题，试着在 Stack Overflow、IRC、Slack 上提问，或是其它的聊天通道，如果项目有对应渠道的话\n\n在你开启一个 Issue 或 使用 pull request 以前，检查项目的贡献文档（通常是一个叫做 CONTRIBUTING 的文件，或者在自述文件里），看看你是否需要把特定的东西包含进去。例如，他们可能要求你遵照一个模版，或是要求你使用测试。\n如果你想做一个实质的贡献，在着手以前先开一个 Issue 提问。一个有帮助的做法是，在着手进行可能不被接受的工作以前，先对项目观察一段时间（在 GitHub 上，你可以点击“Watch”来获取所有会话的通知），并且了解团体成员。\n\n找一个你经常使用的项目，在 GitHub 上“ Watch”它，阅读每个 Issue 和使用 pull request，你能从中学到很多。— @gaearon 参与项目\n开一个 Issue\n通常，在以下情况下你应该开一个 Issue ：\n\n报告一个你不能自行解决的错误\n讨论一个高级的主题或想法（比如团体、愿景、策略）\n推荐一个新特性或其它有关项目的想法\n\nIssue 沟通的诀窍：\n\n如果你看到一个你想着手处理的开放 Issue ，在 Issue 中作评论来让人们知道你在处理它。那样，人们就不太可能重复你的工作。\n如果一个 Issue 是一段时间以前开放的，可能它正在其它地方被处理，或已经被解决了，所以在开始工作前，在评论里要求做个确认。\n如果你开了一个 Issue ，后来自己想出了答案，在 Issue 中作评论来让人们知道，然后关闭该 Issue 。即使对结果的文档化也是对项目的一种贡献。\n\n使用 pull request\n通常，在以下情况下你应该使用 pull request：\n\n提交细小的修正（例如拼写错误、断开的链接或明显的错误）\n对已经在 Issue 中要求的，或你已经讨论过的贡献开始工作\n\n使用 pull reques 并不一定代表已完成的工作。在早期开一个 pull request 往往更好，这样其他人可以观察你的进展或给予反馈。只要在主题行里把它标记为“WIP”（进行中的工作）。以后你总能添加更多的提交。\n如果项目是在 GitHub 上，这是怎样提交一个 pull request 的方法：\n\nFork仓库并把它克隆到本地。通过把原始“上游”仓库添加为远程操作把它与你的本地连接。经常拉入（pull in）“上游”的改变，这样你保持在最新状态，这样的话，当你提交你的 pull request 时就不太可能出现合并冲突。（更详细的操作指南见这里。）\n为你的编辑创建一个分支\n在你的 pull request 中引用相关的 Issue 或支持文档（比如，“Closes #37.”）\n如果你的变更包括 HTML/CSS 中的差异，把之前和之后的屏幕截图包含进去。把图像拖放到你的 pull request 主体中。\n测试你的变更！如果有现存的测试，对你的变更运行这些测试，如果需要，创建新的测试。无论测试存在与否，确保你的变更不会破坏现有的项目。\n\n尽你所能以项目的风格做贡献。这可能意味着相比你自己的仓库使用不同的缩进、分号或注释，但这样使维护者的合并、其他人的理解和将来的维护变得更简单。\n\n\n\n如果你第一次使用 Pull Request，查看“ 做一个 Pull Request ”，这是 @kentcdodds 创建的，可作为一个免费的演练资源。\n \n第六部分：提交贡献之后会发生什么\n你做到了！祝贺你成为一名开源贡献者。我们希望这是许多次中的第一次。\n在你提交贡献之后，会发生以下情形之一：\n😭  你没有得到回应。\n但愿你在做贡献以前检查过项目的活跃迹象。然而，即使对一个活跃的项目来说，也有可能你的贡献得不到回应。\n如果超过一星期了你还没有得到回应，有理由在同一个线程（thread）中礼貌地回复，请某人做审查。如果你知道审查你的贡献的合适的人的名字，你可以在线程中@-提到他们。\n不要私下接触那个人；记住，公开的交流对开源项目来说至关重要。\n如果你做了一个礼貌的“碰撞”，还是没人回应，那可能永远也不会有人回应。这种滋味不好受，但不要因此气馁。每个人都经历过这种事！你没有得到回应可能有很多原因，包括可能不受你控制的个人境况。试着找到另一个项目或方式做贡献。如果有什么理由来解释为什么在其它团体成员投入这个项目此并作出回应前不要在贡献项目上投入太多时间的话，这就是很好的一个。\n🚧 某人要求对你的贡献做改动。\n你常常会被要求对你的贡献做改动，无论是对你的想法范围的反馈，还是对你代码的改动。\n当某人要求做改动时，要作出响应。他们花了时间审查你的贡献。开了一个 pull request 然后就走掉是不好的表现。如果你不知道怎样做改动，研究该问题，然后如果需要的话寻求帮助。\n如果你不再有时间在该 Issue 上工作（例如，如果会话已经进行了几个月，你的境况发生了变化），让维护者知晓，这样他们就不再期待一个回应。其他人可能乐于接手。\n👎 你的贡献没被接受。\n最后，你的贡献可能会，也可能不会被接受。但愿你没有在那里面做太多的工作。如果你不确定它为什么没被接受，要求维护者的反馈和说明是完全合理的。然而最终，这是他们的决定，你需要表示尊重。不要争论或怀有敌意。如果你意见不同，始终欢迎你 fork 并在你自己的版本上工作。\n🎉 你的贡献被接受了。\n好极了！你成功地做了开源贡献！\n \n第七部分：你做到了！\n不管你刚刚完成了你的第一个开源贡献，或者你正在寻找新的贡献方式，我们希望你收到鼓舞并采取行动。即使你的贡献没有被接受，当维护者付出努力帮助你时，不要忘了说声谢谢。开源正是由像你一样的人造就的：选一个 Issue 、开 pull request 、评论，或逐一举手击掌。\n\r\n        \r\n        \r\n        \n    \n         3 赞\n         12 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：效楚\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            简介还没来得及写 :）        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  12        \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 12, "title": "新人必看的开源指南：如何参与并做贡献", "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2017/05/b94146f42c8e0ca2b0f04ed89b59053c.jpg"], "suggest": [{"weight": 10, "input": ["新人", "必看", "参与", "开源", "贡献", "如何", "指南"]}, {"weight": 7, "input": ["开源", "开发"]}], "tags": "开发,开源"}
2017-06-04 21:38:29 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"86b2553cf3632cf939fdb658d74ed475","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:29 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 12,
 'comment_num': 0,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/qdoverture">效楚</a> 翻译，<a '
            'href="http://www.jobbole.com/members/paradise_FD">郑芸</a> '
            '校稿。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="https://opensource.guide/how-to-contribute/">Open Source '
            'Guides</a>。欢迎加入<a target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p>【伯乐在线导读】：对程序员而言，参与开源有着难以置信的回报，比如有一个自己的出色开源项目，在技术面试能增色很多，极大加分。所以，越来越多的人在参与到开源运动中来。但对应很多新手来说，如何参与开源做出第一个贡献，如何发起一个新项目，却成了一个问题。</p>\n'
            '<p>2月14日，GitHub '
            '官博发文宣告正式推出「开源指南」，旨在方便想参与到开源的个人和组织。「开源指南」是一个系列集合，内容简洁明了，分了 10 '
            '个方面。伯乐在线在本文中翻译了首篇。</p>\n'
            '<p>\xa0</p>\n'
            '<h1 style="text-align: center;">怎样为开源做贡献</h1>\n'
            '<p style="text-align: center;"><span style="color: '
            '#808080;"><span id="pos_placeholder" style="width: 0px; height: '
            '0px; margin: 0px; padding: '
            '0px;"></span>想为开源做贡献吗？这是一份写给新手和老手的开源贡献指南。</span></p>\n'
            '<p><img class="aligncenter" '
            'src="https://opensource.guide/assets/images/illos/contribute.svg" '
            'alt="How to Contribute to Open Source Illustration" width="600" '
            'height="411"></p>\n'
            '<p>\xa0</p>\n'
            '<h2 style="text-align: center;">第一部分：为何要为开源做贡献？</h2>\n'
            '<p><img class="pquote-avatar aligncenter" '
            'src="https://avatars2.githubusercontent.com/u/134585?v=3&amp;s=400" '
            'alt="avatar" width="168" height="168"></p>\n'
            '<blockquote><p>在 freenode '
            '的工作使我学到了很多技能，后来我将它们运用到我的大学学习和实际工作中。我认为在开源项目中的工作对我的帮助和它对项目本身的帮助一样大！— '
            '<a href="https://github.com/errietta">@errietta</a>，<a '
            'href="https://www.errietta.me/blog/open-source/">《为什么我热爱为开源软件做贡献》</a></p></blockquote>\n'
            '<p>为开源做贡献是学习、教学和在你能想象的任何技能上积累经验的有益途径。</p>\n'
            '<p>为什么人们为开源做贡献？有许多理由！</p>\n'
            '<h3>提升现有技能</h3>\n'
            '<p>不管是写代码、用户界面设计、平面造型设计、写作，或是规划，如果你在寻找实践机会，在开源项目中总有适合你的任务。</p>\n'
            '<h3>结识爱好相似的人</h3>\n'
            '<p>拥有热情而友好的团体组织的开源项目使人们在多年以来常常回访。许多人通过参与开源成了一辈子的好朋友，无论是在会议中碰面还是深夜里线上聊玉米煎饼。</p>\n'
            '<h3>找到导师和教导他人</h3>\n'
            '<p>在共享的项目中与他人一起工作，意味着你必须解释你做事的方式，此外还要寻求他人的帮助。学习和教导，对参与其中的所有人都是一种满足的活动。</p>\n'
            '<h3>开发公开作品，帮你提升声望（和事业）</h3>\n'
            '<p>根据定义，你的所有开源工作都是公开的，这意味着你得到了免费的样本，可以带到任何地方，作为你能做事情的证明。</p>\n'
            '<h3>学习交际能力</h3>\n'
            '<p>开源提供了练习领导才能和管理技能的机会，比如解决冲突、组织不同团队的人，和给工作排优先级。</p>\n'
            '<h3>人人都可以参与改变，不分大小</h3>\n'
            '<p>你不一定要成为终生的贡献者才能享受参与开源的乐趣。你是否曾在网站上看到一个拼写错误，希望某人会修正它？在开源项目中，你就能做到这点。开源帮助人们在他们的生命中和他们对世界的体验中感受到力量，这本身是令人满足的。</p>\n'
            '<p>\xa0</p>\n'
            '<h2 style="text-align: center;">第二部分：贡献意味着什么</h2>\n'
            '<p><span style="color: '
            '#808080;">如果你是一个开源贡献方面的新人，这个过程可能是令人生畏的。怎么找到合适的项目？不会写代码怎么办？某件事出岔子了会怎样？</span></p>\n'
            '<p>不用担心！有各种各样的方法参与开源项目，并且有几个诀窍会帮你最大程度地运用你的经验。</p>\n'
            '<h3>你不一定要贡献代码</h3>\n'
            '<p>关于为开源做贡献，一个常见的误解是你必须贡献代码。事实上，常常是项目中非代码的部分<a '
            'href="https://github.com/blog/2195-the-shape-of-open-source">大多被遗漏和忽视了</a>。通过参与提供非代码的贡献，你会给项目做出巨大的帮助！</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/02/7ab7f1874d4a25554fee3293e617dafd.png"><img '
            'class="wp-image-63251 size-thumbnail aligncenter" '
            'src="http://jbcdn2.b0.upaiyun.com/2017/02/7ab7f1874d4a25554fee3293e617dafd-150x150.png" '
            'alt="49038" width="150" height="150"></a></p>\n'
            '<blockquote><p><span style="color: #808080;">我因为在 CocoaPods '
            '中的工作出名，但大多数人不知道实际上我在 CocoaPods '
            '工具本身上并没有做任何实际的工作。我在这个项目上花费的时间，大部分是在做诸如文档和品牌推广工作之类的事情。</span><span '
            'style="color: #808080;">— <a '
            'href="https://github.com/orta">@orta</a>，<a '
            'href="https://realm.io/news/orta-therox-moving-to-oss-by-default/">《</a></span><a '
            'href="https://realm.io/news/orta-therox-moving-to-oss-by-default/">默认转向开源软件</a><span '
            'style="color: #808080;"><a '
            'href="https://realm.io/news/orta-therox-moving-to-oss-by-default/">》</a></span></p></blockquote>\n'
            '<p>即使你是一名开发者，非代码贡献也是参与项目并结识其它团体成员的极好方式。建立那样的关系，将给予你在项目的其它部分工作的机会。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/02/6f9a20eea8324162d89ab86e19ff52f0.jpg"><img '
            'class="size-thumbnail wp-image-63252 aligncenter" '
            'src="http://jbcdn2.b0.upaiyun.com/2017/02/6f9a20eea8324162d89ab86e19ff52f0-150x150.jpg" '
            'alt="54418" width="150" height="150"></a></p>\n'
            '<blockquote><p><span style="color: #808080;">我初次接触 Python 开发组（也叫做 '
            'python-dev）是在 2002 年 6 月 17 日，我就接受我的补丁事宜向邮件列表发电子邮件。很快我发现了开源中的一个 '
            'bug，并决定把这个错误写成邮件摘要汇报给小组。我对这个主题做了澄清，他们为麻烦我做这件事而表示了大大的歉意。但更关键的是，当某人指出的某些东西需要修正时，我能够看到的。</span><span '
            'style="color: #808080;">— <a '
            'href="https://github.com/brettcannon">@brettcannon</a>, <a '
            'href="https://github.com/open-source/stories/brettcannon">“Maintainer '
            'Stories”</a></span></p></blockquote>\n'
            '<h3>你是否喜欢活动规划？</h3>\n'
            '<ul>\n'
            '<li>组织关于项目的专题讨论会或聚会，<a '
            'href="https://github.com/nodeschool/organizers/issues/406">就像 '
            '@fzamperin 为 NodeSchool 所做的那样</a>。</li>\n'
            '<li>组织项目会议（如果他们有的话）</li>\n'
            '<li>帮助团体成员找到合适的会议并提交演讲提议</li>\n'
            '</ul>\n'
            '<h3>你是否喜欢设计？</h3>\n'
            '<ul>\n'
            '<li>调整布局以提高项目的可用性</li>\n'
            '<li>做用户调查以重新组织和改善项目的导航和菜单，<a '
            'href="https://www.drupal.org/community-initiatives/drupal-core/usability">就像 '
            'Drupal 建议的那样</a>。</li>\n'
            '<li>制订风格指南以帮助项目拥有一致的视觉设计</li>\n'
            '<li>为T恤或新的 logo 绘画，<a '
            'href="https://github.com/hapijs/contrib/issues/68">就像 hapi.js '
            '的贡献者所做的那样</a>。</li>\n'
            '</ul>\n'
            '<h3>你是否喜欢写作？</h3>\n'
            '<ul>\n'
            '<li>编写和改进项目文档</li>\n'
            '<li>组织一个示例文件夹，展示怎样使用项目</li>\n'
            '<li>开办项目通讯，或从邮件列表中组织重要内容</li>\n'
            '<li>为项目编写教程，<a '
            'href="https://github.com/pypa/python-packaging-user-guide/issues/194">就像 '
            'pypa 的贡献者所做的那样</a>。</li>\n'
            '<li>翻译项目的文档</li>\n'
            '</ul>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/02/856aa51181b62e90b4a511b9823ed53a.jpg"><img '
            'class="size-thumbnail wp-image-63255 aligncenter" '
            'src="http://jbcdn2.b0.upaiyun.com/2017/02/856aa51181b62e90b4a511b9823ed53a-150x150.jpg" '
            'alt="853712" width="150" height="150"></a></p>\n'
            '<blockquote><p>说真的，“文档”极其重要。到目前为止，Babel（Kittens '
            '的开源项目）的文档一直很棒，已经成为了它的杀手级特性。但是肯定还需要做一些工作加以完善，甚至加一些段落上去，对此我非常感激。<span '
            'style="color: #808080;">— <a '
            'href="https://github.com/kittens">@kittens</a>，<a '
            'href="https://github.com/babel/babel/issues/1347">《需要贡献者》</a></span></p></blockquote>\n'
            '<h3>你是否喜欢组织？</h3>\n'
            '<ul>\n'
            '<li>链接重复的 Issue，给出新的 Issue 标签建议，让事情井井有条</li>\n'
            '<li>检查开放的 Issue ，提议关闭旧的 Issue ，<a '
            'href="https://github.com/Leaflet/Leaflet/issues/4528#issuecomment-216520560">就像 '
            '@nzakas 为 eslint 所做的那样</a></li>\n'
            '<li>在最近开放的 Issue 中提有助于澄清的问题，把讨论向前推进</li>\n'
            '</ul>\n'
            '<h3>你是否喜欢写代码？</h3>\n'
            '<ul>\n'
            '<li>找一个开放的 Issue 着手处理，<a '
            'href="https://github.com/Leaflet/Leaflet/issues/4528#issuecomment-216520560">就像 '
            '@dianjin 为 Leaflet 所做的那样</a></li>\n'
            '<li>问问你是否能帮忙写一个新特性</li>\n'
            '<li>自动化项目的设置</li>\n'
            '<li>提升工具和测试</li>\n'
            '</ul>\n'
            '<h3>你是否喜欢帮助他人？</h3>\n'
            '<ul>\n'
            '<li>在诸如 Stack Overflow（<a '
            'href="http://stackoverflow.com/questions/18664074/getting-error-peer-authentication-failed-for-user-postgres-when-trying-to-ge">就像这个 '
            'Postgres 的例子一样</a>）或 reddit 之类的地方回答关于项目的问题</li>\n'
            '<li>在开放的 Issue 中为人们回答问题</li>\n'
            '<li>帮忙主持讨论版或会话通道（conversation channels）</li>\n'
            '</ul>\n'
            '<h3>你是否喜欢为他人的代码提供帮助？</h3>\n'
            '<ul>\n'
            '<li>审查他人提交的代码</li>\n'
            '<li>为如何使用项目写教程</li>\n'
            '<li>为其它贡献者提供指导，<a '
            'href="https://github.com/rust-lang/book/issues/123#issuecomment-238049666">就像 '
            '@ereichert 在 Rust 上为 @bronzdoc 所做的那样</a></li>\n'
            '</ul>\n'
            '<h3>你并不非得要在软件项目中工作！</h3>\n'
            '<p>虽然“开源”通常指软件，但你可以在任何事情上协作。有书籍、食谱、清单和课程是作为开源项目开发的。</p>\n'
            '<p>例如：</p>\n'
            '<ul>\n'
            '<li><strong><a '
            'href="https://github.com/sindresorhus">@sindresorhus</a> '
            '</strong>组织了一个<a '
            'href="https://github.com/sindresorhus/awesome">\xa0Awesome '
            '的清单列表</a></li>\n'
            '<li><strong><a href="https://github.com/h5bp">@h5bp</a> '
            '</strong>为前端开发求职者维护了一个<a '
            'href="https://github.com/h5bp/Front-end-Developer-Interview-Questions">可能的面试问题的清单</a></li>\n'
            '<li><strong><a '
            'href="https://github.com/stuartlynn">@stuartlynn</a></strong> 和 '
            '<strong><a '
            'href="https://github.com/nicole-a-tesla">@nicole-a-tesla</a></strong> '
            '制作了一份<a href="https://github.com/stuartlynn/puffin_facts">关于 '
            'puffins 的有趣事实的集合</a></li>\n'
            '</ul>\n'
            '<p>即使你是一名软件开发者，在文档项目上的工作也能帮你在开源方面起步。在与代码无关的项目中工作常常不那么令人生畏，而且协作的过程将增强你的自信和经验。</p>\n'
            '<p>\xa0</p>\n'
            '<h2 style="text-align: center;">第三部分：熟悉一个新项目</h2>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/02/a98fc32a297faeb08c5f5ad46680c1fa.jpg"><img '
            'class="size-thumbnail wp-image-63256 aligncenter" '
            'src="http://jbcdn2.b0.upaiyun.com/2017/02/a98fc32a297faeb08c5f5ad46680c1fa-150x150.jpg" '
            'alt="1179362" width="150" height="150"></a></p>\n'
            '<blockquote><p><span style="color: #808080;">如果你去看一个 Issue '
            '追踪器，发现事情看起来令人困惑，并不是只有你这样。这些工具需要大量的隐性知识，但人们能帮你驾驭它，你也能向他们提问。</span><span '
            'style="color: #808080;">— <a '
            'href="https://github.com/shaunagm">@shaunagm</a>，<a '
            'href="http://readwrite.com/2014/10/10/open-source-diversity-how-to-contribute/">《怎样为开源做贡献》</a></span></p></blockquote>\n'
            '<p>对任何超过修正拼写错误的事情来说，为开源做贡献就像在社交聚会上走向一群陌生人。如果当他们正在深入讨论金鱼时，你开始谈论美洲鸵，他们可能有点奇怪地看着你。</p>\n'
            '<p>在带着你自己的建议盲目投入以前，先从学习怎样观察聚会中的人，参与他们讨论的话题开始。这样做能增加你的想法被注意到和听取的可能性。</p>\n'
            '<h3>开源项目剖析</h3>\n'
            '<p>每个开源团体都是不同的。</p>\n'
            '<p>在一个开源项目中花了若干年时间意味着你已经了解了一个开源项目。转向一个不同的项目，你可能会发现词汇、规范和沟通方式完全不同。</p>\n'
            '<p>即便如此，许多开源项目遵循着相似的组织结构。理解不同的团体角色和总体过程将帮你迅速熟悉任何新项目。</p>\n'
            '<p>一个典型的开源项目有以下几类人：</p>\n'
            '<ul>\n'
            '<li><strong>作者（Author）：</strong>创建该项目的人或组织。</li>\n'
            '<li><strong>所有者（Owner）：</strong>对组织或仓库（repository）拥有行政所有权的人（并不总和原始作者是同一个人）</li>\n'
            '<li><strong>维护者（Maintainers）：</strong>对推动愿景和管理项目的组织方面负有责任的贡献者。（他们可能也是项目的作者或所有者）</li>\n'
            '<li><strong>贡献者（Contributors）：</strong>每个对项目做出过某种贡献的人。</li>\n'
            '<li><strong>团体成员（Community '
            'Members）：</strong>使用项目的人。他们可能在对话中保持活跃或者对项目的方向表达他们的主张。</li>\n'
            '</ul>\n'
            '<p>大的项目可能还有下属委员会或工作组，他们致力于不同的任务，比如工具、分类（triage）、团体节制（community '
            'moderation）和活动组织。在项目的网站上寻找“team”页面，或者在仓库（repository）里寻找治理文档（governance '
            'documentation），来找到此类信息。</p>\n'
            '<p>项目也有文档。这些文件通常列在仓库（repository）的顶层。</p>\n'
            '<ul>\n'
            '<li><strong>许可证（LICENSE）：</strong>根据定义，每个开源项目必须有一个<a '
            'href="https://choosealicense.com/">开源许可证</a>。如果项目没有许可证，那它就不是开源的。</li>\n'
            '<li><strong>自述文件（README）：</strong>自述文件是迎接项目的新团体成员的操作指南手册。它解释了为什么项目是有用的以及如何开始。</li>\n'
            '<li><strong>贡献（CONTRIBUTING）：</strong>自述文件帮助人们使用项目，而贡献文件帮助人们为项目做贡献。它解释了需要什么类型的贡献者以及这个过程是怎么工作的。虽然不是每个项目都有贡献文件，但它的存在表明这是一个欢迎做贡献的项目。\n'
            '<ul>\n'
            '<li><strong>行动守则（CODE_OF_CONDUCT）：</strong>行动守则为参与者的相关行为设定了基本准则，并且帮助促进一个友好而热情的环境。虽然不是每个项目都有行动守则文件，但它的存在表明这是一个欢迎做贡献的项目。</li>\n'
            '<li><strong>其它文档：</strong>可能有另外的文档，比如教程、演练（walkthroughs）或管理策略，尤其是在大项目中。</li>\n'
            '</ul>\n'
            '</li>\n'
            '</ul>\n'
            '<p>最后，开源项目使用以下工具来组织讨论。通读档案文件将为你很好地描绘该团体是怎样思考和工作的。</p>\n'
            '<ul>\n'
            '<li><strong> Issue 追踪器（Issue tracker）：</strong>人们讨论项目相关 Issue '
            '的地方。</li>\n'
            '<li><strong>Pull requests：</strong>人们讨论和审查进行中的更改的地方。</li>\n'
            '<li><strong>讨论板或邮件列表：</strong>有些项目可能为会话主题使用这些通道（例如，“我怎样……”或“你认为……怎么样”，而不用 '
            'bug 报告或特性请求）。其它项目为所有会话使用 Issue 追踪器。</li>\n'
            '<li><strong>同步聊天通道（Synchronous chat '
            'channel）：</strong>有些项目为临时会话、协作和快速交流使用聊天通道（比如 Slack 或 IRC）。</li>\n'
            '</ul>\n'
            '<p>\xa0</p>\n'
            '<h2 style="text-align: center;">第四部分：找到一个要做贡献的项目</h2>\n'
            '<p style="text-align: center;"><span style="color: '
            '#808080;">既然你已经弄明白开源项目是怎样工作的，是时候找到一个要做贡献的项目了！</span></p>\n'
            '<p>如果你之前从未为开源做过贡献，听听美国总统约翰·F·肯尼迪的建议，他曾经说：“不要问你的国家能为你做什么-问问你能为你的国家做什么。”</p>\n'
            '<p>为开源做贡献在所有层面和不同项目间都能发生。你不必对你的第一个确切的贡献是什么，或它看起来是什么样想得过多。</p>\n'
            '<p>相反地，从考虑你已经在使用的或想要使用的项目开始。你会积极地做贡献的项目正是你发现自己会回访的项目。</p>\n'
            '<p>在那些项目里，无论何时你发现自己想到某件事可以变的更好或不同，按照你的直觉行动吧。</p>\n'
            '<p>开源不是一个排外的俱乐部；它是由和你一样的人做出来的。“开源”只是一个花哨的术语，为了把世界上的问题都作为可修正的来处理。</p>\n'
            '<p>你可能会细看一份自述文件，发现一个断开的链接或一个拼写错误。或者，你是一个新用户，你发现某样东西毁坏了，或是一个 Issue '
            '你认为实际上应该在文档中。与其忽略它并继续，或请求其他人修正它，不如看看你能不能参与帮忙。这就是开源的真谛！</p>\n'
            '<blockquote><p>对开源的<a '
            'href="http://www.igor.pro.br/publica/papers/saner2016.pdf">非正式贡献中，有28%</a>是文档，比如拼写错误修正、重排格式，或翻译。</p></blockquote>\n'
            '<p>你也可以使用下列资源之一来帮你发现新项目：</p>\n'
            '<ul>\n'
            '<li><a href="https://github.com/explore/">GitHub '
            'Explore</a></li>\n'
            '<li><a href="http://www.firsttimersonly.com/">First Timers '
            'Only</a></li>\n'
            '<li><a href="https://yourfirstpr.github.io/">Your First '
            'PR</a></li>\n'
            '<li><a href="https://www.codetriage.com/">CodeTriage</a></li>\n'
            '<li><a href="https://24pullrequests.com/">24 Pull '
            'Requests</a></li>\n'
            '<li><a href="http://up-for-grabs.net/">Up For Grabs</a></li>\n'
            '<li><a '
            'href="https://contributor.ninja/">Contributor-ninja</a></li>\n'
            '</ul>\n'
            '<h3>做贡献前的一份检查表</h3>\n'
            '<p>当你找到一个你想要做贡献的项目，做一个快速的浏览来确认该项目适合接受贡献。否则，你的努力工作可能永远得不到回应。</p>\n'
            '<p>这是一份便于使用的检查表，用来评估一个项目对新贡献者来说好不好。</p>\n'
            '<p><strong>满足开源的定义</strong></p>\n'
            '<ul>\n'
            '<li>它有没有许可证？通常，这是在仓库（repository）根目录里的一个叫做 LICENSE 的文件。</li>\n'
            '</ul>\n'
            '<p><strong>项目积极地接受贡献</strong></p>\n'
            '<p>看看主分支上的提交活动。在 GitHub 上，你可以在仓库的主页上看到此信息。</p>\n'
            '<ul>\n'
            '<li>最新的提交（commit）是在什么时候？</li>\n'
            '<li>项目有多少贡献者？</li>\n'
            '<li>人们提交频繁程度？（在 GitHub 上，你可以通过点击顶部横条里的“Commits”来找到此信息）</li>\n'
            '</ul>\n'
            '<p>下一步，看看项目的 Issue 。</p>\n'
            '<ul>\n'
            '<li>有多少开放的 Issue ？</li>\n'
            '<li>当 Issue 开放时，维护者是否快速地回应？</li>\n'
            '<li>对于 Issue 有没有活跃的讨论？</li>\n'
            '<li>Issue 是最近的吗？</li>\n'
            '<li>Issue 是否得到关闭？（在 GitHub 上，点击 Issue 页面上的“closed”标签来看已关闭的 Issue '
            '。）</li>\n'
            '</ul>\n'
            '<p>现在对项目的 pull requests做同样的动作。</p>\n'
            '<ul>\n'
            '<li>有多少开放的 pull requests？</li>\n'
            '<li>当开放pull requests时， 维护者是否快速地回应？</li>\n'
            '<li>对于pull requests有没有活跃的讨论？</li>\n'
            '<li>pull requests是最近的吗？</li>\n'
            '<li>pull requests被合并是在多久之前？（在 GitHub 上，点击pull '
            'requests页面上的“closed”标签来看已关闭的pull requests。）</li>\n'
            '</ul>\n'
            '<h3>热情的项目</h3>\n'
            '<p>友好而热情的项目标志着他们乐于接受新的贡献者。</p>\n'
            '<ul>\n'
            '<li>维护者对于 Issue 中的问题是否作出有帮助的回应？</li>\n'
            '<li>人们在 Issue 、讨论板和聊天（例如 IRC 或 Slack）中是否友好？</li>\n'
            '<li>Pull Requests(PR) 功能是否得到审查（reviewed）？</li>\n'
            '<li>维护者对人们的贡献是否表示感谢？</li>\n'
            '</ul>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/02/bfb4846c8eb1da9c00196e4ff6e7a4bc.png"><img '
            'class="size-thumbnail wp-image-63257 aligncenter" '
            'src="http://jbcdn2.b0.upaiyun.com/2017/02/bfb4846c8eb1da9c00196e4ff6e7a4bc-150x150.png" '
            'alt="401111" width="150" height="150"></a></p>\n'
            '<blockquote><p>无论何时你看一个长的讨论帖，抽查一下较晚进入这个帖子的核心开发者的反应。他们是否作出建设性的总结，在做出决策和付诸实施时，是否同时还保持礼貌？如果你看到发生许多口水仗，那通常表明精力用在了争论而不是开发上。— '
            '<a href="https://github.com/kfogel">@kfogel</a>，<a '
            'href="http://producingoss.com/en/evaluating-oss-projects.html">创作开源软件</a></p></blockquote>\n'
            '<p>\xa0</p>\n'
            '<h2 style="text-align: center;">第五部分：怎样提交贡献</h2>\n'
            '<p><span style="color: '
            '#808080;">你已经找到一个你喜欢的项目，并且你已经准备好作出贡献。最后！这里告诉你怎样以正确的方式作出你的贡献。</span></p>\n'
            '<h3>有效的沟通</h3>\n'
            '<p>不管你是一次性的贡献者或是试着加入一个团体，与他人一起工作是你将在开源中发展的最重要的技能之一。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/02/e9b165e406b7ab077c16e1956b46ec80.jpg"><img '
            'class="size-thumbnail wp-image-63258 aligncenter" '
            'src="http://jbcdn2.b0.upaiyun.com/2017/02/e9b165e406b7ab077c16e1956b46ec80-150x150.jpg" '
            'alt="7693422" width="150" height="150"></a></p>\n'
            '<blockquote><p>作为一个新贡献者，我很快认识到，如果我想要能关闭 Issue '
            '，我必须提问。我浏览了代码库。一旦我对发生的事有了一些认识，我请求更多的指点。就是这样！在得到我需要的所有相关细节后，我能解答 '
            'Issue 了。—<a href="https://github.com/shubheksha"> '
            '@shubheksha</a>，<a '
            'href="https://medium.freecodecamp.com/a-beginners-very-bumpy-journey-through-the-world-of-open-source-4d108d540b39#.pcswr2e78">一个新手在开源世界中的颠簸旅途</a></p></blockquote>\n'
            '<p>在你打开一个 Issue 或使用pull '
            'request，或是在聊天中提问以前，记住这些要点可以使你的想法有效地被别人理解。</p>\n'
            '<p><strong>给出上下文。</strong>帮助他人快速赶上进度。如果你遇到一个错误，解释你正准备做什么和怎么重现它。如果你提出一个新主张，解释为什么你认为它对项目有用（不只是对你！）。</p>\n'
            '<blockquote><p>😇 “当我做 Y 时 X 没有发生”<br>\n'
            '😢 “X 坏了！请修好。”</p></blockquote>\n'
            '<p><strong>事先做好功课。</strong>不懂没什么，但要表现出你试过了。在求助之前，务必查看项目的自述文件、文档、 '
            'Issue （开放的或关闭的）、邮件列表，并且在因特网上搜索答案。当你证明你在试着学习时，人们会表示赞赏。</p>\n'
            '<blockquote><p>😇“我不确定怎么实现 X。我查过了帮助文档，没找到哪里有提到。”<br>\n'
            '😢“我怎么做 X？”</p></blockquote>\n'
            '<p><strong>请求要简短而直接。</strong>和发送电子邮件很像，每一个贡献，不管多简单或多有帮助，都需要某个其他人的审查。许多项目收到的请求比能提供帮助的人多。简明一点。你会提高某人能帮到你的可能性。</p>\n'
            '<blockquote><p>😇“我想写一份 API 教程。”<br>\n'
            '😢“前几天我正在高速公路上开车，停下来加油，然后我对我们应该做的事情有了这个惊人的想法，但在我解释这个想法之前，让我向你展示……”</p></blockquote>\n'
            '<p><strong>交流要对公众可见。</strong>尽管有点诱人，但不要私下联系维护者，除非你需要分享敏感信息（比如安全问题或严重的违反行为）。当你使对话对公众可见时，更多的人能从你的交流中学习并受益。讨论本身也可能是一种贡献。</p>\n'
            '<blockquote><p>😇（作为评论）“@-maintainer 你好！我们在这个 pull request '
            '功能上怎么继续？”<br>\n'
            '😢（作为一封电子邮件）“你好，抱歉通过电子邮件麻烦你了，但我不知道你有没有可能审查我的 pull request '
            '”</p></blockquote>\n'
            '<p><strong>可以提问（但要耐心！）。</strong>每个人在某个时刻都曾是项目的新人，而且即使有经验的贡献者查看新项目时也需要赶上进度。由此类推，即使长期贡献者也并非总是对项目的每个部分都熟悉。对他们表现出与你希望他们对你表现出的同样的耐心。</p>\n'
            '<blockquote><p>😇“谢谢你研究这个错误。我按你的建议做了。这是输出结果。”<br>\n'
            '😢 “为什么你不能解决我的问题？这不是你的项目吗？”</p></blockquote>\n'
            '<p><strong>尊重团体的决定。</strong>你的想法可能与项目的优先考虑或愿景不同。他们可能提供反馈或决定不执行你的想法。你应该讨论并寻求妥协，而维护者必须花比你更长的时间适应你的决定。如果你不同意他们的方向，你总是可以致力于你自己的 '
            'fork 或启动你自己的项目。</p>\n'
            '<blockquote><p>😇“我对你不能支持我的用例感到失望，但既然你已经解释了它只影响一小部分用户，我理解为什么了。谢谢倾听。”<br>\n'
            '😢“为什么你不支持我的用例？这无法接受！”</p></blockquote>\n'
            '<p><strong>最重要的是，要优雅。</strong>开源由来自世界各地的合作者组成。上下文在跨越语言、文化、地理和时区时会丢失。另外，书面交流使得传递语调或心情更困难。假设这些对话的意图都是好的。礼貌的把想法推后，要求更多的上下文，或进一步澄清你的态度，这些都是好的做法。使因特网成为比你发现它时更好的地方。</p>\n'
            '<h3>收集上下文</h3>\n'
            '<p>在做任何事之前，做一个快速的检查，确保你的想法没有在其它地方被讨论过。略读项目的自述文件、 Issue '
            '（开放的和关闭的）、邮件列表和 Stack '
            'Overflow。你不一定要花几个小时检查一切，但对几个关键词的快速搜索会大有帮助。</p>\n'
            '<p>如果你在其它地方找不到你的想法，你已经准备好开始行动了。如果项目在 GitHub 上，你多半会通过开启一个 Issue '
            '或使用 pull request 来沟通：</p>\n'
            '<ul>\n'
            '<li><strong>Issues\xa0</strong>就像开启一个会话或讨论</li>\n'
            '<li><strong>使用 Pull requests\xa0</strong>是为了开始致力于一个解决方案</li>\n'
            '<li><strong>对于不重要的交流，</strong>比如一个澄清或操作方式问题，试着在 Stack '
            'Overflow、IRC、Slack 上提问，或是其它的聊天通道，如果项目有对应渠道的话</li>\n'
            '</ul>\n'
            '<p>在你开启一个 Issue 或\xa0使用 pull request 以前，检查项目的贡献文档（通常是一个叫做 '
            'CONTRIBUTING '
            '的文件，或者在自述文件里），看看你是否需要把特定的东西包含进去。例如，他们可能要求你遵照一个模版，或是要求你使用测试。</p>\n'
            '<p>如果你想做一个实质的贡献，在着手以前先开一个 Issue '
            '提问。一个有帮助的做法是，在着手进行可能不被接受的工作以前，先对项目观察一段时间（在 GitHub 上，<a '
            'href="https://help.github.com/articles/watching-repositories/">你可以点击“Watch”</a>来获取所有会话的通知），并且了解团体成员。</p>\n'
            '<p><a '
            'href="http://jbcdn2.b0.upaiyun.com/2017/02/26768d6d7f04e1cd4d44e8978deaa9da.png"><img '
            'class="size-thumbnail wp-image-63259 aligncenter" '
            'src="http://jbcdn2.b0.upaiyun.com/2017/02/26768d6d7f04e1cd4d44e8978deaa9da-150x150.png" '
            'alt="810438" width="150" height="150"></a></p>\n'
            '<blockquote><p>找一个你经常使用的项目，在 GitHub 上“\xa0Watch”它，阅读每个 Issue 和使用 '
            'pull request，你能从中学到很多。— <a '
            'href="https://github.com/gaearon">@gaearon</a> <a '
            'href="https://twitter.com/dan_abramov/status/819555257055322112">参与项目</a></p></blockquote>\n'
            '<h3>开一个 Issue</h3>\n'
            '<p>通常，在以下情况下你应该开一个 Issue ：</p>\n'
            '<ul>\n'
            '<li>报告一个你不能自行解决的错误</li>\n'
            '<li>讨论一个高级的主题或想法（比如团体、愿景、策略）</li>\n'
            '<li>推荐一个新特性或其它有关项目的想法</li>\n'
            '</ul>\n'
            '<p>Issue 沟通的诀窍：</p>\n'
            '<ul>\n'
            '<li><strong>如果你看到一个你想着手处理的开放 Issue ，</strong>在 Issue '
            '中作评论来让人们知道你在处理它。那样，人们就不太可能重复你的工作。</li>\n'
            '<li><strong>如果一个 Issue '
            '是一段时间以前开放的，</strong>可能它正在其它地方被处理，或已经被解决了，所以在开始工作前，在评论里要求做个确认。</li>\n'
            '<li><strong>如果你开了一个 Issue ，后来自己想出了答案，</strong>在 Issue '
            '中作评论来让人们知道，然后关闭该 Issue 。即使对结果的文档化也是对项目的一种贡献。</li>\n'
            '</ul>\n'
            '<h3>使用 pull request</h3>\n'
            '<p>通常，在以下情况下你应该使用\xa0<strong>pull request</strong>：</p>\n'
            '<ul>\n'
            '<li>提交细小的修正（例如拼写错误、断开的链接或明显的错误）</li>\n'
            '<li>对已经在 Issue 中要求的，或你已经讨论过的贡献开始工作</li>\n'
            '</ul>\n'
            '<p>使用 pull reques 并不一定代表已完成的工作。在早期开一个 pull request '
            '往往更好，这样其他人可以观察你的进展或给予反馈。只要在主题行里把它标记为“WIP”（进行中的工作）。以后你总能添加更多的提交。</p>\n'
            '<p>如果项目是在 GitHub 上，这是怎样提交一个 pull request 的方法：</p>\n'
            '<ul>\n'
            '<li><strong><a '
            'href="https://guides.github.com/activities/forking/">Fork仓库</a></strong>并把它克隆到本地。通过把原始“上游”仓库添加为远程操作把它与你的本地连接。经常拉入（pull '
            'in）“上游”的改变，这样你保持在最新状态，这样的话，当你提交你的 pull request '
            '时就不太可能出现合并冲突。（更详细的操作指南见<a '
            'href="https://help.github.com/articles/syncing-a-fork/">这里</a>。）</li>\n'
            '<li>为你的编辑<strong>创建一个分支</strong></li>\n'
            '<li>在你的 pull request 中<strong>引用相关的 Issue '
            '</strong>或支持文档（比如，“Closes #37.”）</li>\n'
            '<li>如果你的变更包括 HTML/CSS '
            '中的差异，<strong>把之前和之后的屏幕截图包含进去</strong>。把图像拖放到你的 pull request '
            '主体中。</li>\n'
            '<li><strong>测试你的变更！</strong>如果有现存的测试，对你的变更运行这些测试，如果需要，创建新的测试。无论测试存在与否，确保你的变更不会破坏现有的项目。\n'
            '<ul>\n'
            '<li>尽你所能<strong>以项目的风格做贡献</strong>。这可能意味着相比你自己的仓库使用不同的缩进、分号或注释，但这样使维护者的合并、其他人的理解和将来的维护变得更简单。</li>\n'
            '</ul>\n'
            '</li>\n'
            '</ul>\n'
            '<p>如果你第一次使用<a href="http://makeapullrequest.com/">\xa0Pull '
            'Request</a>，查看<a href="http://makeapullrequest.com/">“</a><a '
            'href="http://makeapullrequest.com/">\xa0做一个 Pull Request</a>\xa0'
            '<a href="http://makeapullrequest.com/">”</a>，这是 <a '
            'href="https://github.com/kentcdodds"><strong>@kentcdodds '
            '</strong></a>创建的，可作为一个免费的演练资源。</p>\n'
            '<p>\xa0</p>\n'
            '<h2 style="text-align: center;">第六部分：提交贡献之后会发生什么</h2>\n'
            '<p><span style="color: '
            '#808080;">你做到了！祝贺你成为一名开源贡献者。我们希望这是许多次中的第一次。</span></p>\n'
            '<p>在你提交贡献之后，会发生以下情形之一：</p>\n'
            '<h3>😭 \xa0你没有得到回应。</h3>\n'
            '<p>但愿你在做贡献以前<a '
            'href="https://opensource.guide/how-to-contribute/#a-checklist-before-you-contribute">检查过项目的活跃迹象</a>。然而，即使对一个活跃的项目来说，也有可能你的贡献得不到回应。</p>\n'
            '<p>如果超过一星期了你还没有得到回应，有理由在同一个线程（thread）中礼貌地回复，请某人做审查。如果你知道审查你的贡献的合适的人的名字，你可以在线程中@-提到他们。</p>\n'
            '<p><strong>不要</strong>私下接触那个人；记住，公开的交流对开源项目来说至关重要。</p>\n'
            '<p>如果你做了一个礼貌的“碰撞”，还是没人回应，那可能永远也不会有人回应。这种滋味不好受，但不要因此气馁。每个人都经历过这种事！你没有得到回应可能有很多原因，包括可能不受你控制的个人境况。试着找到另一个项目或方式做贡献。如果有什么理由来解释为什么在其它团体成员投入这个项目此并作出回应前不要在贡献项目上投入太多时间的话，这就是很好的一个。</p>\n'
            '<h3>🚧 某人要求对你的贡献做改动。</h3>\n'
            '<p>你常常会被要求对你的贡献做改动，无论是对你的想法范围的反馈，还是对你代码的改动。</p>\n'
            '<p>当某人要求做改动时，要作出响应。他们花了时间审查你的贡献。开了一个 pull request '
            '然后就走掉是不好的表现。如果你不知道怎样做改动，研究该问题，然后如果需要的话寻求帮助。</p>\n'
            '<p>如果你不再有时间在该 Issue '
            '上工作（例如，如果会话已经进行了几个月，你的境况发生了变化），让维护者知晓，这样他们就不再期待一个回应。其他人可能乐于接手。</p>\n'
            '<h3>👎 你的贡献没被接受。</h3>\n'
            '<p>最后，你的贡献可能会，也可能不会被接受。但愿你没有在那里面做太多的工作。如果你不确定它为什么没被接受，要求维护者的反馈和说明是完全合理的。然而最终，这是他们的决定，你需要表示尊重。不要争论或怀有敌意。如果你意见不同，始终欢迎你 '
            'fork 并在你自己的版本上工作。</p>\n'
            '<h3>🎉 你的贡献被接受了。</h3>\n'
            '<p>好极了！你成功地做了开源贡献！</p>\n'
            '<p>\xa0</p>\n'
            '<h2 style="text-align: center;">第七部分：你做到了！</h2>\n'
            '<p>不管你刚刚完成了你的第一个开源贡献，或者你正在寻找新的贡献方式，我们希望你收到鼓舞并采取行动。即使你的贡献没有被接受，当维护者付出努力帮助你时，不要忘了说声谢谢。开源正是由像你一样的人造就的：选一个 '
            'Issue 、开 pull request 、评论，或逐一举手击掌。</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111204" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111204votetotal">3</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111204" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 12 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/qdoverture">效楚</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/qdoverture">\r\n'
            '\t\t\t<img '
            'src="http://jbcdn2.b0.upaiyun.com/2015/04/8fbdaaa5ea6d3b49c8c1c825aafeb5d9.png">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            简介还没来得及写 :）        </span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/qdoverture" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/qdoverture/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/qdoverture/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 12</a>        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2017/05/b94146f42c8e0ca2b0f04ed89b59053c.jpg'],
 'tags': '开发,开源',
 'thumb_up_num': 3,
 'title': '新人必看的开源指南：如何参与并做贡献',
 'url': 'http://blog.jobbole.com/111204/',
 'url_obj_id': '86b2553cf3632cf939fdb658d74ed475'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:33 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111200/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:33 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:33 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 513
2017-06-04 21:38:33 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:33 [elasticsearch] DEBUG: > TensorFlow 团队如何管理开源项目
2017-06-04 21:38:33 [elasticsearch] DEBUG: < {"tokens":[{"token":"tensorflow","start_offset":0,"end_offset":10,"type":"ENGLISH","position":0},{"token":"团队","start_offset":11,"end_offset":13,"type":"CN_WORD","position":1},{"token":"如何","start_offset":13,"end_offset":15,"type":"CN_WORD","position":2},{"token":"管理","start_offset":15,"end_offset":17,"type":"CN_WORD","position":3},{"token":"开源","start_offset":17,"end_offset":19,"type":"CN_WORD","position":4},{"token":"项目","start_offset":19,"end_offset":21,"type":"CN_WORD","position":5}]}
2017-06-04 21:38:33 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:33 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 262
2017-06-04 21:38:33 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:33 [elasticsearch] DEBUG: > IT技术,TensorFlow,开源
2017-06-04 21:38:33 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"tensorflow","start_offset":5,"end_offset":15,"type":"ENGLISH","position":1},{"token":"开源","start_offset":16,"end_offset":18,"type":"CN_WORD","position":2}]}
2017-06-04 21:38:33 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:33 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/ff65dbf752ac6cec76ddb579b61b1e66 HTTP/1.1" 200 175
2017-06-04 21:38:33 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/ff65dbf752ac6cec76ddb579b61b1e66 [status:200 request:0.012s]
2017-06-04 21:38:33 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111200/", "comment_num": 0, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t原文出处： Oreilly   译文出处：开源中国   \nTensorFlow 技术主管在这篇文章中和我们分享了他们团队管理开源项目的经验。\n开源不仅仅是把代码贡献出来，然后希望有人来使用它。我也知道这一点，不过在成为 Google TensorFlow 团队的成员后，我才认识到围绕一个软件构建一个社区所需要考虑的因素实在是很多。\n社区服务\n当一个新项目发布出来时，该项目唯一的专家就是编写这个项目的人。他们是唯一可以撰写文档和回答问题的人，而且他们可以最有效地改进软件。因此，我们这些 TensorFlow 团队中的核心成员也成为了项目扩大的瓶颈：毕竟我们无法马上完成任何事情。我们知道如何编写代码和文档，因为这些任务是我们日常工作的一部分。但另一方面，回答大量来自社区开发者的问题不是我们应该做的事，尽管我们也知道这对于项目的成功至关重要。\n为了保证用户可以获得所需要的答案，核心工程师团队的所有人都加入了轮流回答问题。团队成员可以选择解决 Stack Overflow 上带有 #tensorflow 标记的问题、在 GitHub 上审查 pull requests，分类 GitHub issues，处理同步外部和内部代码或追查测试失败的原因。\n通常，每个工程师每次对一个特定领域负责一个星期，以循环的方式轮流负责。因此，轮值的工程师在本周正常工作中的生产力会低很多，不过至少每个人工作被打断的频率降到了几个月一次。\nPull requests\n我们开源 TensorFlow 部分的目的是希望通过社区的贡献来改进它。到目前为止，我们已经拥有超过 400 个外部贡献者添加了代码，从小的文档修复到大型的添加，如支持 OS X GPU、OpenCL 的实现或 InfiniBand RDMA。首先，轮值的核心工程师必须对每项贡献都进行审查，以确定是否有价值。如果贡献通过初始审查，会触发一组 Jenkins 测试，以确保其不会导致任何故障。如果这些行为也通过审查后，值班的工程师可能会希望其他对这个领域更了解的工程师来看一看，所以这将会被转交给该专家进行审查。\nGitHub 全新的详细的代码审查工具在这个过程中提供了很大的帮助；没有它们之前，处理所有的个人意见是一件痛苦的事情。通常，大的 PRs 会在工作中保持一段时间，核心工程师会和一个或多个外部贡献者协同工作，在大家都满意后，PR 将会在 GitHub 中被合并，然后在下次运行同步时合并到我们的内部代码库中。\n代码许可协议\n作为我们自动的 pull request 的一部分，我们会将贡献者的 GitHub 账号与我们在 cla.developers.google.com 上的记录相匹配，以确保任何的外部贡献者都拥有代码许可协议（CLA）。我们的目标是确保整个代码库可在 Apache 2.0 协议下准确无误地分发。当 pull request 的轮值工程师要对出现的所有问题进行整理时，如果一个 pull request 内部关联了不同的邮箱，或是贡献者需要以公司的身份登录，情况可能会变得复杂。\nGitHub issues\n目前已经有超过 5000 个 issues 提交到 TensorFlow，对于有些人来说，这看起来似乎有点让人沮丧。但这是我最喜欢的指标 —— 它说明了用户有在真正使用这个项目！为了确保能对每个提交的 issue 都进行回应，值班的工程师会时刻关注新出现的信息，并尝试使用标签对它们进行分类。如果是一个我们内部不太可能在短期时间内实现的特性，我们会将其标记为“Contributions Welcome（欢迎贡献）”，对于 bug，我们会尝试优先考虑。这段时间以来，随着外部用户自己也成了某些领域的专家，我们看到越来越多的问题无需我们的帮助也能够被解决了。特别是在像 Windows 这些我们不是每天都使用的平台上。\n如果某个 issue 通过社区没能找到答案或者解决方案，而且它的优先级也比较高，值班工程师会将其分配给对这个领域更了解的工程师。整个 TensorFlow 团队都有 GitHub 账号，所以我们可以使用常规的 GitHUb issue 跟踪器来分配问题。我们考虑过把用户提交的 bug 复制到我们的内部系统，但为相同的信息同步两份副本的代价实在是太高了。因此，我们的工程师除了要关注内部的跟踪器之外，还需要打开 GitHub 上有人提交了 bug 的邮件通知，以便及时看到属于自己的分配。\nStack Overflow\nDerek Murray 是 Stack Overflow 值班小组的负责人。我十分敬畏他回答问题的能力，根据他的个人资料页，他发表过的帖子已经被超过 130 万人浏览。他还设法建了一个由 RSS 源驱动的自动化电子表格。开始的时候，我们每周轮流负责，但后来需要处理的问题的数量变得十分庞大，一个人难以处理。所以后来在轮流的基础上，我们采用了自动分配问题的方式来代替之前的做法。\n目前我在这个小组里，因此每天早上浏览完自己的的邮件后，我会通过查看电子表格来看一下自己被分配到了什么问题。很遗憾，我们做不到自己回答所有的问题，但我们会审查每一个进来的问题。如果问题相对比较简单，我们会自己回答。\n值班的工程师是一个“前线”的角色，但有时候回答问题需要更多的时间或专业知识。如果问题看上能被解答，但社区里却没人回答，我们就会研究一下代码（通常使用‘git blame’）来看一下团队里有谁可能会对这个问题有一些想法。然后值班工程师会发送一封电子邮件，询问我们找到的内部专家是否可以提供帮助。\n邮件列表\n我们设置了一个邮件列表，起初我们不太清楚该用它做什么。但很显然，用它来跟踪问题或回答一般的问题是十分糟糕的方式。\n后来，我们把它当做讨论区来使用。但在实际使用中我们发现，即使对于架构问题，GitHub issue 也比它更适合。\n因此现在我们使用邮件列表来发送信息和分享通知，这还是值得订阅的。\n代码同步\n很多和我聊过天的人都会对这样一件事感到惊讶：我们在谷歌内部使用的代码库和我们在 GitHub 上提供的几乎完全相同。然而它们之间还是有一些区别的：例如，对谷歌专用的基础设施的支持是分开的，路径也不一样。但同步过程是完全机械化的。我们至少每周推送一次内部变更，并且也会经常从 GitHub 上拉取。\n棘手的问题是我们要进行双向同步。在 GitHub 公共项目和我们的内部版本中，有很多更改是同时发生的，我们需要反复把它们全部进行合并。由于没有现成的基础设施可供使用，我们创建了一系列的 Python 脚本来处理这些问题。脚本可将 GitHub 上的改动拉取到我们内部的资源存储库，并转换所有的头部路径（header paths）和其他小的更改，将它们与最新的内部代码合并并创建一个内部副本。然后我们就可以进行另一方向的同步，我们会将所有内部代码装换成外部格式，并使用相同的脚本将结果合并到最新的 GitHub 上。\n对于内部的更改，我们也会尽力确保每次check-in 都会以单个的 git commit 呈现，并把作者的 GitHub 账户和对这些更改的注释也包括在内。我们在 GitHub 上有一个特别的“tensorflow-gardener”账号用于管理这个流程，点此查看一个内部的 commit 迁移到 GitHub 会变成怎样。\n确保在代码更改的情况下，转换流程依然有效是十分具有挑战性的。为了验证有效性，每个内部改动通过脚本转换成外部版本后仍可运行，而且与初始的内部版本没有任何差别。在任何涉及到 TensorFlow 代码库的每个内部更改上，都需要运行这个测试，不能通过测试的修改将被拒绝。对于那些发送 pull request 的人，我们有时候会要求他们进行奇怪的更改。通常，这样做的原因是我们必须确保他们的代码能与这个同步基础设施正常运行。\n测试\n因为我们需要支持很多平台，所以我们希望拥有一个适用范围广的测试基础设施。TensorFlow 在 Linux, Windows, OS X 桌面, 和 iOS, Android, Android Things, 以及 Raspberry Pi 上运行。同时我们还有为 GPU 提供不同的代码路径，包括 CUDA 和 OpenCL 支持，以及 Bazel, cmake, 和 plain makefile 构建过程。\n让每个开发者在更改后把上面这些东西手动测试一遍是不可能的，因此我们有一套能在大多数受支持的平台上运行的自动化测试系统，所有这些都由 Jenkins 自动化系统控制着。保持这样的工作需要大量的时间和精力，因为总是会存在操作系统更新、硬件问题以及其他一些与 TensorFlow 无关的问题导致测试失败。我们有一个工程师团队，专门负责保证整个测试系统正常运行，这个团队曾多次帮助我们，让我们幸免于难，所以这个投资是值得的。\n开发者关系\n在谷歌，我们在开源领域工作不孤单。我们从像 Kubernetes 和 开源计划办公室”（Open Source Program Office）这样的项目中学到过很多东西。我们还有一支非常努力的开发者关系专家团队来协助我们，他们还处理了很多围绕文档、代码示例以及其他一些开发者经验问题而产生的体力活。我们的长期目标是将关键的专业知识传递到核心开发者之外，以便更多 Google 内部和外部的人员能对社区做出贡献。\n让核心工程师“兼职”承担客户服务工作的一大好处是可以直接了解用户所遇到的问题。参与客户服务也驱动着我们去改进常见的错误并增加文档，因为它在减少工作量方面让我们看到了直接的回报。\n展望未来，我们希望可以将这项工作更广泛地进行下去，也希望更多人可以熟悉框架的细节、文档的改进，我们创建了更多的“指导手册”以帮助人们处理常见任务（如错误分类）。在此之前，我为有机会和如此多的外部开发者进行互动而感到幸运，也希望通过帮助他们使用机器学习创造新的令人惊叹的应用，从而产生积极的影响。\n关于作者：\nPete Warden 是 TensorFlow Mobile 团队的技术主管，之前是 Jetpac 的首席技术官，该公司于 2014 年被 Google 收购，主要工作是优化其在移动和嵌入式设备上的深度学习技术。他曾在苹果公司工作，负责图像处理的 GPU 优化，并为 O’Reilly 撰写过关于数据处理的书籍。\n\n\r\n        \r\n        \r\n        \n    \n         1 赞\n         3 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "bookmark_num": 3, "title": "TensorFlow 团队如何管理开源项目", "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2017/03/86a72531c8845e07f09b2d42649f2253.jpg"], "suggest": [{"weight": 10, "input": ["管理", "tensorflow", "项目", "开源", "如何", "团队"]}, {"weight": 7, "input": ["开源", "技术", "tensorflow"]}], "tags": "IT技术,TensorFlow,开源"}
2017-06-04 21:38:33 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"ff65dbf752ac6cec76ddb579b61b1e66","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:33 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 3,
 'comment_num': 0,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">原文出处： <a ref="nofollow" '
            'target="_blank" '
            'href="https://www.oreilly.com/ideas/how-the-tensorflow-team-handles-open-source-support">Oreilly</a>\xa0\xa0\xa0'
            '译文出处：<a target="_blank" '
            'href="https://my.oschina.net/editorial-story/blog/902230">开源中国</a>\xa0\xa0\xa0'
            '</div><div>\n'
            '<blockquote><p>TensorFlow '
            '技术主管在这篇文章中和我们分享了他们团队管理开源项目的经验。</p></blockquote>\n'
            '<p>开源不仅仅是把代码贡献出来，然后希望有人来使用它。我也知道这一点，不过在成为\xa0Google TensorFlow '
            '团队的成员后，我才认识到围绕一个软件构建一个社区所需要考虑的因素实在是很多。</p>\n'
            '<h3>社区服务</h3>\n'
            '<p>当一个新项目发布出来时，该项目唯一的专家就是编写这个项目的人。他们是唯一可以撰写文档和回答问题的人，而且他们可以最有效地改进软件。因此，我们这些 '
            'TensorFlow '
            '团队中的核心成员也成为了项目扩大的瓶颈：毕竟我们无法马上完成任何事情。我们知道如何编写代码和文档，因为这些任务是我们日常工作的一部分。但另一方面，回答大量来自社区开发者的问题不是我们应该做的事，尽管我们也知道这对于项目的成功至关重要。</p>\n'
            '<p>为了保证用户可以获得所需要的答案，核心工程师团队的所有人都加入了轮流回答问题。团队成员可以选择解决 <a '
            'href="http://stackoverflow.com/questions/tagged/tensorflow" '
            'target="_blank" rel="nofollow">Stack Overflow 上带有 #tensorflow '
            '标记的问题</a>、在 GitHub 上审查 <a '
            'href="https://github.com/tensorflow/tensorflow/pulls" '
            'target="_blank" rel="nofollow">pull requests</a>，分类\xa0<a '
            'href="https://github.com/tensorflow/tensorflow/issues" '
            'rel="nofollow">GitHub issues</a>，处理同步外部和内部代码或追查<a '
            'href="https://ci.tensorflow.org/" target="_blank" '
            'rel="nofollow">测试失败</a>的原因。</p>\n'
            '<p>通常，每个工程师每次对一个特定领域负责一个星期，以循环的方式轮流负责。因此，轮值的工程师在本周正常工作中的生产力会低很多，不过至少每个人工作被打断的频率降到了几个月一次。</p>\n'
            '<h3>Pull requests</h3>\n'
            '<p>我们开源 TensorFlow 部分的目的是希望通过社区的贡献来改进它。到目前为止，我们已经拥有超过 400 '
            '个外部贡献者添加了代码，从小的文档修复到大型的添加，如<a '
            'href="https://github.com/tensorflow/tensorflow/pull/664" '
            'target="_blank" rel="nofollow">支持 OS X GPU</a>、<a '
            'href="https://github.com/tensorflow/tensorflow/pull/9117" '
            'target="_blank" rel="nofollow">OpenCL 的实现</a>或\xa0<a '
            'href="https://github.com/tensorflow/tensorflow/pull/8943" '
            'rel="nofollow">InfiniBand '
            'RDMA</a>。首先，轮值的核心工程师必须对每项贡献都进行审查，以确定是否有价值。如果贡献通过初始审查，会触发一组\xa0<a '
            'href="https://ci.tensorflow.org/" target="_blank" '
            'rel="nofollow">Jenkins '
            '测试</a>，以确保其不会导致任何故障。如果这些行为也通过审查后，值班的工程师可能会希望其他对这个领域更了解的工程师来看一看，所以这将会被转交给该专家进行审查。</p>\n'
            '<p>GitHub 全新的详细的<a '
            'href="https://github.com/features/code-review/" target="_blank" '
            'rel="nofollow">代码审查工具</a>在这个过程中提供了很大的帮助；没有它们之前，处理所有的个人意见是一件痛苦的事情。通常，大的 '
            'PRs 会在工作中保持一段时间，核心工程师会和一个或多个外部贡献者协同工作，在大家都满意后，PR 将会在 GitHub '
            '中被合并，然后在下次运行同步时合并到我们的内部代码库中。</p>\n'
            '<h3>代码许可协议</h3>\n'
            '<p>作为我们自动的 pull request 的一部分，我们会将贡献者的 GitHub 账号与我们在\xa0<a '
            'href="https://cla.developers.google.com/" '
            'rel="nofollow">cla.developers.google.com</a>\xa0'
            '上的记录相匹配，以确保任何的外部贡献者都拥有代码许可协议（CLA）。我们的目标是确保整个代码库可在 Apache 2.0 '
            '协议下准确无误地分发。当 pull request 的轮值工程师要对出现的所有问题进行整理时，如果一个 pull request '
            '内部关联了不同的邮箱，或是贡献者需要以公司的身份登录，情况可能会变得复杂。</p>\n'
            '<h3>GitHub issues</h3>\n'
            '<p>目前已经有超过 5000 个 issues 提交到 '
            'TensorFlow，对于有些人来说，这看起来似乎有点让人沮丧。但这是我最喜欢的指标 —— '
            '它说明了用户有在真正使用这个项目！为了确保能对每个提交的 issue '
            '都进行回应，值班的工程师会时刻关注新出现的信息，并尝试使用标签对它们进行分类。如果是一个我们内部不太可能在短期时间内实现的特性，我们会将其标记为“Contributions '
            'Welcome（欢迎贡献）”，对于 '
            'bug，我们会尝试优先考虑。这段时间以来，随着外部用户自己也成了某些领域的专家，我们看到越来越多的问题无需我们的帮助也能够被解决了。特别是在像 '
            'Windows 这些我们不是每天都使用的平台上。</p>\n'
            '<p>如果某个 issue '
            '通过社区没能找到答案或者解决方案，而且它的优先级也比较高，值班工程师会将其分配给对这个领域更了解的工程师。整个 '
            'TensorFlow 团队都有 GitHub 账号，所以我们可以使用常规的 GitHUb issue '
            '跟踪器来分配问题。我们考虑过把用户提交的 bug '
            '复制到我们的内部系统，但为相同的信息同步两份副本的代价实在是太高了。因此，我们的工程师除了要关注内部的跟踪器之外，还需要打开 '
            'GitHub 上有人提交了 bug 的邮件通知，以便及时看到属于自己的分配。</p>\n'
            '<h3>Stack Overflow</h3>\n'
            '<p><a href="https://twitter.com/mrry" target="_blank" '
            'rel="nofollow">Derek Murray</a>\xa0是 Stack Overflow '
            '值班小组的负责人。我十分敬畏他回答问题的能力，根据他的<a '
            'href="http://stackoverflow.com/users/3574081/mrry" '
            'target="_blank" rel="nofollow">个人资料页</a>，他发表过的帖子已经被超过 130 '
            '万人浏览。他还设法建了一个由 RSS '
            '源驱动的自动化电子表格。开始的时候，我们每周轮流负责，但后来需要处理的问题的数量变得十分庞大，一个人难以处理。所以后来在轮流的基础上，我们采用了自动分配问题的方式来代替之前的做法。</p>\n'
            '<p>目前我在这个小组里，因此每天早上浏览完自己的的邮件后，我会通过查看电子表格来看一下自己被分配到了什么问题。很遗憾，我们做不到自己回答所有的问题，但我们会审查每一个进来的问题。如果问题相对比较简单，我们会自己回答。</p>\n'
            '<p>值班的工程师是一个“前线”的角色，但有时候回答问题需要更多的时间或专业知识。如果问题看上能被解答，但社区里却没人回答，我们就会研究一下代码（通常使用‘git '
            'blame’）来看一下团队里有谁可能会对这个问题有一些想法。然后值班工程师会发送一封电子邮件，询问我们找到的内部专家是否可以提供帮助。</p>\n'
            '<h3>邮件列表</h3>\n'
            '<p>我们设置了一个邮件列表，起初我们不太清楚该用它做什么。但很显然，用它来跟踪问题或回答一般的问题是十分糟糕的方式。</p>\n'
            '<p>后来，我们把它当做讨论区来使用。但在实际使用中我们发现，即使对于架构问题，GitHub issue 也比它更适合。</p>\n'
            '<p>因此现在我们使用邮件列表来发送信息和分享通知，这还是值得订阅的。</p>\n'
            '<h3>代码同步</h3>\n'
            '<p>很多和我聊过天的人都会对这样一件事感到惊讶：我们在谷歌内部使用的代码库和我们在 GitHub '
            '上提供的几乎完全相同。然而它们之间还是有一些区别的：例如，对谷歌专用的基础设施的支持是分开的，路径也不一样。但同步过程是完全机械化的。我们至少每周推送一次内部变更，并且也会经常从 '
            'GitHub 上拉取。</p>\n'
            '<p>棘手的问题是我们要进行双向同步。在 GitHub '
            '公共项目和我们的内部版本中，有很多更改是同时发生的，我们需要反复把它们全部进行合并。由于没有现成的基础设施可供使用，我们创建了一系列的 '
            'Python 脚本来处理这些问题。脚本可将 GitHub 上的改动拉取到我们内部的资源存储库，并转换所有的头部路径（header '
            'paths）和其他小的更改，将它们与最新的内部代码合并并创建一个内部副本。然后我们就可以进行另一方向的同步，我们会将所有内部代码装换成外部格式，并使用相同的脚本将结果合并到最新的 '
            'GitHub 上。</p>\n'
            '<p>对于内部的更改，我们也会尽力确保每次check-in 都会以单个的 git commit 呈现，并把作者的 GitHub '
            '账户和对这些更改的注释也包括在内。我们在 GitHub '
            '上有一个特别的“tensorflow-gardener”账号用于管理这个流程，<a '
            'href="https://github.com/tensorflow/tensorflow/commit/708f708a458f0a4754094a5a65fb029131b2255d" '
            'target="_blank" rel="nofollow">点此查看</a>一个内部的 commit 迁移到 GitHub '
            '会变成怎样。</p>\n'
            '<p>确保在代码更改的情况下，转换流程依然有效是十分具有挑战性的。为了验证有效性，每个内部改动通过脚本转换成外部版本后仍可运行，而且与初始的内部版本没有任何差别。在任何涉及到 '
            'TensorFlow 代码库的每个内部更改上，都需要运行这个测试，不能通过测试的修改将被拒绝。对于那些发送 pull '
            'request '
            '的人，我们有时候会要求他们进行奇怪的更改。通常，这样做的原因是我们必须确保他们的代码能与这个同步基础设施正常运行。</p>\n'
            '<h3>测试</h3>\n'
            '<p>因为我们需要支持很多平台，所以我们希望拥有一个适用范围广的测试基础设施。TensorFlow 在 Linux, '
            'Windows, OS X 桌面, 和 iOS, Android, Android Things, 以及 Raspberry Pi '
            '上运行。同时我们还有为 GPU 提供不同的代码路径，包括 CUDA 和 OpenCL 支持，以及 Bazel, cmake, 和 '
            'plain makefile 构建过程。</p>\n'
            '<p>让每个开发者在更改后把上面这些东西手动测试一遍是不可能的，因此我们有一套能在大多数受支持的平台上运行的<a '
            'href="https://ci.tensorflow.org/" target="_blank" '
            'rel="nofollow">自动化测试系统</a>，所有这些都由 Jenkins '
            '自动化系统控制着。保持这样的工作需要大量的时间和精力，因为总是会存在操作系统更新、硬件问题以及其他一些与 TensorFlow '
            '无关的问题导致测试失败。我们有一个工程师团队，专门负责保证整个测试系统正常运行，这个团队曾多次帮助我们，让我们幸免于难，所以这个投资是值得的。</p>\n'
            '<h3>开发者关系</h3>\n'
            '<p>在谷歌，我们在开源领域工作不孤单。我们从像 Kubernetes 和 开源计划办公室”（Open Source '
            'Program '
            'Office）这样的项目中学到过很多东西。我们还有一支非常努力的开发者关系专家团队来协助我们，他们还处理了很多围绕文档、代码示例以及其他一些开发者经验问题而产生的体力活。我们的长期目标是将关键的专业知识传递到核心开发者之外，以便更多 '
            'Google 内部和外部的人员能对社区做出贡献。</p>\n'
            '<p>让核心工程师“兼职”承担客户服务工作的一大好处是可以直接了解用户所遇到的问题。参与客户服务也驱动着我们去改进常见的错误并增加文档，因为它在减少工作量方面让我们看到了直接的回报。</p>\n'
            '<p>展望未来，我们希望可以将这项工作更广泛地进行下去，也希望更多人可以熟悉框架的细节、文档的改进，我们创建了更多的“指导手册”以帮助人们处理常见任务（如错误分类）。在此之前，我为有机会和如此多的外部开发者进行互动而感到幸运，也希望通过帮助他们使用机器学习创造新的令人惊叹的应用，从而产生积极的影响。</p>\n'
            '<p>关于作者：</p>\n'
            '<p><a href="https://www.oreilly.com/people/9cbf6-pete-warden" '
            'target="_blank" rel="nofollow">Pete Warden </a>是 TensorFlow '
            'Mobile 团队的技术主管，之前是 Jetpac 的首席技术官，该公司于 2014 年被 Google '
            '收购，主要工作是优化其在移动和嵌入式设备上的深度学习技术。他曾在苹果公司工作，负责图像处理的 GPU 优化，并为 O’Reilly '
            '撰写过关于数据处理的书籍。</p>\n'
            '</div>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111200" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111200votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111200" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 3 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2017/03/86a72531c8845e07f09b2d42649f2253.jpg'],
 'tags': 'IT技术,TensorFlow,开源',
 'thumb_up_num': 1,
 'title': 'TensorFlow 团队如何管理开源项目',
 'url': 'http://blog.jobbole.com/111200/',
 'url_obj_id': 'ff65dbf752ac6cec76ddb579b61b1e66'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:34 [scrapy.extensions.logstats] INFO: Crawled 17 pages (at 17 pages/min), scraped 0 items (at 0 items/min)
2017-06-04 21:38:37 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/110949/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:37 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:37 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 252
2017-06-04 21:38:37 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:37 [elasticsearch] DEBUG: > 思维的局限
2017-06-04 21:38:37 [elasticsearch] DEBUG: < {"tokens":[{"token":"思维","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"维","start_offset":1,"end_offset":2,"type":"CN_WORD","position":1},{"token":"局限","start_offset":3,"end_offset":5,"type":"CN_WORD","position":2}]}
2017-06-04 21:38:37 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:37 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 252
2017-06-04 21:38:37 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:37 [elasticsearch] DEBUG: > 职场,,思维
2017-06-04 21:38:37 [elasticsearch] DEBUG: < {"tokens":[{"token":"职场","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"思维","start_offset":4,"end_offset":6,"type":"CN_WORD","position":1},{"token":"维","start_offset":5,"end_offset":6,"type":"CN_WORD","position":2}]}
2017-06-04 21:38:37 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:37 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/eeb2200670f9743832fe29b6e1fd63bb HTTP/1.1" 200 175
2017-06-04 21:38:37 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/eeb2200670f9743832fe29b6e1fd63bb [status:200 request:0.055s]
2017-06-04 21:38:37 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/110949/", "comment_num": 5, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文作者： 伯乐在线 - 纯洁的微笑 。未经作者许可，禁止转载！欢迎加入伯乐在线 专栏作者。\n我相信大家都可能听到过这样一个故事，一名记者看见农村的一个正在放羊的小孩：\n问他“你的理想是什么？”\n小孩回答说：“放羊！”\n“羊儿喂大了干什么？”\n“卖钱！”\n“有了卖羊儿的钱干什么？”\n“娶老婆！”\n“娶老婆干什么？”\n“生小孩！”\n“生小孩来干什么？”\n“放羊！”\n……\n这段流传甚广的段子，但是我们想想这个故事背后的原因是什么。放羊的小孩对世界的理解也就是：放羊挣钱娶老婆生小孩再放羊。对外面世界的了解可能趋向于了零，在他的世界里，这就是美好的一切，幸福的生活。对世界认识的局限性会导致思维的局限性，思维的局限性会导致目标的局限性，目标的局限性最终导致行为的局限性，从而影响你人生中的各种选择。\n关于贫穷\n故事一\n我在知乎看到的这个故事你在哪一刻体验到了真正的贫富差距？,故事情节大概是这个样子的。\n13年的夏天，作者偶然遇到了一个小伙子，一副农民工的打扮，问去从这里到xx城市应该怎么走？作者有点诧异，因为这里距离XX城市要有100百多公里，给他指了指方向，告诉他往西大约一百多公里。小伙子点点头说了声谢谢大哥就往前走了，以为会是个乞讨者或者流浪汉，讨点钱或要点吃的。可他只是问问路，而且看上去是要徒步过去的意思。小伙子走出去几十米，在人行道边坐下，拿出一瓶水喝了几口，然后低着头摆弄着地下的什么玩意，像是在休息。\n好奇心驱使作者去了解情况，才知道他是要去xx市找自己的老乡，老乡在xx市的一个厂里面工作，工资比现在的高一些，老乡给他拖了一个口信，他现在工作的地方老板不给他发工资并且扣了他的身份证。于是他就准备徒步两百多公里去投靠老乡。小伙子没受过教育，家在云南山区，没有电话，打工是为了补贴家用，同村出来的几个人如今都分散了，没有朋友，没有依靠。小伙子在讲这些的时候，在他的眼睛里没看到赶去见同乡的盼望，没看到被工头欺负后的愤怒，在他看来好像一切都很正常，像是在叙述别人的故事，低垂的眼里空洞无意，就像个老人在等待明天。\n故事二\n有次看中央电视台的一个节目，是采访居住在交通闭塞的大山里村民的生活。有一个画面我记忆特别深刻，中央电视台采访一个小伙子，记者问他：你为什么不出去打工来挣钱呢，那个小伙子说了一句，我听不懂你说啥。这句话深深的震撼了我，那个小伙子和我应该是同龄吧，大概也是三十岁左右，几十年没有走出去过小山村，竟然都听不懂普通话，更不敢出去看看外面的世界。那一刻我感觉这个世界在他的眼里充满了迷茫。\n后来村长说，这个村子常年不通公路，村里面的人要出去需要先坐牛车，再坐拖拉机两天后才能到达小县城，村里面就一个小学，一个教室里面坐了六个年级的学生，很多孩子上到一半就回家干活了。这两年有一些年轻人走出了村子去深圳、东莞打工，慢慢的也带动了一些人，但还是有一些年轻人因为不会说普通话，不能直接和人交流，就一直都没有出去，在村里面种地生活。这是21世纪呀，非常有可能他们一辈子就走不去了。\n \n贫穷在这个年代仍然是存在的，只是可能你不了解。但贫穷其实不是最可怕的，最可怕的是贫穷的人不知道贫穷的可怕，不了解外面的世界，所以对他们来讲没有走出去的动力和勇气，只有让他们了解外面的世界，认识外面的世界，从思想上有了改变的动力和目标，才能真正的走出贫穷。\n教育有时候就是开智，明事理 ，认识世界，可以有一个和外界交流的窗口。到现在为止，高考仍然是很多人走出老家，跨越阶级的最公平，最重要的一条道路，虽然它仍然有很多的弊端。\n思维误区\n我上初中的时候，大家都羡慕不上学去外面世界闯荡的人们。去南方打工、当兵、学一门技术的都觉得挺时髦，可以不用上无用的学，勇敢的走出小县城，自己赚钱自己花，再也没有了上学的约束。我初中的五个好兄弟，两个当了兵，一个去学了理发，一个去学了厨师，只有我一个考上高中，继续求学，每年他们回来都会聊聊他们在外面的故事，一番啤酒下肚之后，我是既羡慕又被吸引，对外面的世界充满了憧憬，多年以后我才知道他们在外面受了多少的苦，但是回老家了，必须要搞的在外面很精彩。\n其实上过大学的就比没有上过大学的能力好很多吗？有可能只是在开始的时候选择对了而已。我们都处在一个大的洪流之中，不是说选择了不读书以后就混不好，选择了读书就肯定会有不错的生活。但是整体的机遇来讲，读过大学的比没有读过大学的会更多一点，没有读过大学的人大多从事了体力劳动或者技能类的一些工作，读过大学不管怎么样，大都是白领类的工作。\n我们这里不讨论极个别厉害人的情况，研究一下为什么会出现这种情况。上大学让你在那些方面有了提升，很多人大学四年几乎没有好好学习过，玩了四年照样出来找了不错的工作，所以说大学对人能力的提升不一定会比没有上学的强，在外面对能力的提升反而是更快。我个人认为最本质的是认知的提升会不一样，那怕你的四年什么都没有做，但是你至少看到很多人做的事情，别人做事情的经验也会成为你的的经验，毕业后大家都去找了工作，你肯定也会跟着找了工作，大不了差了一点。都是在认知上，对世界的认识上有了很大的不同，才最终影响了你未来的选择和目标。\n说到这里想起了波仔的那条理论，你的生活水平就是你身边最亲近的五个人的平均值。我就不信你和奥巴马是哥们，还和我一起在敲代码。其实仔细观察你身边的高管，高层，起步就没在一个层级里面。\n程序员呢，其实也是一样。大家有没有一种感觉，刚毕业一年左右的时候是最自信的，觉得自己已经掌握了程序开发的基本规律，应付工作没有问题，简历上写的各种精通，精通前端，精通数据库，精通core java等等。反而工作多年以后越发觉得，研究不够深入涉猎不够广泛，很多的新老技术还都停留在使用阶段。为了解释这个问题我画了两个图。\n\n \n把整个的IT知识领域用一个圆圈来表示，黑色实体部分就是我们刚开始认知的区域，因为我们刚开始知道的少，了解的少，里面的圆的周长就会小很多，我们感觉到自己需要了解的东西也相对小。\n\n \n当我们通过不断的学习、扩宽自己知识的边界，就像里面的小圆不断的长大一些，我们感受到的未知也越来越多，认识到自己了解的内容占整个体系只是很小的一部分。\n很多人，不是不想学习，是不知道如何去学习，很多时候遇到问题，不知道外界有很多解决方案。另外，不进步不学习不可怕，最可怕的是，比我们厉害的人比我们更努力。\n如何打破\n1、要跳出你的圈子，我从西安到北京，IT行业工作氛围，技术特征完全没有在一个水平线上。要时常的跳出自己的圈子，站到外面去看原来的自己。\n2、读书，不断的读书，不断的读好书，其实读书是了解作者怎么看这个世界，读好书更是了解很多大师人物对世界的理解。通过读书打开自己对世界认识的另一扇窗，技术人除了看技术书籍，更应该看一些其它领域的书，来扩宽自己的视野。\n3、对于技术，多逛逛技术性网站，了解一下最新的前沿知识，比如vue活跃的时候，博客园就出了很多关于vue的教程，微服务火的时候，博客园首页经常有关于微服务的文章，时常关注让你了解有这么个东西，在解决问题的时候或者定方案的时候知道会有这么一个选项。\n4、多走出自己的视角，做为程序员总是以程序的思维去思考问题。比如遇到了问题，这个问题对产品、客户意味着什么，领导是如何考虑的，当领导让你干某件事的时候他关心的什么。刚好我这里有一个职场真实的小故事，分享给大家。\n某一线互联网电商平台，空降了一名技术高管，要求紧急上线一个项目，必须三个月上线，安排下去，技术总监认真的分析了需求和现有公司的资源，告知这个项目最少需要四个月加班才能完成，高管说实在没有办法吗，总监说，已经是极限了。高管直接就把这位总监给开了，然后问下一个总监周期需要多久，这位总监考虑了一下说：2个月，高管说，项目你来负责，最后这个项目整整做了六个月，但是大家也都相安无事。\n5、培养一个行业之外的爱好，最好是运动类的，只有身体好了，精神才更好，才能体会挥汗之后的畅快之感。具体的，比如坚持每周去户外，在北京的话像绿野这种就可以，参加几次就可以融入组织。程序员的话，建议打羽毛球，感觉这类运动对程序员是最有益处，避免各种颈椎病，游泳也是很好的一个选择。经常保持运动的人，整个人的精神状态是不一样的，我们大多数办公室工作者都处于亚健康状态，锻炼真的很重要。\n6、github对程序员来讲真是一个宝库，提交分享代码都是最基础的，建博客、建网站、建工具github都可以免费让你搞定，可以作为你创意或者实践的一个绝佳场所，也可以好好看看其他牛人的杰作，也有很多github第三方的网站可以帮你找到优秀的开源项目。\n最后\n很多时候的改变，不是我们不想改变，不愿意改变，是不知道如何改变，不知道什么才是好的选择，或者在深刻一点，很多人到现在都不知道什么是好的什么是坏的。\n所以说很多时候的改变，最先是思维的改变，思维的改变转换成行动，然后达到真正的改变。\n我们是不是这个版本：\n“你做程序员干什么？”\n“找个体面又高薪的工作。”\n“找到理想的工作后呢？”\n“再寻觅一个温柔漂亮的好老婆。”\n“找到好老婆后呢？”\n“生一个聪明智慧的孩子！”\n“生了孩子后呢？”\n“从小就好好教育孩子努力学习，考个好大学，最好再做一名程序员！”\n……\n\r\n        \r\n            \n        打赏支持我写出更多好文章，谢谢！\n         打赏作者\n    \n\n    \n        打赏支持我写出更多好文章，谢谢！\n                任选一种支付方式\n                \n                        \n            \n                            \n                    \n    \n\n    \r\n        \n    \n         1 赞\n         10 收藏\n\n                     5 评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：纯洁的微笑\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            我的微信公众号：纯洁的微笑（KeepPureSmile），欢迎大家关注。        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  33 ·             \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 10, "title": "思维的局限", "front_image_url": ["http://wx3.sinaimg.cn/large/63918611gy1ffrw8w1u4tj20hi0a0749.jpg"], "suggest": [{"weight": 10, "input": ["思维", "局限"]}, {"weight": 7, "input": ["思维", "职场"]}], "tags": "职场,,思维"}
2017-06-04 21:38:37 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"eeb2200670f9743832fe29b6e1fd63bb","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:37 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 10,
 'comment_num': 5,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文作者： <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/ityouknow">纯洁的微笑</a> '
            '。未经作者许可，禁止转载！<br>欢迎加入伯乐在线 <a href="http://blog.jobbole.com/99322" '
            'target="_blank">专栏作者</a>。</div><p><img id="pic" class="" '
            'src="http://wx3.sinaimg.cn/large/63918611gy1ffrw8w1u4tj20hi0a0749.jpg"></p>\n'
            '<p>我相信大家都可能听到过这样一个故事，一名记者看见农村的一个正在放羊的小孩：</p>\n'
            '<blockquote><p>问他“你的理想是什么？”<br>\n'
            '小孩回答说：“放羊！”<br>\n'
            '“羊儿喂大了干什么？”<br>\n'
            '“卖钱！”<br>\n'
            '“有了卖羊儿的钱干什么？”<br>\n'
            '“娶老婆！”<br>\n'
            '“娶老婆干什么？”<br>\n'
            '“生小孩！”<br>\n'
            '“生小孩来干什么？”<br>\n'
            '“放羊！”<br>\n'
            '……</p></blockquote>\n'
            '<p>这段流传甚广的段子，但是我们想想这个故事背后的原因是什么。放羊的小孩对世界的理解也就是：放羊挣钱娶老婆生小孩再放羊。对外面世界的了解可能趋向于了零，在他的世界里，这就是美好的一切，幸福的生活。对世界认识的局限性会导致思维的局限性，思维的局限性会导致目标的局限性，目标的局限性最终导致行为的局限性，从而影响你人生中的各种选择。</p>\n'
            '<h2 id="关于贫穷">关于贫穷</h2>\n'
            '<p><strong>故事一</strong></p>\n'
            '<p>我在知乎看到的这个故事<a '
            'href="https://www.zhihu.com/question/56322619/answer/156776118">你在哪一刻体验到了真正的贫富差距？</a>,故事情节大概是这个样子的。</p>\n'
            '<blockquote><p>13年的夏天，作者偶然遇到了一个小伙子，一副农民工的打扮，问去从这里到xx城市应该怎么走？作者有点诧异，因为这里距离XX城市要有100百多公里，给他指了指方向，告诉他往西大约一百多公里。小伙子点点头说了声谢谢大哥就往前走了，以为会是个乞讨者或者流浪汉，讨点钱或要点吃的。可他只是问问路，而且看上去是要徒步过去的意思。小伙子走出去几十米，在人行道边坐下，拿出一瓶水喝了几口，然后低着头摆弄着地下的什么玩意，像是在休息。</p>\n'
            '<p>好奇心驱使作者去了解情况，才知道他是要去xx市找自己的老乡，老乡在xx市的一个厂里面工作，工资比现在的高一些，老乡给他拖了一个口信，他现在工作的地方老板不给他发工资并且扣了他的身份证。于是他就准备徒步两百多公里去投靠老乡。小伙子没受过教育，家在云南山区，没有电话，打工是为了补贴家用，同村出来的几个人如今都分散了，没有朋友，没有依靠。小伙子在讲这些的时候，在他的眼睛里没看到赶去见同乡的盼望，没看到被工头欺负后的愤怒，在他看来好像一切都很正常，像是在叙述别人的故事，低垂的眼里空洞无意，就像个老人在等待明天。</p></blockquote>\n'
            '<p><strong>故事二</strong></p>\n'
            '<p>有次看中央电视台的一个节目，是采访居住在交通闭塞的大山里村民的生活。有一个画面我记忆特别深刻，中央电视台采访一个小伙子，记者问他：你为什么不出去打工来挣钱呢，那个小伙子说了一句，我听不懂你说啥。这句话深深的震撼了我，那个小伙子和我应该是同龄吧，大概也是三十岁左右，几十年没有走出去过小山村，竟然都听不懂普通话，更不敢出去看看外面的世界。那一刻我感觉这个世界在他的眼里充满了迷茫。</p>\n'
            '<p>后来村长说，这个村子常年不通公路，村里面的人要出去需要先坐牛车，再坐拖拉机两天后才能到达小县城，村里面就一个小学，一个教室里面坐了六个年级的学生，很多孩子上到一半就回家干活了。这两年有一些年轻人走出了村子去深圳、东莞打工，慢慢的也带动了一些人，但还是有一些年轻人因为不会说普通话，不能直接和人交流，就一直都没有出去，在村里面种地生活。这是21世纪呀，非常有可能他们一辈子就走不去了。</p>\n'
            '<p>\xa0</p>\n'
            '<p>贫穷在这个年代仍然是存在的，只是可能你不了解。但贫穷其实不是最可怕的，最可怕的是贫穷的人不知道贫穷的可怕，不了解外面的世界，所以对他们来讲没有走出去的动力和勇气，只有让他们了解外面的世界，认识外面的世界，从思想上有了改变的动力和目标，才能真正的走出贫穷。</p>\n'
            '<p>教育有时候就是开智，明事理 '
            '，认识世界，可以有一个和外界交流的窗口。到现在为止，高考仍然是很多人走出老家，跨越阶级的最公平，最重要的一条道路，虽然它仍然有很多的弊端。</p>\n'
            '<h2 id="思维误区">思维误区</h2>\n'
            '<p>我上初中的时候，大家都羡慕不上学去外面世界闯荡的人们。去南方打工、当兵、学一门技术的都觉得挺时髦，可以不用上无用的学，勇敢的走出小县城，自己赚钱自己花，再也没有了上学的约束。我初中的五个好兄弟，两个当了兵，一个去学了理发，一个去学了厨师，只有我一个考上高中，继续求学，每年他们回来都会聊聊他们在外面的故事，一番啤酒下肚之后，我是既羡慕又被吸引，对外面的世界充满了憧憬，多年以后我才知道他们在外面受了多少的苦，但是回老家了，必须要搞的在外面很精彩。</p>\n'
            '<p>其实上过大学的就比没有上过大学的能力好很多吗？有可能只是在开始的时候选择对了而已。我们都处在一个大的洪流之中，不是说选择了不读书以后就混不好，选择了读书就肯定会有不错的生活。但是整体的机遇来讲，读过大学的比没有读过大学的会更多一点，没有读过大学的人大多从事了体力劳动或者技能类的一些工作，读过大学不管怎么样，大都是白领类的工作。</p>\n'
            '<p>我们这里不讨论极个别厉害人的情况，研究一下为什么会出现这种情况。上大学让你在那些方面有了提升，很多人大学四年几乎没有好好学习过，玩了四年照样出来找了不错的工作，所以说大学对人能力的提升不一定会比没有上学的强，在外面对能力的提升反而是更快。我个人认为最本质的是认知的提升会不一样，那怕你的四年什么都没有做，但是你至少看到很多人做的事情，别人做事情的经验也会成为你的的经验，毕业后大家都去找了工作，你肯定也会跟着找了工作，大不了差了一点。都是在认知上，对世界的认识上有了很大的不同，才最终影响了你未来的选择和目标。</p>\n'
            '<p>说到这里想起了波仔的那条理论，你的生活水平就是你身边最亲近的五个人的平均值。我就不信你和奥巴马是哥们，还和我一起在敲代码。其实仔细观察你身边的高管，高层，起步就没在一个层级里面。</p>\n'
            '<p>程序员呢，其实也是一样。大家有没有一种感觉，刚毕业一年左右的时候是最自信的，觉得自己已经掌握了程序开发的基本规律，应付工作没有问题，简历上写的各种精通，精通前端，精通数据库，精通core '
            'java等等。反而工作多年以后越发觉得，研究不够深入涉猎不够广泛，很多的新老技术还都停留在使用阶段。为了解释这个问题我画了两个图。</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx2.sinaimg.cn/large/63918611gy1ffrvhabgsbj20ci0c53yi.jpg"></p>\n'
            '<p>\xa0</p>\n'
            '<p>把整个的IT知识领域用一个圆圈来表示，黑色实体部分就是我们刚开始认知的区域，因为我们刚开始知道的少，了解的少，里面的圆的周长就会小很多，我们感觉到自己需要了解的东西也相对小。</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx4.sinaimg.cn/large/63918611gy1ffrvhfb6a8j20cj0btjrf.jpg"></p>\n'
            '<p>\xa0</p>\n'
            '<p>当我们通过不断的学习、扩宽自己知识的边界，就像里面的小圆不断的长大一些，我们感受到的未知也越来越多，认识到自己了解的内容占整个体系只是很小的一部分。</p>\n'
            '<p>很多人，不是不想学习，是不知道如何去学习，很多时候遇到问题，不知道外界有很多解决方案。另外，不进步不学习不可怕，最可怕的是，比我们厉害的人比我们更努力。</p>\n'
            '<h2 id="如何打破">如何打破</h2>\n'
            '<p>1、要跳出你的圈子，我从西安到北京，IT行业工作氛围，技术特征完全没有在一个水平线上。要时常的跳出自己的圈子，站到外面去看原来的自己。</p>\n'
            '<p>2、读书，不断的读书，不断的读好书，其实读书是了解作者怎么看这个世界，读好书更是了解很多大师人物对世界的理解。通过读书打开自己对世界认识的另一扇窗，技术人除了看技术书籍，更应该看一些其它领域的书，来扩宽自己的视野。</p>\n'
            '<p>3、对于技术，多逛逛技术性网站，了解一下最新的前沿知识，比如vue活跃的时候，博客园就出了很多关于vue的教程，微服务火的时候，博客园首页经常有关于微服务的文章，时常关注让你了解有这么个东西，在解决问题的时候或者定方案的时候知道会有这么一个选项。</p>\n'
            '<p>4、多走出自己的视角，做为程序员总是以程序的思维去思考问题。比如遇到了问题，这个问题对产品、客户意味着什么，领导是如何考虑的，当领导让你干某件事的时候他关心的什么。刚好我这里有一个职场真实的小故事，分享给大家。</p>\n'
            '<blockquote><p>某一线互联网电商平台，空降了一名技术高管，要求紧急上线一个项目，必须三个月上线，安排下去，技术总监认真的分析了需求和现有公司的资源，告知这个项目最少需要四个月加班才能完成，高管说实在没有办法吗，总监说，已经是极限了。高管直接就把这位总监给开了，然后问下一个总监周期需要多久，这位总监考虑了一下说：2个月，高管说，项目你来负责，最后这个项目整整做了六个月，但是大家也都相安无事。</p></blockquote>\n'
            '<p>5、培养一个行业之外的爱好，最好是运动类的，只有身体好了，精神才更好，才能体会挥汗之后的畅快之感。具体的，比如坚持每周去户外，在北京的话像绿野这种就可以，参加几次就可以融入组织。程序员的话，建议打羽毛球，感觉这类运动对程序员是最有益处，避免各种颈椎病，游泳也是很好的一个选择。经常保持运动的人，整个人的精神状态是不一样的，我们大多数办公室工作者都处于亚健康状态，锻炼真的很重要。</p>\n'
            '<p>6、github对程序员来讲真是一个宝库，提交分享代码都是最基础的，建博客、建网站、建工具github都可以免费让你搞定，可以作为你创意或者实践的一个绝佳场所，也可以好好看看其他牛人的杰作，也有很多github第三方的网站可以帮你找到优秀的开源项目。</p>\n'
            '<h2 id="最后">最后</h2>\n'
            '<p>很多时候的改变，不是我们不想改变，不愿意改变，是不知道如何改变，不知道什么才是好的选择，或者在深刻一点，很多人到现在都不知道什么是好的什么是坏的。</p>\n'
            '<p>所以说很多时候的改变，最先是思维的改变，思维的改变转换成行动，然后达到真正的改变。</p>\n'
            '<p>我们是不是这个版本：</p>\n'
            '<blockquote><p>“你做程序员干什么？”<br>\n'
            '“找个体面又高薪的工作。”<br>\n'
            '“找到理想的工作后呢？”<br>\n'
            '“再寻觅一个温柔漂亮的好老婆。”<br>\n'
            '“找到好老婆后呢？”<br>\n'
            '“生一个聪明智慧的孩子！”<br>\n'
            '“生了孩子后呢？”<br>\n'
            '“从小就好好教育孩子努力学习，考个好大学，最好再做一名程序员！”</p>\n'
            '<p>……</p></blockquote>\n'
            '\r\n'
            '        \r\n'
            '            <blockquote class="rewards">\n'
            '        <p><strong>打赏支持我写出更多好文章，谢谢！</strong></p>\n'
            '        <a href="#rewardbox" id="rewards-button" '
            'class="fancybox"><span class="btn-bluet-blue href-style"><i '
            'class="fa fa-jpy"></i> 打赏作者</span></a>\n'
            '    </blockquote>\n'
            '\n'
            '    <div id="rewardbox">\n'
            '        <h4>打赏支持我写出更多好文章，谢谢！</h4>\n'
            '                <p>任选一种支付方式</p>\n'
            '                <p>\n'
            '                        <img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/02/bdbb2fd2100937012521bcca7666214a.png">\n'
            '            \n'
            '                            <img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/02/4d73722317836066abc1944476af6821.jpg">\n'
            '                    </p>\n'
            '    </div>\n'
            '\n'
            '    \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="110949" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="110949votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="110949" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 10 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i> 5 评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/ityouknow">纯洁的微笑</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/ityouknow">\r\n'
            '\t\t\t<img '
            'src="http://jbcdn2.b0.upaiyun.com/2017/02/7a2dae804fcc41edb889ce67f7973c58.jpg">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            我的微信公众号：纯洁的微笑（KeepPureSmile），欢迎大家关注。        '
            '</span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/ityouknow" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/ityouknow/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/ityouknow/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 33</a> · <a title="我的网站" '
            'target="_blank" href="http://www.ityouknow.com/"><i class="fa '
            'fa-link"></i></a>\xa0<a title="微博主页" target="_blank" '
            'href="http://weibo.com/ityouknow"><i class="fa '
            'fa-weibo"></i></a>\xa0<a title="QQ：863865929" target="_blank" '
            'href="#"><i class="fa fa-qq"></i></a>\xa0<a title="GitHub主页" '
            'target="_blank" href="https://github.com/ityouknow"><i class="fa '
            'fa-github"></i></a>\xa0        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://wx3.sinaimg.cn/large/63918611gy1ffrw8w1u4tj20hi0a0749.jpg'],
 'tags': '职场,,思维',
 'thumb_up_num': 1,
 'title': '思维的局限',
 'url': 'http://blog.jobbole.com/110949/',
 'url_obj_id': 'eeb2200670f9743832fe29b6e1fd63bb'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:41 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111244/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:41 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:41 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 1067
2017-06-04 21:38:41 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2017-06-04 21:38:41 [elasticsearch] DEBUG: > 不按传统套路，我是这样学习新编程语言的
2017-06-04 21:38:41 [elasticsearch] DEBUG: < {"tokens":[{"token":"不","start_offset":0,"end_offset":1,"type":"CN_CHAR","position":0},{"token":"按","start_offset":1,"end_offset":2,"type":"CN_CHAR","position":1},{"token":"传统","start_offset":2,"end_offset":4,"type":"CN_WORD","position":2},{"token":"套路","start_offset":4,"end_offset":6,"type":"CN_WORD","position":3},{"token":"套","start_offset":4,"end_offset":5,"type":"CN_WORD","position":4},{"token":"路","start_offset":5,"end_offset":6,"type":"CN_CHAR","position":5},{"token":"我","start_offset":7,"end_offset":8,"type":"CN_CHAR","position":6},{"token":"这样","start_offset":9,"end_offset":11,"type":"CN_WORD","position":7},{"token":"学习新","start_offset":11,"end_offset":14,"type":"CN_WORD","position":8},{"token":"学习","start_offset":11,"end_offset":13,"type":"CN_WORD","position":9},{"token":"新编","start_offset":13,"end_offset":15,"type":"CN_WORD","position":10},{"token":"编程","start_offset":14,"end_offset":16,"type":"CN_WORD","position":11},{"token":"语言","start_offset":16,"end_offset":18,"type":"CN_WORD","position":12}]}
2017-06-04 21:38:41 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:41 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 662
2017-06-04 21:38:41 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:41 [elasticsearch] DEBUG: > 开发,,学习,开源,程序员
2017-06-04 21:38:41 [elasticsearch] DEBUG: < {"tokens":[{"token":"开发","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"发","start_offset":1,"end_offset":2,"type":"CN_WORD","position":1},{"token":"学习","start_offset":4,"end_offset":6,"type":"CN_WORD","position":2},{"token":"开源","start_offset":7,"end_offset":9,"type":"CN_WORD","position":3},{"token":"程序员","start_offset":10,"end_offset":13,"type":"CN_WORD","position":4},{"token":"程序","start_offset":10,"end_offset":12,"type":"CN_WORD","position":5},{"token":"序","start_offset":11,"end_offset":12,"type":"CN_WORD","position":6},{"token":"员","start_offset":12,"end_offset":13,"type":"CN_CHAR","position":7}]}
2017-06-04 21:38:41 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:41 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/118884f5e6dde8887a27b20d5cacc7f8 HTTP/1.1" 200 175
2017-06-04 21:38:41 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/118884f5e6dde8887a27b20d5cacc7f8 [status:200 request:0.012s]
2017-06-04 21:38:41 [elasticsearch] DEBUG: > {"thumb_up_num": 1, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111244/", "comment_num": 1, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - 郑芸 翻译。未经许可，禁止转载！英文出处：Sahil Dua。欢迎加入翻译组。【导读】：以往我们认为学习新编程语言的最佳方式是看语法，然后做小项目练习。Sahil Dua 另辟蹊径，找到了学习新语言的另类方式：参与对应的开源项目。参与的过程中，需要查看已有的模块，了解这种语言的模式，对自己写出高质量的代码非常有益。\n补充：Sahil Dua，创业公司 Refiral 合伙人，DuckDuckGo 开源社区 leader 之一，多个开源项目主要贡献者。\n\n\n目前编程语言超过 500 多种。学习一门新的编程语言对我们来说已是家常便饭。很有可能你熟悉 C++ 和 Java，而你的工作需要用到 Python 或者你非常精通 Python，但你工作写代码需要用 Java 。再或者你想学习一种炫酷的编程语言来拓展你的技能。\n如果你想学习一门新的编程语言，你选择哪种方法？\n\n网络教程\n网络公开课（MOOC）\n\n有些人甚至主张，学习新编程语言最好的方法其实如下：\n\n学习语法；\n创建一些个人项目；\n\n嗯，说得过去！你想学习一门编程语言，你学了它的语法，创建一些个人小项目可以确保你应用到这些语法知识。\n在学习不同的编程语言时，我创建了 20 个以上的小项目。相信我，当你为一周甚至一整晚就能快速完成的小项目写代码时，你只是想完成任务。你所关心的只是——“我的代码能运行吗？”你几乎不关心代码的质量。\n任何傻瓜都可以编写计算机能理解的代码。优秀的程序员写人类能理解的代码。”  —— Martin Fowler\n那么，在尝试学习一门新的编程语言时，你怎样获得好的实践呢？\n参与该语言的开源项目。\n是不是感到惊讶？一些人或许会认为 —— ”等等，开源是很难的。只有当我们精通这门语言，我们才能为开源项目做出贡献，对吗？“。答案是否定的。\n让我先给你讲个故事。\n去年，我得到了一个来自 Booking.com 的全职工作 offer，而且我得知我工作的编程语言是 Perl （这是他们公司首要的后端语言）。2016 年 6 月，当我完成我的大学学位，我开始学习 Perl ，以便准备我大学后的第一份工作。我入职的时间是 7 月的第二周，因此我差不多有一个多月的学习时间。\n我开始阅读 Perl 的语法，并开始理解该语言的一些常见模式。到这里，我真正想使用 Perl 来创建一些东西，这样我就可以应用我学到的该语言的知识，实践它的各种概念。当我在为使用 Perl 创建一些东西寻找 idea 时，我在 GitHub 上偶遇了 DuckDuckGo 的开源组织。我注意到一些开源项目是用 Perl 语言写的。我浏览了一下发布的 issues，找到了很多带有“初学者”标签的 Issue 。我立即开始工作，并提交了一些 pull requests。快进到今天，我成为了它们一些开源项目的主要贡献者，以及 DuckDuckGo 20 个开源社区的领导者之一。\n这个故事的意思：我通过参与 Perl 语言的开源项目最终学会了 Perl 语言。\n为什么参与到开源就奏效了呢？\n就在我学习了 Perl 的语法后，我开始参与开源项目。在那期间，我常常查看现有的模块。我时常注意 Perl 正被使用的模式。因此我开始挑选这些好的实例应用到我自己的代码中，这有助于我学习怎样用 Perl 更好地写代码。\n这不只是巧合；让我告诉你另一个故事，以获得更多的相关性。\n最近，在 Booking.com 工作时，我接受了一些任务，其中有一个是在 Go 语言写的服务系统上添加一些功能。下面是我和队友的对话：\n我：我真的很喜欢这个任务，我想完成它。你怎么看？他：是的，的确很有意思。但是它要用到 Go，你熟悉 Go 吗？\n我：不。\n他：那你想学吗？\n我 : 是的！\n他：😊 你可以的！\n所以，那就是我学习另一种编程语言—— Go 的起点！\n我开始学习 Go 的语法，并在其官网上找到了一个很棒的初学者指南，足以让我掌握这门语言的基本概念。\n再一次地，我开始寻找一些发布的 Issue 中带有“初学者”或者“简易修复”标签的 Go 语言开源项目。我通过 Google 找到了一个项目，大致就是 GitHub 的 REST API 包装器。\n在我开始学习 Go 语言的第二天，我在那个项目上发了第一个 pull request。\n\n我去年一整年的贡献图 ( https://github.com/sahildua2305 )\n开源项目是如何提供帮助的？\n那么，你现在可能会疑惑参与开源项目怎样可以帮到你获得好的语言实践。有好几个方面，让我们逐个讨论。\n代码质量\n大多数优秀的开源项目都有严格的代码标准，想要你的代码融入其中，你必须遵守这些准则。这会帮助你适应这些准则，因此写出高质量的代码，即使你才刚学习这门语言。\n不仅如此，你还有机会查看代码的其余部分，看看别人是怎么样写代码，写文档的。\n代码审查\n为开源项目做贡献最佳之处就是代码审查（code review）。当 push 你的代码，你得到与该项目相关的专家的反馈，因此它给了你一个提高对这门语言理解的机会。\n你获得了一次如何写处优秀代码的私人机会，并且还免费的呢！\n鼓励和赞赏\n\n这是我在 Go Lang 上发出的第一个 PR 后，别人写下的第一个评论。\n作为软件开发人员，我们的工作确实需要得到理解和鼓励；开源社区能让你得到足够的鼓励和支持。在我为开源贡献的所有经历中，我从未收到过任何侮辱性或消极的评论。每个人都是特别愿给他人鼓励和帮助。\n\nDuckDuckGo 社区其他人给我的评论\n所以，下次你想要学一门新语言，大步向前去冒险吧！找到一个开源项目去做贡献，在学习这门语言和它微妙之处的道路上行进。\n \n【伯乐在线补充】：希望作者这个不走传统惯例的方法，对大家有启发。如果你对如何参与开源还不怎么了解，请看 GitHub 的这篇文章《新人必看的开源指南：如何参与并做贡献》。\n\r\n        \r\n            \n        打赏支持我翻译更多好文章，谢谢！\n         打赏译者\n    \n\n    \n        打赏支持我翻译更多好文章，谢谢！\n                任选一种支付方式\n                \n                        \n            \n                            \n                    \n    \n\n    \r\n        \n    \n         1 赞\n         6 收藏\n\n                     1 评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：郑芸\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            Python，数据挖掘        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  22        \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 6, "title": "不按传统套路，我是这样学习新编程语言的", "front_image_url": ["http://wx4.sinaimg.cn/mw690/7cc829d3gy1fft52tryq7j20xc0m8grz.jpg"], "suggest": [{"weight": 10, "input": ["传统", "学习", "这样", "编程", "语言", "套路", "学习新", "新编"]}, {"weight": 7, "input": ["开源", "学习", "开发", "程序员", "程序"]}], "tags": "开发,,学习,开源,程序员"}
2017-06-04 21:38:41 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"118884f5e6dde8887a27b20d5cacc7f8","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:41 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 6,
 'comment_num': 1,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/paradise_FD">郑芸</a> '
            '翻译。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="https://hackernoon.com/unconventional-way-of-learning-a-new-programming-language-e4d1f600342c#.c1mxajs5w">Sahil '
            'Dua</a>。欢迎加入<a target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p>【导读】：以往我们认为学习新编程语言的最佳方式是看语法，然后做小项目练习。Sahil '
            'Dua '
            '另辟蹊径，找到了学习新语言的另类方式：参与对应的开源项目。参与的过程中，需要查看已有的模块，了解这种语言的模式，对自己写出高质量的代码非常有益。</p>\n'
            '<p>补充：Sahil Dua，创业公司 Refiral 合伙人，DuckDuckGo 开源社区 leader '
            '之一，多个开源项目主要贡献者。</p>\n'
            '<p><img class="alignnone" '
            'src="http://wx4.sinaimg.cn/mw690/7cc829d3gy1fft52tryq7j20xc0m8grz.jpg" '
            'width="600" height="400"></p>\n'
            '<hr>\n'
            '<p>目前编程语言超过 500 多种。学习一门新的编程语言对我们来说已是家常便饭。很有可能你熟悉 C++ 和 '
            'Java，而你的工作需要用到 Python 或者你非常精通 Python，但你工作写代码需要用 Java '
            '。再或者你想学习一种炫酷的编程语言来拓展你的技能。</p>\n'
            '<p><strong>如果你想学习一门新的编程语言，你选择哪种方法？</strong></p>\n'
            '<ol>\n'
            '<li>网络教程</li>\n'
            '<li>网络公开课（MOOC）</li>\n'
            '</ol>\n'
            '<p>有些人甚至主张，学习新编程语言最好的方法其实如下：</p>\n'
            '<ul>\n'
            '<li>学习语法；</li>\n'
            '<li>创建一些个人项目；</li>\n'
            '</ul>\n'
            '<p>嗯，说得过去！你想学习一门编程语言，你学了它的语法，创建一些个人小项目可以确保你应用到这些语法知识。</p>\n'
            '<p>在学习不同的编程语言时，我创建了 20 '
            '个以上的小项目。相信我，当你为一周甚至一整晚就能快速完成的小项目写代码时，你只是想完成任务。你所关心的只是——“我的代码能运行吗？”你几乎不关心代码的质量。</p>\n'
            '<blockquote><p>任何傻瓜都可以编写计算机能理解的代码。优秀的程序员写人类能理解的代码。”\u200a —— '
            'Martin Fowler</p></blockquote>\n'
            '<p>那么，在尝试学习一门新的编程语言时，你怎样获得好的实践呢？</p>\n'
            '<h3>参与该语言的开源项目。</h3>\n'
            '<p>是不是感到惊讶？一些人或许会认为\u200a——\u200a'
            '”等等，开源是很难的。只有当我们精通这门语言，我们才能为开源项目做出贡献，对吗？“。答案是否定的。</p>\n'
            '<p>让我先给你讲个故事。</p>\n'
            '<p>去年，我得到了一个来自 Booking.com 的全职工作 offer，而且我得知我工作的编程语言是 Perl '
            '（这是他们公司首要的后端语言）。2016 年 6 月，当我完成我的大学学位，我开始学习 Perl '
            '，以便准备我大学后的第一份工作。我入职的时间是 7 月的第二周，因此我差不多有一个多月的学习时间。</p>\n'
            '<p>我开始阅读 Perl 的语法，并开始理解该语言的一些常见模式。到这里，我真正想使用 Perl '
            '来创建一些东西，这样我就可以应用我学到的该语言的知识，实践它的各种概念。当我在为使用 Perl 创建一些东西寻找 idea '
            '时，我在 GitHub 上偶遇了 DuckDuckGo 的开源组织。我注意到一些开源项目是用 Perl '
            '语言写的。我浏览了一下发布的 issues，找到了很多带有“初学者”标签的 Issue 。我立即开始工作，并提交了一些 pull '
            'requests。快进到今天，我成为了它们一些开源项目的主要贡献者，以及 DuckDuckGo 20 '
            '个开源社区的领导者之一。</p>\n'
            '<blockquote><p>这个故事的意思：我通过参与 Perl 语言的开源项目最终学会了 Perl '
            '语言。</p></blockquote>\n'
            '<h3>为什么参与到开源就奏效了呢？</h3>\n'
            '<p>就在我学习了 Perl 的语法后，我开始参与开源项目。在那期间，我常常查看现有的模块。我时常注意 Perl '
            '正被使用的模式。因此我开始挑选这些好的实例应用到我自己的代码中，这有助于我学习怎样用 Perl 更好地写代码。</p>\n'
            '<p>这不只是巧合；让我告诉你另一个故事，以获得更多的相关性。</p>\n'
            '<p>最近，在 Booking.com 工作时，我接受了一些任务，其中有一个是在 Go '
            '语言写的服务系统上添加一些功能。下面是我和队友的对话：</p>\n'
            '<blockquote><p>我：我真的很喜欢这个任务，我想完成它。你怎么看？他：是的，的确很有意思。但是它要用到 Go，你熟悉 '
            'Go 吗？<br>\n'
            '我：不。<br>\n'
            '他：那你想学吗？<br>\n'
            '我 : 是的！<br>\n'
            '他：😊 你可以的！</p></blockquote>\n'
            '<p>所以，那就是我学习另一种编程语言—— Go 的起点！</p>\n'
            '<p>我开始学习 Go 的语法，并在其官网上找到了一个很棒的初学者指南，足以让我掌握这门语言的基本概念。</p>\n'
            '<p>再一次地，我开始寻找一些发布的 Issue 中带有“初学者”或者“简易修复”标签的 Go 语言开源项目。我通过 Google '
            '找到了一个项目，大致就是 GitHub 的 REST API 包装器。</p>\n'
            '<p>在我开始学习 Go 语言的第二天，我在那个项目上发了第一个 pull request。</p>\n'
            '<p><img id="pic" class="M_cur_zoom_out aligncenter" '
            'src="http://wx3.sinaimg.cn/large/7cc829d3gy1fft2f208b5j214e08qjrn.jpg"></p>\n'
            '<p style="text-align: center;">我去年一整年的贡献图 ( '
            'https://github.com/sahildua2305 )</p>\n'
            '<h3>开源项目是如何提供帮助的？</h3>\n'
            '<p>那么，你现在可能会疑惑参与开源项目怎样可以帮到你获得好的语言实践。有好几个方面，让我们逐个讨论。</p>\n'
            '<p><strong>代码质量</strong></p>\n'
            '<p>大多数优秀的开源项目都有严格的代码标准，想要你的代码融入其中，你必须遵守这些准则。这会帮助你适应这些准则，因此写出高质量的代码，即使你才刚学习这门语言。</p>\n'
            '<p>不仅如此，你还有机会查看代码的其余部分，看看别人是怎么样写代码，写文档的。</p>\n'
            '<p><strong>代码审查</strong></p>\n'
            '<p>为开源项目做贡献最佳之处就是代码审查（code review）。当 push '
            '你的代码，你得到与该项目相关的专家的反馈，因此它给了你一个提高对这门语言理解的机会。</p>\n'
            '<p>你获得了一次如何写处优秀代码的私人机会，并且还免费的呢！</p>\n'
            '<p><strong>鼓励和赞赏</strong></p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx2.sinaimg.cn/large/7cc829d3gy1fft2f2uu3cj212w088js3.jpg"></p>\n'
            '<p style="text-align: center;">这是我在 Go Lang 上发出的第一个 PR 后，别人写下的<a '
            'href="https://github.com/google/go-github/pull/497" '
            'target="_blank">第一个评论</a>。</p>\n'
            '<p>作为软件开发人员，我们的工作确实需要得到理解和鼓励；开源社区能让你得到足够的鼓励和支持。在我为开源贡献的所有经历中，我从未收到过任何侮辱性或消极的评论。每个人都是特别愿给他人鼓励和帮助。</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx4.sinaimg.cn/large/7cc829d3gy1fft2f2xjlaj212w032t8r.jpg"></p>\n'
            '<p style="text-align: center;">DuckDuckGo 社区其他人给我的评论</p>\n'
            '<p>所以，下次你想要学一门新语言，大步向前去冒险吧！找到一个开源项目去做贡献，在学习这门语言和它微妙之处的道路上行进。</p>\n'
            '<p>\xa0</p>\n'
            '<p>【伯乐在线补充】：希望作者这个不走传统惯例的方法，对大家有启发。如果你对如何参与开源还不怎么了解，请看 GitHub '
            '的这篇文章《<a href="http://blog.jobbole.com/111204/" '
            'target="_top"><span '
            'data-rel="title">新人必看的开源指南：如何参与并做贡献</span></a>》。</p>\n'
            '\r\n'
            '        \r\n'
            '            <blockquote class="rewards">\n'
            '        <p><strong>打赏支持我翻译更多好文章，谢谢！</strong></p>\n'
            '        <a href="#rewardbox" id="rewards-button" '
            'class="fancybox"><span class="btn-bluet-blue href-style"><i '
            'class="fa fa-jpy"></i> 打赏译者</span></a>\n'
            '    </blockquote>\n'
            '\n'
            '    <div id="rewardbox">\n'
            '        <h4>打赏支持我翻译更多好文章，谢谢！</h4>\n'
            '                <p>任选一种支付方式</p>\n'
            '                <p>\n'
            '                        <img '
            'src="http://jbcdn2.b0.upaiyun.com/2016/06/dd708b5011ca615a666a617f958683e8.jpg">\n'
            '            \n'
            '                            <img '
            'src="http://jbcdn2.b0.upaiyun.com/2016/06/7bd3dbe2e00ad5c5d39167e2fbbc6464.jpg">\n'
            '                    </p>\n'
            '    </div>\n'
            '\n'
            '    \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111244" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111244votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111244" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 6 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i> 1 评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/paradise_FD">郑芸</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/paradise_FD">\r\n'
            '\t\t\t<img '
            'src="http://q.qlogo.cn/qqapp/208656/8341DCC9FE0583B4AE1889698815B015/100">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            Python，数据挖掘        </span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/paradise_FD" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/paradise_fd/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/paradise_FD/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 22</a>        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://wx4.sinaimg.cn/mw690/7cc829d3gy1fft52tryq7j20xc0m8grz.jpg'],
 'tags': '开发,,学习,开源,程序员',
 'thumb_up_num': 1,
 'title': '不按传统套路，我是这样学习新编程语言的',
 'url': 'http://blog.jobbole.com/111244/',
 'url_obj_id': '118884f5e6dde8887a27b20d5cacc7f8'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:44 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111249/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:45 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:45 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 1401
2017-06-04 21:38:45 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:45 [elasticsearch] DEBUG: > 谷歌大牛说：为什么 Kotlin 比你们用的那些垃圾语言都好
2017-06-04 21:38:45 [elasticsearch] DEBUG: < {"tokens":[{"token":"谷歌","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"大牛","start_offset":2,"end_offset":4,"type":"CN_WORD","position":1},{"token":"牛","start_offset":3,"end_offset":4,"type":"CN_WORD","position":2},{"token":"说","start_offset":4,"end_offset":5,"type":"CN_CHAR","position":3},{"token":"为什么","start_offset":6,"end_offset":9,"type":"CN_WORD","position":4},{"token":"什么","start_offset":7,"end_offset":9,"type":"CN_WORD","position":5},{"token":"么","start_offset":8,"end_offset":9,"type":"CN_WORD","position":6},{"token":"kotlin","start_offset":10,"end_offset":16,"type":"ENGLISH","position":7},{"token":"比你","start_offset":17,"end_offset":19,"type":"CN_WORD","position":8},{"token":"你们","start_offset":18,"end_offset":20,"type":"CN_WORD","position":9},{"token":"用","start_offset":20,"end_offset":21,"type":"CN_CHAR","position":10},{"token":"那些","start_offset":22,"end_offset":24,"type":"CN_WORD","position":11},{"token":"垃圾","start_offset":24,"end_offset":26,"type":"CN_WORD","position":12},{"token":"垃","start_offset":24,"end_offset":25,"type":"CN_WORD","position":13},{"token":"圾","start_offset":25,"end_offset":26,"type":"CN_WORD","position":14},{"token":"语言","start_offset":26,"end_offset":28,"type":"CN_WORD","position":15},{"token":"都好","start_offset":28,"end_offset":30,"type":"CN_WORD","position":16}]}
2017-06-04 21:38:45 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:45 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 417
2017-06-04 21:38:45 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:45 [elasticsearch] DEBUG: > 开发,,Kotlin,Steve Yegge
2017-06-04 21:38:45 [elasticsearch] DEBUG: < {"tokens":[{"token":"开发","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"发","start_offset":1,"end_offset":2,"type":"CN_WORD","position":1},{"token":"kotlin","start_offset":4,"end_offset":10,"type":"ENGLISH","position":2},{"token":"steve","start_offset":11,"end_offset":16,"type":"ENGLISH","position":3},{"token":"yegge","start_offset":17,"end_offset":22,"type":"ENGLISH","position":4}]}
2017-06-04 21:38:45 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:45 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/e1424ea1775d8a39ee3e2c46397ddc08 HTTP/1.1" 200 175
2017-06-04 21:38:45 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/e1424ea1775d8a39ee3e2c46397ddc08 [status:200 request:0.023s]
2017-06-04 21:38:45 [elasticsearch] DEBUG: > {"thumb_up_num": 2, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111249/", "comment_num": 6, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - 黄小非 翻译。未经许可，禁止转载！英文出处：Steve Yegge。欢迎加入翻译组。【伯乐在线导读】：5月18日，安卓团队在谷歌 I/O 2017 大会上宣布 Kotlin 成为官方头等支持语言。这条爆炸性资讯在当天就是 Hacker News 首页热门讨论，与此同时，谷歌技术大牛 Steve Yegge 也写了一篇关于 Kotlin 的使用体会总结文章，同样也在首页热门，并引发 200+ 讨论。伯乐在线编译如下。\n\n（Steve Yegge ）\n为什么说 Kotlin 比你们用的那些垃圾语言都好\n哈，这个标题党的题目让你点进来看了吧。不要奇怪，现在标题党在网上很普遍的。而且这篇文章给出的回答，肯定能震撼到你。\n说真的，其实我不想去攻击你们的语言信仰……至少不会“大大地”想。毕竟你喜欢的语言大放异彩的时期，可能要追溯到冰川时代了，对不？如果你喜欢的语言到今天还没有死，那只能说明这门语言在逐渐地改进和更新，保持与时俱进。\n但改进的速度呢？好吧……假设你现在用的语言碰巧是 Java，并且你也沉溺于 Java 曾经是一门非常优秀的语言的想法，那么你就完蛋了。而且是早就完蛋了。尽管人类都不太喜欢思考终极命运问题，但是相比于在 20 多年前刚刚问世，Java 8 仅仅是做了部分语言特性的替换，对此你禁不住要想：“我真的要和这种语言来共度过的余生么？还是说 Java 也就只能这样了？”\n因为终于要开始做 Android 开发了，我把各种老旧的语言问题又过了一遍。我写过一个老游戏 Wyvern，这个游戏已经有一个 iOS 版本了，最近我决定再搞一个 Android 版本。我从来没料到计算机语言会折腾到让我“思考人生”（例如“我这是他娘的在浪费生命么？”）如果你写过 Android 程序的话，你就知道在 Android 领域，语言的问题是会让你相当难熬的。\n我第一次尝试写 Android 程序是在去年夏天，我的个老天爷，那感觉简直糟透了。其实是有人警告过我的。他们都说：“那些 API 可是很难搞啊。”而我却不听劝。一意孤行。\n我想：这些玩意儿能糟糕到哪儿去呢？反正不就是 Java 么？\n历史代码的灾难\n真是很不走运——因为很复杂的历史原因，并且也没人在意——造成 Android 的核心 API 实在是糟糕透顶。我是说：真的很糟，真的很糟，真的很糟。你只能关掉参考书，深呼吸，然后出去猛喝咖啡来压压惊。人们之前给我的告诫看来是完全正确的。\nAndroid API 库就是一个百宝箱。很多 API 真的是非常好用。我可以说，很多在 iOS 开发里非常难搞的事情在 Android 里面却很容易。Product flavors、Downloads 服务、findViewById() 方法、Preferences activity 等等，这些都是很好的例子。有太多 Android 里面有的东西在 iOS 里面是诶有的，所以在 iOS 里面你总能看到：开发者自己实现的恶心的和优雅的应用库并存。\n但是！注意左边是一个大写加粗的但是！在写 Android 程序的时候，人们只关注那些不好的 API，就像你开车时候只会数路上遇到了几个红灯一样，绿灯的数量是没人关心的。因为人们只会通过红灯的数量来评价路途是否通顺。\nAndroid 确实有几个很糟糕的“红灯”API。例如 Fragments，这就是在 Andoird “红灯” API 中的招牌 API。这个 API 的整个生命周期的糟糕程度达到了令人发指的地步，好吧其实 Activities 和 Fragments 都是如此。说句不中听的，iOS 反而却没有这么糟糕的API。去年夏天我试了试这些API，它们是如此之糟糕以至于我当时就放弃了。我算是彻底服了。去它的，我还是以后找个人来帮我写这些程序吧。\n接下来的一年半，我就没再碰过 Android 编程。\n来自俄罗斯的救星\n我一直听说，有一种新语言叫做 Kotlin，可以用来写基于 JVM 或者 Android 程序。发明这种语言的不是别国，正是战斗的民族俄罗斯。更具体一点儿，它是由 JetBrains 开发。JetBrains 可是世界知名的 IDE 开发商，代表作是 Intellij IDEA，还有他们那可爱而且大名鼎鼎的橘色，绿色，紫色和黑色混合的暗色“Darcula”主题。\n\n图：一个千年老妖按捺不住对 Java 8 的兴奋\n那么为什么要给这种语言起名叫 Kotlin 呢？好吧，有一种说法是因为 Java 的第一个字母是“J”，而 Kotlin 则用了Java 的下一个字母“K”作为开头。除此之外，有人还猜想（这种猜想可能来自加州大学伯克利分校），“Kotlin”这个名字的灵感还来源于“克里姆林宫”，“赫鲁晓夫”以及“克格勃”。这些都是前苏联的骄傲，所以他们就用了一个前苏联军事基地的名字“Kotlin”来命名这种语言。总之这个名字不错，而且你会习惯它的。\n伯乐在线补充：Steve Yegge 在前文关于 Kotlin 的名字来源，应该错了。在他自己原文评论中，也有网友指出了。\n正确的应该是：① JetBrains 是一家注册地在捷克布拉格的公司，在全球共有 6 个办公点：布拉格、圣彼得堡、莫斯科、波士顿、慕尼黑和新西伯利亚。但主要管理层和开发者是在圣彼得堡。② 芬兰湾中有个岛就是「Kotlin/科特林」，在圣彼得堡以西 32 公里。\n\n我发现去年业界关于 Kotlin 只是有不少“嘀咕（buzz）”。注意，只是“嘀咕”，不是天花乱坠地吹牛宣传。人们只是低调地“嘀咕”着。好吧，总之，我当时看了一下，然后就觉得这个语言和我过去 15 年看过的 50 ~ 100 种计算机语言一样，这也是一门可以替代 Java 的语言，当然，我认为任何理性的语言都能替代 Java。\n对 Kotlin 的第一印象\n我第一次看到 Kotlin 的时候，真心觉得这种语言不可能在现实生活中用到，真的是一点可能性都没有。其实我也就是走马观花。我的第一印象？这个语言也没什么大问题。它很简洁，也具有先进的特性。如果说它时髦也行，因为它几乎囊括了计算机语言设计上的所有最新潮流。不过这也没什么大不了，因为很多语言也都满足这一点。比如，Rust。Rust 也是一门健壮的，名字起得很好的，但是没什么人用的语言。\nKotlin 给我的一种奇怪的感觉是“似曾相识”，后来我才反应过来，原来这是因为它和 Swift 很像。我之所以没有马上反应过来，是因为我的 iOS 程序因为历史代码的原因不得不用 Objective-C 而不是 Swift 来写。当然现在我也弄明白了：其实 Kotlin 的历史比 Swift 要悠久几年，所以正确的说法应该是：Swift 和 Kotlin 很像。\n不过即便如此我当时也没准备用这种语言干活。Kotlin 对我来说确实是一种语法优雅的语言，但是我觉得我对这门语言还没有掌握到足够的程度，以至于让我可以用它来应付残酷的现实工作。\n从 Java 叛逃到 Kotlin\n我不太记得我是具体怎么爱上 Kotlin 的了。但是我敢肯定的是这绝对不是有意为之。\n我努力回忆了一下，事情是这样的，我做的那个游戏的玩家跟我说了好久，让我开发一个 Android 版本。这个游戏是 12 月份在 Apple Store 上架的，然后几周之内，大量粉丝就跟我说，他们是 Andorid 用户，所以没法玩到这个游戏。所以，尽管我已经“发誓”再也不碰Android 编程了，但是用户就是上帝，所以我又开始尝试了。不过这一次要换个玩儿法——不能再把胃口坏在 Android 的 Java 语言上了。我需要有个现成的框架，或者什么类似的东西，来让工作变得简单一点儿。\n在 1 月中旬，我做了一个粗略评估，然后就决定用 Kotlin 来开发了，Kotlin 当时可同时支持 Dalvik 和 Art 两种 Android 虚拟机。我觉得我的评估是基于以下几个原因：\n\n1. Kotlin 已经小有名气；\n2. 当时我写 iOS 版的时候就想用 Swift（但是没用成）；\n3. Kotlin有一种挺不错的 Android DSL 叫做 Anko，这勾起了我的兴趣，虽然最后我并没有真的用到它。\n\n所以我就用 Kotlin 开始做了。在接下来的 4-5 周内，我用 Kotlin 重写了游戏的服务平台。要知道这个平台之前已经有 20 多年历史了。用了一个月的 Kotlin，我就被完全征服了。我不是要说 Scala 或者其他语言的坏话，但是对我这种普通码农来说，Koltin 是完美的。我的要求不高，给口饭吃就行，知道不？Scala 固然很好，但是它好得过头了，就像牛蛙\\牛脑\\松露蜗牛这些高档菜那么好。要知道我就是个蓝领，Clojure、Scala 这类的语言对我来说太高大上了。\n我大约花了 3 天时间来学习 Kotlin 的各种语法，然后就开始正式编程了，虽然我还是很不熟练，但是我知道这种语言和 IDE 工具足以让我解决各种麻烦。\n当我对这种语言稍微熟悉了一些以后，我就知道，我应该不会再去爱上另外一种语言了，因为 Kotlin 实在是太迷人了。你在代码写出来的东西让你觉得很酷。当然我以前用其他的语言编程的时候也体验过类似的感觉，但是那些语言的学习曲线一般都非常陡峭。Kotlin呢，它就是大救星：当 Java 程序员为了 Java 8 弄出来的一大堆新概念挠头的时候，Kotlin 出现了。Kotlin 能实现 Java 8 的各种新特性，并且通过对 coroutines 的支持，其实能实现更强大的功能，而且语法表现力更简洁。Java 8 确实也能表达很有意思的逻辑，但是很繁琐，感觉就像让你说话之前要先给你嘴里塞沙子。\n我想 Kotlin 上手很容易的原因太显而易见了，要归功于它的 IDE 支持。现在几乎所有的 JVM 语言或者 Android 语言的 IDE 支持都是由社区的几个志愿者在维护（当然 Java 除外）。而 Kotlin 则是来自世界级的 IDE 厂商（Jetbrains），所以 Kotlin 打一开始就是自带 IDE 支持的。有多少语言能做到从发明伊始就能有 IDE 支持呢？编程语言的进化历程一般做不到这一点。况且有的编程语言从一开始就是要避开 IDE 这个因素的（Hi！Rob）另外一个能一开始就做到 IDE 支持的语言就是 C#，当然 C# 毫无疑问是全世界最好的编程语言之一。\n伯乐在线译注：上面这段中的 Rob，应该是指 Go 语言的发明者 Rob Pike，作者在这里也许是暗讽 Go 语言从发明到现在都没有一个靠谱的 IDE 支持吧。\n作为一个自带 IDE 支持的语言，你在 Kotlin buffer 敲代码的时候，打字基本对就可以了。IDE 会帮你补全你没写完的部分。你知道吗，你甚至可以把Java代码复制到IDE里面，然后 IDE 会帮你自动转换成Kotlin代码。如果你觉得 Java 的 IDE 都还不错，那么我可以很荣幸地告诉你，Kotlin IDE 会把这种“不错”推进到前所未有的地步。甚至有一个前微软工程师跟我说：“我本以为微软的 Visual Studio 是 IDE 界的标杆，是不可超越的。但是我觉得 IntelliJ IDEA 的确要更好。”在我看来，因为我对 Visual Studio 不熟悉，所以我在这里只是引用他说的话。不过我认为 IntelliJ IDEA 至少和 VS 是同等水平。\n诚然，在现实工作中我还是要经常切换到 Emacs 的。IntelliJ 在你打字很快的时候还是有点儿反应不过来。如果你打字总是只打一半儿的话，那么自动补全动能的运行压力还是很大。况且对纯文本的处理也很糟糕，这是所有 IDE 的通病。所以 IDE 和 Emacs 你都是需要用到的。不幸的是，目前 Emcacs 对 Kotlin 的支持现在也就那么回事儿，不过相信以后会越来越好。我现在反正就是在 Emacs 和 IntelliJ 之间来回切换。目前还算是 OK。\n就是这样了。我曾经花了大约 10 年的时间，来找一种语言来取代 Java。我真的找得很努力很辛苦。讽刺的是，在我放弃了以后，这种东西居然出来了。去看看吧。Kudos 对 JetBrains 来说，是一个惊艳的成就。\nAndroid：Kotlin 的杀手锏\n这年头新生编程语言几乎很难产生什么巨大影响力。不是说现在没有新语言产生了，相反是每年都有质量不错的新语言产生，但是然并卵，没人用！要给“不可能”划定界限很难。但是计算机语言的市场已经非常饱和了。如果要让一个新的语言能够大火（而且这个规律在过去 10 到 20 年都成立），那么这个语言就必须有一个“杀手级”的应用。这门语言需要绑定一个平台，让大家都非常迫切地区使用这个平台，这才能促进大家学习这门语言以便在这个平台上编程。\n就目前看来，我们上面所说的杀手级应用——也就是我们上面扯了这么多的东西——却是 Android 恶心的 API。每当你顺着 Android 路线往下走，一遇到 API 就会卡壳，这只会让你去诅咒 Android 这个平台。Android 不论有多少优秀的 API 都不管用，重要的是，Android 糟糕的 API 太多了，所以你不得不停下来去找”现成”的办法（solution）。\n不过兄弟，Android 里面解决问题的“现成办法”可是不少。对于新手来说，有一大堆 Java annotation processors可用，这就为语言的问题埋下伏笔。更不要提一堆迷你的框架（比如 Lyft 的 Scoop）。还有那些和 Android（Java）完全独立的框架：React Native、Cordova、Xamarin、Flutter等等。\n如果以上说的技术你都不喜欢，那么你还可以从语言的角度来解决问题。当然，那些完全独立的框架是基于特定语言的，而并不是Java。\nKotlin 的竞争优势在于它并不是完全隔离于 Java 语言。它基本上是 100% 可与 Java 相互翻译转换的。这很像C++ 与 C 的关系一样（但它们做不到 100% ）。Kotlin 也是在不断进化的。所以你可以直接把你写的 Kotlin 代码扔到 Android 工程中，连目录都不用改，然后程序就能正常运行了，方便得眼睛都不用眨一下。\n其他种类的 Android 平台都倾向于迫使你去学习一种全新的语言以及对应的平台，其编程范式，理念和特性都各不相同。Kotlin 则是让你直接写出 Android 可运行的类，就跟其他 Android 程序员用 Java 写出来的一样。其实其底层的 API 都是一样的，但是 Kotlin 组织得要好很多。\n还记得我去年夏天把 Android 编程书扔了然后再也不打算看了么。现在 Kotlin 则让我感觉：Android 编程是快乐的？我甚至觉得可能 Android 那些糟糕的 API 很可能并不是那么糟，只是 Java 把它搞得太恶心了而已。\nKotlin 致力于让大家绕过 Android API 那些恶心的东西，并且能让你充分发挥你的经验，这一点甚至比 iOS 做得还要好。好吧，至少来说比 Objective-C 做得好，因为我觉得 Swift 肯定也不会差。知道为什么吗？因为 Swift 和 Kotlin 很像啊。\n\n我特别喜欢 Kotlin 的地方有哪些？\n嗯，这个话题其实要细说就很大了，我觉得我最好再开一篇文章来写这个。这里我就提一下那些高级（high-level）且共性的点。\n\nKotlin 很像 Java。它长得不像 Clojure 或者 Scala 那么奇怪（承认现实把，这两种语言就是挺奇怪的）。所以你学 Kotlin 应该很快。这门语言显然就是写给 Java 开发者来用的。\n它比 Java 更安全。Java 很多需要 annotation processors 来做的事情在 Kotlin 里则是内置的，例如 overriding，nullability等等。而且 Kotlin 对数值转换的规则也更安全，虽然我不太喜欢 Kotlin 的处理方式，但是我还是很感谢这门语言强制我去思考我的数值表现形式。\nKotlin 和 Java 是可以互译的。真的是指无缝互译。我见过很多 JVM 语言最后挂掉，就是因为其不支持子类继承机制。我不知道什么时候就会用到静态内部类，非静态内部类，或者什么破玩意儿类。Kotlin 在设计时就把和Java互译的属性放在第一位，也就是说，把 Java 翻译到 Kotlin 可以逐渐进行，一次可以直接转换一个文件。\nKotlin 很简洁。你要知道我也算是个高尔夫球手，所以我实话实说。如果在一切都相同的情况下，我更喜欢短的程序，只要它写的逻辑清楚。Kotlin 对我来说就像是打了一轮好局。平均下来我发现 Kotlin 的代码长度比相同逻辑的 Jython 代码短了 5%-10%（这可是我用某种“黄金标准”测出来的），而且还能保证程序的可读性和类型安全。\nKotlin 更贴近实际。Kotlin 支持在一个文件里定义多个类，支持一等方法，操作符重载，扩展方法，类型别名，字符串模板，还有一堆看上去没什么新意的语言特性它都支持。而我就是不明白为什么 Java 什么都不支持，连人们需要的语言特性它都不做。\nKotlin 进化很快。例如刚刚宣布启动的对 coroutine 的支持，将会成为提供 asyn/await， geneator 以及所有其他无锁并发特性的基础设施。\nKotlin 很擅长“拿来主义”。Kotlin 经常从其他的计算机语言设计中抄点子，并且也毫不避讳。他们说：“我们很喜欢 C# 的处理方式，所以我们就自己照着撸了一个。”\nKotlin 支持 DSL。DSL 不到深思熟虑万不得已的话千万不要引入，但是不得不承认 DSL 威力巨大。例如你看 Gradle 的 DSL 和 Maven 比，在典型的 Maven 项目里，配置代码肯定要超过上千行。所以 Kotlin 是来给你降工作压力的。\nKotlin 的 IDE 是在是太棒了。刚才不久我才在 Emacs 里写程序文件，结果 Emacs 报了一对错。而我把同样的代码拷贝到 IntelliJ 里面，然后按 Alt-Enter 逐一自动修复了 50 多条，然后所有的错误就都搞定了。这真是帮了大忙啊。\n\nKotlin 很有趣。我跟你们说，Kotlin 就是有趣。也许这是我发自潜意识地在做广告。Kolint 的关键字和方法名都很有意思。Kotlin 把我从一个只会死编程的码农转变为了一个计算机语言的爱好者。\n\n总之，你就这么想：我收拾东西搬家，然后碰到了邻居 Kotlin。我之前也算见过的一堆计算机语言，但是只有 Kotlin，能够让我在那么短的时间内重写我的游戏服务器代码。而我现在则是在用 Kotlin 重写我之前写过的一切。\n我也知道还有好多其他的程序员也对 Kotlin 感觉非常好，打算成为 Kotlin 程序员。其中大部分的人应该在 1-2 年之内水平就能超过我了。我们私下里谈论过，互相都说“Kotlin 让编程感觉美好的感觉又回来了。”还不错，再我们尚未对编程全部失去兴趣之前，Kotlin 来了。就仿佛你只要把语言的语法学会了。这回把你带回到那种第一次学编程的感觉，无论写什么都觉得自己很牛逼。\n再一次，向 JetBrains 致敬。他们对计算机语言做出了巨大的贡献！我脱帽致敬。\n那么 Kotlin 比你用的任何其他编程语言都好吗？我想对我来说是的。因为，如果你碰巧是在用 Java 的话。如果你一整天就是泡在椅子面前写 Java，那么你会发现 Kotlin 简直就是一股清流。所以也让我知道你们是怎么想的吧。\n免责声明：本文只是阐述我个人对 Android 开发的观点，并不代表我的雇主（谷歌）或者 JetBrains 的观点。\n \n伯乐在线摘录原文的一些评论：\nIgor Tovstopyat-Nelip\n好文章！\nJetBrains 不在捷克。虽然它是在（捷克）布拉格成立的，但主要在圣彼得堡。他们很多管理层和开发者都是俄罗斯人，很多是从圣彼得堡大学毕业的 。\n关于取名，Java 语言是出自印尼群岛中的 Java 岛。Kotlin 是芬兰湾中的一座岛，离圣彼得堡很近。彼得大帝在 18 世纪早期从瑞典那里抢过了圣彼得堡。此后，一直是俄国波罗的海舰队的海军基地。圣彼得堡有北国风光之美，海军神庙（Naval Temple）令人印象深刻。\n我们公司（位于亚特兰大）也试过多种 JVM 语言，Java 是首选。现在我们更对 Kotlin 感兴趣了。大家都非常喜欢。并且 Kotlin 和 Java 是无缝互通的。\nKotlin 也能编译成 JS，并且值得一提的是，Kotlin Native 也处于火热发展中，看起来会是 Rust 的强劲对手。\n匿名网友：\n我过去也一起用过 Eamcs 和 JetBrains 的 IDE（PyCharm 和 Webstorm）。虽然这种组合很怪，但出奇的好。Emacs 适合心灵控制级别的文本编辑，IDE 适合面向鼠标的闲逛和小修改。\nStephen French：\n我喜欢 C#，对 Java 落后太多真的失望至极，因为我的工作倾向 JVM。Kotlin 看起来非常有意思！\n\r\n        \r\n            \n        打赏支持我翻译更多好文章，谢谢！\n         打赏译者\n    \n\n    \n        打赏支持我翻译更多好文章，谢谢！\n                \n                        \n            \n                    \n    \n\n    \r\n        \n    \n         2 赞\n         4 收藏\n\n                     6 评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：黄小非\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            黄小非：毕业于重庆大学计算机系，南开大学软件工程硕士，SCJP。 目前在一家国企信息中心任职软件开发工程师。主要技术兴趣为Java平台相关技术、系统构架、C/C++、计算机图形学等。（新浪微博：@黄小非）        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  58        \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 4, "title": "谷歌大牛说：为什么 Kotlin 比你们用的那些垃圾语言都好", "front_image_url": ["http://wx4.sinaimg.cn/large/7cc829d3gy1ffu5zuwglij20dw099406.jpg"], "suggest": [{"weight": 10, "input": ["那些", "kotlin", "都好", "为什么", "什么", "你们", "大牛", "语言", "垃圾", "比你", "谷歌"]}, {"weight": 7, "input": ["steve", "开发", "kotlin", "yegge"]}], "tags": "开发,,Kotlin,Steve Yegge"}
2017-06-04 21:38:45 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"e1424ea1775d8a39ee3e2c46397ddc08","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:45 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 4,
 'comment_num': 6,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/huangxiaofei">黄小非</a> '
            '翻译。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="http://steve-yegge.blogspot.com/2017/05/why-kotlin-is-better-than-whatever-dumb.html">Steve '
            'Yegge</a>。欢迎加入<a target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p>【伯乐在线导读】：5月18日，安卓团队在谷歌 '
            'I/O 2017 大会上宣布 Kotlin 成为官方头等支持语言。这条爆炸性资讯在当天就是 Hacker News '
            '首页热门讨论，与此同时，谷歌技术大牛\xa0Steve Yegge 也写了一篇关于 Kotlin '
            '的使用体会总结文章，同样也在首页热门，并<a '
            'href="https://news.ycombinator.com/item?id=14362975" '
            'target="_blank">引发 200+ 讨论</a>。伯乐在线编译如下。</p>\n'
            '<p><img id="pic" class="aligncenter" '
            'src="http://wx4.sinaimg.cn/large/7cc829d3gy1ffu5zuwglij20dw099406.jpg"></p>\n'
            '<p style="text-align: center;">（Steve Yegge\xa0）</p>\n'
            '<h3>为什么说 Kotlin 比你们用的那些垃圾语言都好</h3>\n'
            '<p>哈，这个标题党的题目让你点进来看了吧。不要奇怪，现在标题党在网上很普遍的。而且这篇文章给出的回答，肯定能震撼到你。</p>\n'
            '<p>说真的，其实我不想去攻击你们的语言信仰……至少不会“大大地”想。毕竟你喜欢的语言大放异彩的时期，可能要追溯到冰川时代了，对不？如果你喜欢的语言到今天还没有死，那只能说明这门语言在逐渐地改进和更新，保持与时俱进。</p>\n'
            '<p>但改进的速度呢？好吧……假设你现在用的语言碰巧是 Java，并且你也沉溺于 Java '
            '曾经是一门非常优秀的语言的想法，那么你就完蛋了。而且是早就完蛋了。尽管人类都不太喜欢思考终极命运问题，但是相比于在 20 '
            '多年前刚刚问世，Java 8 仅仅是做了部分语言特性的替换，对此你禁不住要想：“我真的要和这种语言来共度过的余生么？还是说 '
            'Java 也就只能这样了？”</p>\n'
            '<p>因为终于要开始做 Android 开发了，我把各种老旧的语言问题又过了一遍。我写过一个老游戏\xa0<a '
            'href="http://reddit.com/r/wyvernrpg">Wyvern</a>，这个游戏已经有一个 iOS '
            '版本了，最近我决定再搞一个 Android '
            '版本。我从来没料到计算机语言会折腾到让我“思考人生”（例如“我这是他娘的在浪费生命么？”）如果你写过 Android '
            '程序的话，你就知道在 Android 领域，语言的问题是会让你相当难熬的。</p>\n'
            '<p>我第一次尝试写 Android 程序是在去年夏天，我的个老天爷，那感觉简直糟透了。其实是有人警告过我的。他们都说：“那些 '
            'API 可是很难搞啊。”而我却不听劝。一意孤行。</p>\n'
            '<p>我想：这些玩意儿能糟糕到哪儿去呢？反正不就是 Java 么？</p>\n'
            '<h3>历史代码的灾难</h3>\n'
            '<p>真是很不走运——因为很复杂的历史原因，并且也没人在意——造成 Android 的核心 API '
            '实在是糟糕透顶。我是说：真的很糟，真的很糟，真的很糟。你只能关掉参考书，深呼吸，然后出去猛喝咖啡来压压惊。人们之前给我的告诫看来是完全正确的。</p>\n'
            '<p>Android API 库就是一个百宝箱。很多 API 真的是非常好用。我可以说，很多在 iOS 开发里非常难搞的事情在 '
            'Android 里面却很容易。Product flavors、Downloads 服务、findViewById() '
            '方法、Preferences activity 等等，这些都是很好的例子。有太多 Android 里面有的东西在 iOS '
            '里面是诶有的，所以在 iOS 里面你总能看到：开发者自己实现的恶心的和优雅的应用库并存。</p>\n'
            '<p><strong>但是</strong>！注意左边是一个大写加粗的但是！在写 Android 程序的时候，人们只关注那些不好的 '
            'API，就像你开车时候只会数路上遇到了几个红灯一样，绿灯的数量是没人关心的。因为人们只会通过红灯的数量来评价路途是否通顺。</p>\n'
            '<p>Android 确实有几个很糟糕的“红灯”API。例如 Fragments，这就是在 Andoird “红灯” API '
            '中的招牌 API。这个 API 的整个生命周期的糟糕程度达到了令人发指的地步，好吧其实 Activities 和 '
            'Fragments 都是如此。说句不中听的，iOS '
            '反而却没有这么糟糕的API。去年夏天我试了试这些API，它们是如此之糟糕以至于我当时就放弃了。我算是彻底服了。去它的，我还是以后找个人来帮我写这些程序吧。</p>\n'
            '<p>接下来的一年半，我就没再碰过 Android 编程。</p>\n'
            '<h3>来自俄罗斯的救星</h3>\n'
            '<p style="text-align: left;">我一直听说，有一种新语言叫做 Kotlin，可以用来写基于 JVM 或者 '
            'Android 程序。发明这种语言的不是别国，正是战斗的民族俄罗斯。更具体一点儿，它是由 JetBrains '
            '开发。JetBrains 可是世界知名的 IDE 开发商，代表作是 Intellij '
            'IDEA，还有他们那可爱而且大名鼎鼎的橘色，绿色，紫色和黑色混合的暗色“Darcula”主题。</p>\n'
            '<p style="text-align: center;"><img class="alignnone" '
            'src="http://wx2.sinaimg.cn/mw690/7cc829d3gy1fftzgxa728j20ic0b0wom.jpg" '
            'width="660" height="396"></p>\n'
            '<p style="text-align: center;"><em>图：一个千年老妖按捺不住对 Java 8 '
            '的兴奋</em></p>\n'
            '<p>那么为什么要给这种语言起名叫 Kotlin 呢？好吧，有一种说法是因为 Java 的第一个字母是“J”，而 Kotlin '
            '则用了Java '
            '的下一个字母“K”作为开头。除此之外，有人还猜想（这种猜想可能来自加州大学伯克利分校），“Kotlin”这个名字的灵感还来源于“克里姆林宫”，“赫鲁晓夫”以及“克格勃”。这些都是前苏联的骄傲，所以他们就用了一个前苏联军事基地的名字“Kotlin”来命名这种语言。总之这个名字不错，而且你会习惯它的。</p>\n'
            '<blockquote><p>伯乐在线补充：Steve Yegge 在前文关于 Kotlin '
            '的名字来源，应该错了。在他自己原文评论中，也有网友指出了。</p>\n'
            '<p>正确的应该是：① JetBrains 是一家注册地在捷克布拉格的公司，在全球共有 6 '
            '个办公点：布拉格、圣彼得堡、莫斯科、波士顿、慕尼黑和新西伯利亚。但主要管理层和开发者是在圣彼得堡。② '
            '芬兰湾中有个岛就是「Kotlin/科特林」，在圣彼得堡以西 32 公里。</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx3.sinaimg.cn/large/7cc829d3gy1fftze72i5xj20mr0c1grh.jpg"></p></blockquote>\n'
            '<p>我发现去年业界关于 Kotlin '
            '只是有不少“嘀咕（buzz）”。注意，只是“嘀咕”，不是天花乱坠地吹牛宣传。人们只是低调地“嘀咕”着。好吧，总之，我当时看了一下，然后就觉得这个语言和我过去 '
            '15 年看过的 50 ~ 100 种计算机语言一样，这也是一门可以替代 Java 的语言，当然，我认为任何理性的语言都能替代 '
            'Java。</p>\n'
            '<h3>对 Kotlin 的第一印象</h3>\n'
            '<p>我第一次看到 Kotlin '
            '的时候，真心觉得这种语言不可能在现实生活中用到，真的是一点可能性都没有。其实我也就是走马观花。我的第一印象？这个语言也没什么大问题。它很简洁，也具有先进的特性。如果说它时髦也行，因为它几乎囊括了计算机语言设计上的所有最新潮流。不过这也没什么大不了，因为很多语言也都满足这一点。比如，Rust。Rust '
            '也是一门健壮的，名字起得很好的，但是没什么人用的语言。</p>\n'
            '<p>Kotlin 给我的一种奇怪的感觉是“似曾相识”，后来我才反应过来，原来这是因为它和 Swift '
            '很像。我之所以没有马上反应过来，是因为我的 iOS 程序因为历史代码的原因不得不用 Objective-C 而不是 Swift '
            '来写。当然现在我也弄明白了：其实 Kotlin 的历史比 Swift 要悠久几年，所以正确的说法应该是：<a '
            'href="http://mp.weixin.qq.com/s?__biz=MjM5OTA1MDUyMA==&amp;mid=2655438427&amp;idx=2&amp;sn=ed5433de4a067d6aae2facd6dd094ec2&amp;chksm=bd730a2c8a04833ad8f44780d12ea1fb18503472397daec8645aa3d0fe316c58e61fa7c83d69#rd" '
            'target="_blank">Swift 和 Kotlin 很像</a>。</p>\n'
            '<p>不过即便如此我当时也没准备用这种语言干活。Kotlin '
            '对我来说确实是一种语法优雅的语言，但是我觉得我对这门语言还没有掌握到足够的程度，以至于让我可以用它来应付残酷的现实工作。</p>\n'
            '<h3>从 Java 叛逃到 Kotlin</h3>\n'
            '<p>我不太记得我是具体怎么爱上 Kotlin 的了。但是我敢肯定的是这绝对不是有意为之。</p>\n'
            '<p>我努力回忆了一下，事情是这样的，我做的那个游戏的玩家跟我说了好久，让我开发一个 Android 版本。这个游戏是 12 '
            '月份在 Apple Store 上架的，然后几周之内，大量粉丝就跟我说，他们是 Andorid '
            '用户，所以没法玩到这个游戏。所以，尽管我已经“发誓”再也不碰Android '
            '编程了，但是用户就是上帝，所以我又开始尝试了。不过这一次要换个玩儿法——不能再把胃口坏在 Android 的 Java '
            '语言上了。我需要有个现成的框架，或者什么类似的东西，来让工作变得简单一点儿。</p>\n'
            '<p>在 1 月中旬，我做了一个粗略评估，然后就决定用 Kotlin 来开发了，Kotlin 当时可同时支持 Dalvik 和 '
            'Art 两种 Android 虚拟机。我觉得我的评估是基于以下几个原因：</p>\n'
            '<ul>\n'
            '<li>1. Kotlin 已经小有名气；</li>\n'
            '<li>2. 当时我写 iOS 版的时候就想用 Swift（但是没用成）；</li>\n'
            '<li>3. Kotlin有一种挺不错的 Android DSL 叫做 '
            'Anko，这勾起了我的兴趣，虽然最后我并没有真的用到它。</li>\n'
            '</ul>\n'
            '<p>所以我就用 Kotlin 开始做了。在接下来的 4-5 周内，我用 Kotlin '
            '重写了游戏的服务平台。要知道这个平台之前已经有 20 多年历史了。用了一个月的 Kotlin，我就被完全征服了。我不是要说 '
            'Scala 或者其他语言的坏话，但是对我这种普通码农来说，Koltin 是完美的。我的要求不高，给口饭吃就行，知道不？Scala '
            '固然很好，但是它好得过头了，就像牛蛙\\牛脑\\松露蜗牛这些高档菜那么好。要知道我就是个蓝领，Clojure、Scala '
            '这类的语言对我来说太高大上了。</p>\n'
            '<p>我大约花了 3 天时间来学习 Kotlin 的各种语法，然后就开始正式编程了，虽然我还是很不熟练，但是我知道这种语言和 '
            'IDE 工具足以让我解决各种麻烦。</p>\n'
            '<p>当我对这种语言稍微熟悉了一些以后，我就知道，我应该不会再去爱上另外一种语言了，因为 Kotlin '
            '实在是太迷人了。你在代码写出来的东西让你觉得很酷。当然我以前用其他的语言编程的时候也体验过类似的感觉，但是<strong>那些语言的学习曲线一般都非常陡峭</strong>。Kotlin呢，它就是大救星：当 '
            'Java 程序员为了 Java 8 弄出来的一大堆新概念挠头的时候，Kotlin 出现了。Kotlin 能实现 Java 8 '
            '的各种新特性，并且通过对 coroutines 的支持，其实能实现更强大的功能，而且语法表现力更简洁。Java 8 '
            '确实也能表达很有意思的逻辑，但是很繁琐，感觉就像让你说话之前要先给你嘴里塞沙子。</p>\n'
            '<p>我想 Kotlin 上手很容易的原因太显而易见了，要归功于它的 IDE 支持。现在几乎所有的 JVM 语言或者 '
            'Android 语言的 IDE 支持都是由社区的几个志愿者在维护（当然 Java 除外）。而 Kotlin 则是来自世界级的 '
            'IDE 厂商（Jetbrains），所以 Kotlin 打一开始就是自带 IDE 支持的。有多少语言能做到从发明伊始就能有 IDE '
            '支持呢？编程语言的进化历程一般做不到这一点。况且有的编程语言从一开始就是要避开 IDE '
            '这个因素的（Hi！Rob）另外一个能一开始就做到 IDE 支持的语言就是 C#，当然 C# '
            '毫无疑问是全世界最好的编程语言之一。</p>\n'
            '<blockquote><p>伯乐在线译注：上面这段中的 Rob，应该是指 Go 语言的发明者 Rob '
            'Pike，作者在这里也许是暗讽 Go 语言从发明到现在都没有一个靠谱的 IDE 支持吧。</p></blockquote>\n'
            '<p>作为一个自带 IDE 支持的语言，你在 Kotlin buffer 敲代码的时候，打字基本对就可以了。IDE '
            '会帮你补全你没写完的部分。你知道吗，你甚至可以把Java代码复制到IDE里面，然后 IDE '
            '会帮你自动转换成Kotlin代码。如果你觉得 Java 的 IDE 都还不错，那么我可以很荣幸地告诉你，Kotlin IDE '
            '会把这种“不错”推进到前所未有的地步。甚至有一个前微软工程师跟我说：“我本以为微软的 Visual Studio 是 IDE '
            '界的标杆，是不可超越的。但是我觉得 IntelliJ IDEA 的确要更好。”在我看来，因为我对 Visual Studio '
            '不熟悉，所以我在这里只是引用他说的话。不过我认为 IntelliJ IDEA 至少和 VS 是同等水平。</p>\n'
            '<p>诚然，在现实工作中我还是要经常切换到 Emacs 的。IntelliJ '
            '在你打字很快的时候还是有点儿反应不过来。如果你打字总是只打一半儿的话，那么自动补全动能的运行压力还是很大。况且对纯文本的处理也很糟糕，这是所有 '
            'IDE 的通病。所以 IDE 和 Emacs 你都是需要用到的。不幸的是，目前 Emcacs 对 Kotlin '
            '的支持现在也就那么回事儿，不过相信以后会越来越好。我现在反正就是在 Emacs 和 IntelliJ 之间来回切换。目前还算是 '
            'OK。</p>\n'
            '<p>就是这样了。我曾经花了大约 10 年的时间，来找一种语言来取代 '
            'Java。我真的找得很努力很辛苦。讽刺的是，在我放弃了以后，这种东西居然出来了。去看看吧。Kudos 对 JetBrains '
            '来说，是一个惊艳的成就。</p>\n'
            '<h3>Android：Kotlin 的杀手锏</h3>\n'
            '<p>这年头新生编程语言几乎很难产生什么巨大影响力。不是说现在没有新语言产生了，相反是每年都有质量不错的新语言产生，但是然并卵，没人用！要给“不可能”划定界限很难。但是计算机语言的市场已经非常饱和了。如果要让一个新的语言能够大火（而且这个规律在过去 '
            '10 到 20 '
            '年都成立），那么这个语言就必须有一个“杀手级”的应用。这门语言需要绑定一个平台，让大家都非常迫切地区使用这个平台，这才能促进大家学习这门语言以便在这个平台上编程。</p>\n'
            '<p>就目前看来，我们上面所说的杀手级应用——也就是我们上面扯了这么多的东西——却是 Android 恶心的 API。每当你顺着 '
            'Android 路线往下走，一遇到 API 就会卡壳，这只会让你去诅咒 Android 这个平台。Android 不论有多少优秀的 '
            'API 都不管用，重要的是，Android 糟糕的 API '
            '太多了，所以你不得不停下来去找”现成”的办法（solution）。</p>\n'
            '<p>不过兄弟，Android 里面解决问题的“现成办法”可是不少。对于新手来说，有一大堆 Java annotation '
            'processors可用，这就为语言的问题埋下伏笔。更不要提一堆迷你的框架（比如 Lyft 的 Scoop）。还有那些和 '
            'Android（Java）完全独立的框架：React Native、Cordova、Xamarin、Flutter等等。</p>\n'
            '<p>如果以上说的技术你都不喜欢，那么你还可以从语言的角度来解决问题。当然，那些完全独立的框架是基于特定语言的，而并不是Java。</p>\n'
            '<p>Kotlin 的竞争优势在于它并不是完全隔离于 Java 语言。它基本上是 100% 可与 Java '
            '相互翻译转换的。这很像C++ 与 C 的关系一样（但它们做不到 100% ）。Kotlin '
            '也是在不断进化的。所以你可以直接把你写的 Kotlin 代码扔到 Android '
            '工程中，连目录都不用改，然后程序就能正常运行了，方便得眼睛都不用眨一下。</p>\n'
            '<p>其他种类的 Android '
            '平台都倾向于迫使你去学习一种全新的语言以及对应的平台，其编程范式，理念和特性都各不相同。Kotlin 则是让你直接写出 '
            'Android 可运行的类，就跟其他 Android 程序员用 Java 写出来的一样。其实其底层的 API 都是一样的，但是 '
            'Kotlin 组织得要好很多。</p>\n'
            '<p>还记得我去年夏天把 Android 编程书扔了然后再也不打算看了么。现在 Kotlin 则让我感觉：Android '
            '编程是快乐的？我甚至觉得可能 Android 那些糟糕的 API 很可能并不是那么糟，只是 Java '
            '把它搞得太恶心了而已。</p>\n'
            '<p>Kotlin 致力于让大家绕过 Android API 那些恶心的东西，并且能让你充分发挥你的经验，这一点甚至比 iOS '
            '做得还要好。好吧，至少来说比 Objective-C 做得好，因为我觉得 Swift 肯定也不会差。知道为什么吗？因为 Swift '
            '和 Kotlin 很像啊。</p>\n'
            '<p><img class="alignnone" '
            'src="http://wx4.sinaimg.cn/mw690/7cc829d3gy1fftzgxualfj215o0k00sy.jpg" '
            'width="600" height="288"></p>\n'
            '<h3>我特别喜欢 Kotlin 的地方有哪些？</h3>\n'
            '<p>嗯，这个话题其实要细说就很大了，我觉得我最好再开一篇文章来写这个。这里我就提一下那些高级（high-level）且共性的点。</p>\n'
            '<ul>\n'
            '<li><span style="color: #ff0000;"><strong>Kotlin 很像 '
            'Java</strong></span>。它长得不像 Clojure 或者 Scala '
            '那么奇怪（承认现实把，这两种语言就是挺奇怪的）。所以你学 Kotlin 应该很快。这门语言显然就是写给 Java '
            '开发者来用的。</li>\n'
            '<li>它比 Java 更安全。Java 很多需要 annotation processors 来做的事情在 Kotlin '
            '里则是内置的，例如 overriding，nullability等等。而且 Kotlin 对数值转换的规则也更安全，虽然我不太喜欢 '
            'Kotlin 的处理方式，但是我还是很感谢这门语言强制我去思考我的数值表现形式。</li>\n'
            '<li><strong><span style="color: #ff0000;">Kotlin 和 Java '
            '是可以互译的</span></strong>。真的是指无缝互译。我见过很多 JVM '
            '语言最后挂掉，就是因为其不支持子类继承机制。我不知道什么时候就会用到静态内部类，非静态内部类，或者什么破玩意儿类。Kotlin '
            '在设计时就把和Java互译的属性放在第一位，也就是说，把 Java 翻译到 Kotlin '
            '可以逐渐进行，一次可以直接转换一个文件。</li>\n'
            '<li><strong><span style="color: #ff0000;">Kotlin '
            '很简洁</span></strong>。你要知道我也算是个高尔夫球手，所以我实话实说。如果在一切都相同的情况下，我更喜欢短的程序，只要它写的逻辑清楚。Kotlin '
            '对我来说就像是打了一轮好局。平均下来我发现 Kotlin 的代码长度比相同逻辑的 Jython 代码短了 '
            '5%-10%（这可是我用某种“黄金标准”测出来的），而且还能保证程序的可读性和类型安全。</li>\n'
            '<li><span style="color: #ff0000;"><strong>Kotlin '
            '更贴近实际</strong></span>。Kotlin '
            '支持在一个文件里定义多个类，支持一等方法，操作符重载，扩展方法，类型别名，字符串模板，还有一堆看上去没什么新意的语言特性它都支持。而我就是不明白为什么 '
            'Java 什么都不支持，连人们需要的语言特性它都不做。</li>\n'
            '<li><span style="color: #ff0000;"><strong>Kotlin '
            '进化很快</strong></span>。例如刚刚宣布启动的对 coroutine 的支持，将会成为提供 asyn/await， '
            'geneator 以及所有其他无锁并发特性的基础设施。</li>\n'
            '<li><span style="color: #ff0000;"><strong>Kotlin '
            '很擅长“拿来主义”</strong></span>。Kotlin '
            '经常从其他的计算机语言设计中抄点子，并且也毫不避讳。他们说：“我们很喜欢 C# '
            '的处理方式，所以我们就自己照着撸了一个。”</li>\n'
            '<li><span style="color: #ff0000;"><strong>Kotlin 支持 '
            'DSL</strong></span>。DSL 不到深思熟虑万不得已的话千万不要引入，但是不得不承认 DSL 威力巨大。例如你看 '
            'Gradle 的 DSL 和 Maven 比，在典型的 Maven 项目里，配置代码肯定要超过上千行。所以 Kotlin '
            '是来给你降工作压力的。</li>\n'
            '<li><strong><span style="color: #ff0000;">Kotlin 的 IDE '
            '是在是太棒了</span></strong>。刚才不久我才在 Emacs 里写程序文件，结果 Emacs '
            '报了一对错。而我把同样的代码拷贝到 IntelliJ 里面，然后按 Alt-Enter 逐一自动修复了 50 '
            '多条，然后所有的错误就都搞定了。这真是帮了大忙啊。</li>\n'
            '<li>\n'
            '<li><strong><span style="color: #ff0000;">Kotlin '
            '很有趣</span></strong>。我跟你们说，Kotlin 就是有趣。也许这是我发自潜意识地在做广告。Kolint '
            '的关键字和方法名都很有意思。Kotlin 把我从一个只会死编程的码农转变为了一个计算机语言的爱好者。</li>\n'
            '</ul>\n'
            '<p>总之，你就这么想：我收拾东西搬家，然后碰到了邻居 Kotlin。我之前也算见过的一堆计算机语言，但是只有 '
            'Kotlin，能够让我在那么短的时间内重写我的游戏服务器代码。而我现在则是在用 Kotlin 重写我之前写过的一切。</p>\n'
            '<p>我也知道还有好多其他的程序员也对 Kotlin 感觉非常好，打算成为 Kotlin 程序员。其中大部分的人应该在 1-2 '
            '年之内水平就能超过我了。我们私下里谈论过，互相都说“Kotlin '
            '让编程感觉美好的感觉又回来了。”还不错，再我们尚未对编程全部失去兴趣之前，Kotlin '
            '来了。就仿佛你只要把语言的语法学会了。这回把你带回到那种第一次学编程的感觉，无论写什么都觉得自己很牛逼。</p>\n'
            '<p>再一次，向 JetBrains 致敬。他们对计算机语言做出了巨大的贡献！我脱帽致敬。</p>\n'
            '<p>那么 Kotlin 比你用的任何其他编程语言都好吗？我想对我来说是的。因为，如果你碰巧是在用 Java '
            '的话。如果你一整天就是泡在椅子面前写 Java，那么你会发现 Kotlin '
            '简直就是一股清流。所以也让我知道你们是怎么想的吧。</p>\n'
            '<p>免责声明：本文只是阐述我个人对 Android 开发的观点，并不代表我的雇主（谷歌）或者 JetBrains '
            '的观点。</p>\n'
            '<p>\xa0</p>\n'
            '<h3>伯乐在线摘录原文的一些评论：</h3>\n'
            '<p><strong>Igor Tovstopyat-Nelip</strong></p>\n'
            '<blockquote><p>好文章！</p>\n'
            '<p>JetBrains '
            '不在捷克。虽然它是在（捷克）布拉格成立的，但主要在圣彼得堡。他们很多管理层和开发者都是俄罗斯人，很多是从圣彼得堡大学毕业的 '
            '。</p>\n'
            '<p>关于取名，Java 语言是出自印尼群岛中的 Java 岛。Kotlin 是芬兰湾中的一座岛，离圣彼得堡很近。彼得大帝在 18 '
            '世纪早期从瑞典那里抢过了圣彼得堡。此后，一直是俄国波罗的海舰队的海军基地。圣彼得堡有北国风光之美，海军神庙（Naval '
            'Temple）令人印象深刻。</p>\n'
            '<p>我们公司（位于亚特兰大）也试过多种 JVM 语言，Java 是首选。现在我们更对 Kotlin '
            '感兴趣了。大家都非常喜欢。并且 Kotlin 和 Java 是无缝互通的。</p>\n'
            '<p>Kotlin 也能编译成 JS，并且值得一提的是，Kotlin Native 也处于火热发展中，看起来会是 Rust '
            '的强劲对手。</p></blockquote>\n'
            '<p>匿名网友：</p>\n'
            '<blockquote><p>我过去也一起用过 Eamcs 和 JetBrains 的 IDE（PyCharm 和 '
            'Webstorm）。虽然这种组合很怪，但出奇的好。Emacs 适合心灵控制级别的文本编辑，IDE '
            '适合面向鼠标的闲逛和小修改。</p></blockquote>\n'
            '<p>Stephen French：</p>\n'
            '<blockquote><p>我喜欢 C#，对 Java 落后太多真的失望至极，因为我的工作倾向 JVM。Kotlin '
            '看起来非常有意思！</p></blockquote>\n'
            '\r\n'
            '        \r\n'
            '            <blockquote class="rewards">\n'
            '        <p><strong>打赏支持我翻译更多好文章，谢谢！</strong></p>\n'
            '        <a href="#rewardbox" id="rewards-button" '
            'class="fancybox"><span class="btn-bluet-blue href-style"><i '
            'class="fa fa-jpy"></i> 打赏译者</span></a>\n'
            '    </blockquote>\n'
            '\n'
            '    <div id="rewardbox">\n'
            '        <h4>打赏支持我翻译更多好文章，谢谢！</h4>\n'
            '                <p>\n'
            '                        <img '
            'src="http://www.jobbole.com/wp-content/uploads/2016/04/78805a221a988e79ef3f42d7c5bfd4187.jpeg">\n'
            '            \n'
            '                    </p>\n'
            '    </div>\n'
            '\n'
            '    \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111249" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111249votetotal">2</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111249" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 4 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i> 6 评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/huangxiaofei">黄小非</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/huangxiaofei">\r\n'
            '\t\t\t<img '
            'src="http://www.jobbole.com/wp-content/uploads/avatars/5423/Corbis-42-221258652.jpg">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            黄小非：毕业于重庆大学计算机系，南开大学软件工程硕士，SCJP。 '
            '目前在一家国企信息中心任职软件开发工程师。主要技术兴趣为Java平台相关技术、系统构架、C/C++、计算机图形学等。（新浪微博：@黄小非）        '
            '</span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/huangxiaofei" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a '
            'href="http://blog.jobbole.com/author/huangxiaofei/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/huangxiaofei/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 58</a>        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://wx4.sinaimg.cn/large/7cc829d3gy1ffu5zuwglij20dw099406.jpg'],
 'tags': '开发,,Kotlin,Steve Yegge',
 'thumb_up_num': 2,
 'title': '谷歌大牛说：为什么 Kotlin 比你们用的那些垃圾语言都好',
 'url': 'http://blog.jobbole.com/111249/',
 'url_obj_id': 'e1424ea1775d8a39ee3e2c46397ddc08'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/111261/> (referer: http://blog.jobbole.com/all-posts/)
2017-06-04 21:38:48 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:48 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 743
2017-06-04 21:38:48 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:48 [elasticsearch] DEBUG: > 写给程序员的 Unicode 入门介绍
2017-06-04 21:38:48 [elasticsearch] DEBUG: < {"tokens":[{"token":"写给","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"程序员","start_offset":2,"end_offset":5,"type":"CN_WORD","position":1},{"token":"程序","start_offset":2,"end_offset":4,"type":"CN_WORD","position":2},{"token":"序","start_offset":3,"end_offset":4,"type":"CN_WORD","position":3},{"token":"员","start_offset":4,"end_offset":5,"type":"CN_CHAR","position":4},{"token":"unicode","start_offset":7,"end_offset":14,"type":"ENGLISH","position":5},{"token":"入门","start_offset":15,"end_offset":17,"type":"CN_WORD","position":6},{"token":"介绍","start_offset":17,"end_offset":19,"type":"CN_WORD","position":7},{"token":"绍","start_offset":18,"end_offset":19,"type":"CN_WORD","position":8}]}
2017-06-04 21:38:48 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:48 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 176
2017-06-04 21:38:48 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2017-06-04 21:38:48 [elasticsearch] DEBUG: > IT技术,Unicode
2017-06-04 21:38:48 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"unicode","start_offset":5,"end_offset":12,"type":"ENGLISH","position":1}]}
2017-06-04 21:38:48 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2017-06-04 21:38:48 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/e2f9b017ee6039fdacf6194ecc51a729 HTTP/1.1" 200 175
2017-06-04 21:38:48 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/e2f9b017ee6039fdacf6194ecc51a729 [status:200 request:0.023s]
2017-06-04 21:38:48 [elasticsearch] DEBUG: > {"thumb_up_num": 3, "create_date": "2017-06-04", "url": "http://blog.jobbole.com/111261/", "comment_num": 0, "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - 逆旅 翻译，艾凌风 校稿。未经许可，禁止转载！英文出处：Nathan Reed。欢迎加入翻译组。\n程序员世界对这个名字发自内心的恐惧和敬畏。我们都知道在我们的软件中应该 “支持 Unicode”（无论是什么意思——对所有的字符串使用 wchar_t，是吗？）。但 Unicode 很深奥，它有千页的 Unicode 标准，还有几十页的补充附录、报告和注解，简直太吓人了。即使 Unicode 诞生 30 多年后，程序员们还觉得它很神秘。\n几个月前，我开始对 Unicode 着迷，决定花些时间仔细了解一番。在本文，我来从程序员的视角对其做介绍。\n我主要关注字符集，与字符串处理和 Unicode 文本相关的东西。因此，这里我不会过细地聊字体、文本布局、形状、渲染，或本地化，那些是另外的议题，超出了我的能力（知识）范围。\n多样性和内在复杂性\n当你开始学习 Unicode，有一件事情很明显，就是它和你熟悉的字符集（比如 ASCII）相比，Unicode 复杂性要高了一大截。这不仅仅是指 Unicode 包含了很多的字符，虽然这是一个方面。Unicode 还有很多内部结构，特性和特殊情况，使其不只是人们所认为的纯粹的“ 字符集”。本文后续会介绍一些相关内容。\n当面对所有的复杂性时，尤其是作为工程师，很难不问自己，“为什么我们需要这么多？真的有必要吗？可以简化吗？”\n然而，Unicode 的目标是准确地表示全世界的书写系统（writing systems）。Unicode 协会的目标是“让全世界的人们不论什么语言都可以使用电脑”，所以你可想见，书面语言的多样性是巨大的！迄今为止，Unicode 支持135 种不同的书写系统，包含约 1100 种语言，但目前还有超过 100 种书写系统没有支持，包括现代的和已成为历史的，Unicode 协会还在努力将其加进来。\n鉴于分支的多样性，要表示它们必然是一个复杂的项目。Unicode 接受了它的多样，接受了任务（包含所有人类的书写系统）中的内在复杂性，它没有在名字简化上做太多取舍，但是它对需要完善任务的地方的规则，做了异常处理。\n此外，Unicode 承诺不仅支持单一语言的文本，还支持多种语言共存于一个文本中——引进了更多的复杂性。\n大多数编程语言都有处理底层文本操作的的库，但是作为程序员，你仍然需要知道一些 Unicode 特性 ，知道何时怎样去应用它。要了解这些东西可能得花些时间动动脑筋，但别灰心——想想有数以亿计的人，如果你的软件支持他们的语言，那他们也可以使用你的软件哒。所以，拥抱复杂吧！\nUnicode 编码空间\n我们先从几个大的方向入手。Unicode 的基本元素 —— 它的 “字符”，虽然这种叫法不是太贴切——被称作编码点（Code Point）。编码点通过数字来区分，通常写成 16 进制的形式再加前缀“U+”，例如 U+0041 表示拉丁字母 “A” 、U+03B8 表示 希腊字母 “θ”。每个编码点都有一个简称，还有一些其他属性，Unicode 字符数据库 对此有详细说明。\n所有编码点组成的集合被称作编码空间（Code Space）。Unicode 编码空间包含 1,114,112 个编码点。然而，其中只有128,237 个编码点 —— 编码空间的 12% 被赋值，目前。还有很多空间用来增长！Unicode 还保留了另外 137,468 字符 作为 “自用” 空间，这些字符没有标准的含义，可以被个人应用所使用。\n空间分配\n为了对编码空间的布局有个了解，把它可视化会比较直观。下面是整个编码空间的布局，一个像素代表一个编码点。使用小方块来表示以保证视觉的一致性；每个小方块是 16×16 = 256 个编码点，每个大方块是一个面有 65536 个 编码点。总共加起来有 17 个面板。\n\n\n白色表示未用空间；\n蓝色表示已用空间；\n绿色表示自用区域；\n小的红色区域是代理区（surrogates，后面会讲）。\n\n如你所见，被使用的区域分布有点稀疏，但都集中在前三个面里。\n0 号面板也被称作 “基本多语言面板（Basic Multilingual Plane，简称 BMP）”。BMP 包含现代文本所需的基本所有字符，包括拉丁文、斯拉夫文、希腊文、汉字（中国），日文、朝鲜文、阿拉伯文、希伯来文、梵文（印度）等等。\n（过去，编码空间只有 BMP 而已—— Unicode 最初设想是 一个 16 Bit 的编码，只包含 65536 个字符。在 1996 年扩充到现在的规模。然而，绝大多数现代字符属于 BMP。）\n1 号面板包含历史上的文字，比如苏美尔楔形文字和埃及象形文字，还有 emoji 和其他各种符号。2 号面板包含一大块不常用的和历史上的汉字字符。剩下的面是空的，除了 14 号面板中有一小部分被用作格式化字符；15-16 号面板全部保留自用。\n\n书写系统\n让我们放大前三个面板，因为这是最重要的部分：\n \n\n这张图用颜色表示了 Unicode 中135 种不同的书写系统。你可以看到汉字（蓝色）和朝鲜语（棕色）占了 BMP 很大一部分（右边的大方块）。与之相对，此图中所有的欧洲，中东，南亚语言加起来刚好占了 BMP 的第一行。\n编码空间的很多区域都和更早的编码兼容或相同。例如，Unicode 的前 128 个字符就是 ASCII 的拷贝。显然是对兼容性很有好处——很容易无损的从小编码转向 Unicode （反过来也一样，只要没有使用小编码之外的字符）。\n使用频率\n可视化编码空间还有一个有趣的方法，就是看使用频率的分布——换句话说，就是每个编码点在真实世界中使用的频率。0-2 号面的热力图是基于来自维基百科 和 推特（所有语言）的大量文本所得。频率增长的方向是黑（没出现）、红、黄、白。\n\n你可以看到，绝大多书样本文本都分布在 BMP 中，有些零散的使用来自1-2 号面。最大的异常是 emoji，它点亮了 1 号面最底下那的几个小方块。\n编码\n我们知道 Unicode 编码点，通过它们在编码空间中的下标来定义，范围从 U+0000 到 U+10FFFF。但是在内存或文件中编码点如何用字节表示呢？\n对计算机友好的最省事方式是用 32 位整数来存储编码点下标。这样做是可行，但是每个字符用 4 个字节有点浪费。当你处理大量文本的时候，使用 32 位整数存储 Unicode 会占用大量额外存储、内存、带宽等。\n于是，Unicode 有了几个紧凑的编码 。32 位整数编码被称作 UTF-32（UTF=”Unicode Transformation Format”），但是很少被用来存储。顶多作为临时内部表示出现，用来检查或操作字符串中的编码点。\n最常见的是，你会看到 Unicode 文本被编码为 UTF-8 或 UTF-16。这些都是可变长度编码，分别由 8-bit 或 16-bit 为一个单元组成。这些方案中，下标值较小的编码点占用的字节数也少，会节省不少内存。这样做的代价是处理 UTF-8/16 需要以编程的方式来处理，会慢一些。\nUTF-8\n在 UTF-8 中，每个编码点依据下标值，被存储为 1 到 4 个字节。\nUTF-8 使用二进制前缀系统，在此系统中每个字符的最高位的几个比特表明它是否是单个字节，多字节序列的开始，或中间字节；剩余的比特连接起来表示编码点的下标。下面的表格展示了UTF-8 是如何编码的：\n\n\n\nUTF-8 (二进制)\n编码点 (二进制)\n范围\n\n\n\n\n0xxxxxxx\nxxxxxxx\nU+0000–U+007F\n\n\n110xxxxx 10yyyyyy\nxxxxxyyyyyy\nU+0080–U+07FF\n\n\n1110xxxx 10yyyyyy 10zzzzzz\nxxxxyyyyyyzzzzzz\nU+0800–U+FFFF\n\n\n11110xxx 10yyyyyy 10zzzzzz 10wwwwww\nxxxyyyyyyzzzzzzwwwwww\nU+10000–U+10FFFF\n\n\n\nUTF-8 有一个方便的属性，即最开始128 个字符（ASCII字符）被编码为单个字节，所有的非 ASCII 字符被编码为 128-255。这产生了两个好处。首先，任何已经是 ASCII 编码的字符串和文件无需转换就可以被 UTF-8 识别。其次，大量的广泛使用的编程惯例——比如 NULL 结尾，分隔符（n,t,’,’,”)等——在 UTF-8 中也是可用的。ASCII 字节不会出现在非 ASCII 编码点中，所以搜索以 NULL 结尾或分隔符结尾的字符串是可以的。\n多亏了这个便利，使扩展遗留 ASCII 程序和 API 来处理 UTF-8 字符变得简单。UTF-8 被广泛运用在 Unix、Linux 和网络世界中，还有许多程序员主张 UTF-8 应该作为任何地方的默认编码。\n然而，UTF-8 还不能全面替代 ASCII。例如，遍历字符串中的 “字符” 的代码需要解码 UTF-8 并遍历编码点（或字位簇（grapheme cluster）——后面会讲到），而不是字节。当你测量字符串 “长度” 时，你得考虑是要字节长度，还是编码点长度，还是文本渲染的宽度为单位的长度还是其它长度。\nUTF-16\n你可能遇到的另一个编码是 UTF-16。它使用 16-bit 字，每个字符被存储为 1 个或 2 个字。\n和 UTF-8 一样，我们可以用二进制前缀的形式表示 UTF-16 的编码规则：\n\n\n\nUTF-16(二进制)\n编码点（二进制）\n范围\n\n\n\n\nxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxx\nU+0000–U+FFFF\n\n\n110110xxxxxxxxxx 110111yyyyyyyyyy\nxxxxxxxxxxyyyyyyyyyy + 0x10000\nU+10000–U+10FFFF\n\n\n\n但是，通常人们谈到 UTF-16是因为它涉及到了一个在编码点术语中被称作“代理（surrogate）”的东西。所有在范围 U+D800-U+DFFF（或在其他范围） 中的编码点，这些和上表中二进制前缀 110110 和 110111 匹配的编码点——是 UTF-16 中的保留区域，它们自身不表示任何有效的字符。它们仅用于上面 2 个字的编码模式中，被称作“代理对（surrogate pair）”，代理编码点在任何其他情况下都是非法的！它们不能出现在 UTF-8 和 UTF-32 中。\n在过去，UTF-16 是1996 年之前的 Unicode 版本的派生物，那时只有 65536 个编码点。初衷是不应有不同的编码，Unicode 应该是简单的16-bit 字符集。后来，编码空间被扩充用来表示不常用的（仍然重要）的汉字字符，这是 Unicode 设计者之前没计划的。代理区在那时被引进，直说了吧，作为拼凑，允许16-bit 编码访问新的编码点。\n如今，Javascript 使用 UTF-16 作为其标准的字符串表示：如果你问一个字符串的长度，或遍历它等，结果都以 16-bit 的字为单位，同时任何 BMP 之外的编码点都用代理对表示。UTF-16 也被微软 WIN32 API 使用；尽管 Win32 同时支持 8-bit 和 16-bit 字符串，但是 8-bit 版本仍然莫名其妙地不支持 UTF-8——只支持使用旧编码的代码，像 ANSI。这使得 UTF-16 成为在 Windows 上获得 Unicode 支持的唯一方法。\n顺便说一下，UTF-16 字符可以大端存储，也可以小端存储。Unicode 在这个问题上没有说明，虽然它确实鼓励一个惯例，即把 U+FEFF 零宽无间断间隔这个字符放到 UTF-16 文件开头作为字节序标识，来消除字节序问题。（如果文件和系统的字节序不同，BOM（ByteOrderMark） 会被解码为 U-FFFE，这不是一个有效的编码点。）\n组合标记\n目前为止，我们一直在讨论编码点。但是 Unicode 中，字符比单独的编码点更复杂！\nUnicode 包含一个系统，可以合并多个编码点，动态组合字符。此系统用各种方式增加灵活性，而不引起编码点的巨大组合膨胀。\n例如，在欧洲语言中，组合标记出现在变音符和字母的使用中。 Unicode 支持各种各样的变音符号，包括尖音符号的和重音符号、元音变音符号、变音符号等等。所有这些变音符可以被使用在任何字母表的字母中。事实上，多个变音符号可以被使用在一个字母上。\n如果 Unicode 试图为每个字母组合或变音符组合分配一个独立的编码点，事情会变得无法控制。相反，动态组合系统可以让你构造你想要的任何字符，通过以一个基础编码点（字母）开始然后附加额外的编码点，被称作“组合标识”，来指定变音符。当一个文字渲染器看到字符串中有这样的序列时，它会自动堆叠变音符到基础字母的上面或下面来造出一个组合字符。\n例如，带重音的字符“Á” 会被表示成由两个编码点组成的字符串：U+0041 “A” 拉丁大写字母 a 加上 U+0301 “◌́”组合尖音符号。这个字符串自动被渲染成单个字符：“Á”。\n如今，Unicode 还包含许多 “预设的” 编码点，每个表示一个被使用过的组合，例如 U+00C1 “Á” 带锐音符的拉丁大写字母A 或 U+1EC7 “ệ” 带扬抑符和下点的小写拉丁字母 e。我怀疑这些大多继承自融入 Unicode 的旧编码，来保证兼容性。实际上，对于欧洲语言中的大多数常见的带变音符号的字母都有预设，所以文本中动态组合用的不多。\n可是，组合标志系统确实允许任意数量的变音符号被叠加到任何基础字符上。使用归谬法的 Zalgo 文本，它通过随机叠加任意数量的变音符号在每个字母上，让它溢出行距，产生混乱现象。（如下图）\n\nUnicode 中出现动态组合字符的其他地区：\n\n阿拉伯文和希伯来文中的元音标记 。这些语言中，单词通常由元音拼写。它们有变音符号标记元音（用在字典，语言教学材料，儿童教材，等地方）。这些变音符号用组合标记表示。\n\n\n\n\n希伯来文，带注音符号：\nאֶת דַלְתִּי הֵזִיז הֵנִיעַ, קֶטֶב לִשְׁכַּתִּי יָשׁוֹד\n\n\n\n\n正常文本（不带注音符号）：\nאת דלתי הזיז הניע, קטב לשכתי ישוד\n\n\n\n\n天成体（梵文），这种文字被用在印度北部，梵文和其他南亚语言中，用组合标记标识特定元音的附加到辅音字母上。例如，“ह” + “ि” = “हि” (“h” + “i” = “hi”).\n表示音节的朝鲜字符，但是它被称作Jamo ，用来表示音节中的元音和辅音。当然也有为朝鲜文预制的编码点，同时也可以动态组合它们的 jamo。例如，“ᄒ” + “ᅡ” + “ᆫ” = “한” (“h” + “a” + “n” = “han”).\n\n规范等价性\nUnicode 中，预设字符和动态组合系统并存。后果就是有多种方法表示同一个字符串——不同编码点序列产生相同用户可感知的字符。例如，我们之前看到的，表示字符 “Á”，我们可以用一个编码点 U+00C1 ，也可以用两个编码点 U+0041 和U+0301。\n另一个歧义来源是一个字符中的多个注音符号。当两个注音符号作用在同意个基本字符上面时，注音符号的顺序很重要，例如，都在上面：”ǡ“ （点然后长音符）和 ”ā̇“ （长音符然后点）是不一样的。 然而，当音节运用在不同边时，例如。一个在上边一个在下边，编码点的顺序不会影响渲染。此外，一个有多个音节的字符，它可能会由一个预制的编码点再加其余的编码点来表示。\n例如，越南字母“ệ” 可以用以下五种方式表示：\n\n完全预设：U+1EC7 “ệ”\n部分预设：U+1EB9 “ẹ” + U+0302 “◌̂”\n部分预设：U+00EA “ê” + U+0323 “◌̣”\n完全分解：U+0065 “e” + U+0323 “◌̣” + U+0302 “◌̂”\n完全分解： U+0065 “e” + U+0302 “◌̂” + U+0323 “◌̣”\n\nUnicode 把这样的字符串集合称作 “规范等价”字符。在搜索、排序、渲染、文本选择等操作中，规范等价字符应该被同等对待。这影响到了你如何实现文本的操作。例如，假设你的程序有“查找”操作，用户搜索 “ệ”，理论上应当找到如上所有出现的所有版本的 “ệ”！\n形式正规化\n要解决如何处理等值字符串的问题，Unicode 定义了几种正规形式：是几种把字符串转化成规范形式的方法，这样它们就可以被逐点比较（或按字节比较）。\n“NFD” 正规化方法，完全分解每个字符到基本部件和组合标记，去掉字符串中任何预制的编码点。还会按渲染位置排列每个组合标记，举个例子，在字母底下的注音符号要比在上边的靠前。（不会重排有相同渲染位置的注音符号，因为它们的位置关系是可视的，前面提到过。）\n“NFC” 正规化方法，反过来，尽可能的把编码点替换成预制编码点。如果使用了不常用的注音符号组合，可能不会有任何预制的编码点，这种情况下 NFC 仍然替换它可以替换的，然后留下组合标志（和 NFD一样，还是会按渲染顺序重新排序）。\n还有一些方法被称作 NFKD 和NFKC。 这里的 “K” 指的是兼容性分解，它包含了某种程度上“相似”但是视觉上不同的字符。但我不打算讲这些。\n字位簇\n如上所见，Unicode 包含多种情况，用户认为的一个“字符” 事实上底下可能由多个编码点组成。Unicode 使用「字位簇」的概念来表示这种情况。一个由一个或多个编码点组成的字符串构成一个 “用户感知的字符”。\nUAX #29 为字位丛定义了精确的规则。它大约是 “一个基本的编码点接着任意数量的组合标记”，但是真实的定义有点复杂；它包含了朝鲜语字母，和 emoji ZWJ 序列。\n字位簇主要被用在文本编辑：它们对光标和文本选择来说是最明显的单元。使用字位簇，确保在复制和粘贴文本时不会突然丢掉一些符号，同时左右方向键也总是以一个可见字符的距离移动，等等。\n另一个用到字位簇的地方是，执行字符串长度限制——比如在数据库域中。其实，底层的限制可能是类似 UTF-8 中的字节长度之类的东西，你不能简单的通过截断字节的方式来限制长度。至少，你得 “舍去” 最近的编码点；但更好的是，舍去最近的字位簇。除此以外，你可以通过舍弃它的一个注音符号破坏一个字符，中断一个 jamo 序列或 ZWJ 序列。\n更多···\n从程序员的角度来看，关于 Unicode 还有很多东西可以讲！我还没有深入一些有趣的主题，比如映射、排序、兼容性分解和容易混淆的词，Unicode 正则表达式，和双向文本。还有个我没谈到的是实现主题——如何有效存储和查找分布稀疏的编码点数据，或着如何优化 UTF-8 解码、字符串比较和NFC 标准化。也许我会在未来的文章中讲到这些。\nUnicode 是个令人着迷的复杂系统。在字节和编码点之前有多对一的映射，除此之外编码点和“字符”之间也有（某些情况下多对多）多对一的映射关系。在每个角落都有古怪的特例。没人声称表示全部书写系统很容易，但很明显我们不会回到使用不兼容编码来拼凑的艰难岁月了。\n\r\n        \r\n            \n        打赏支持我翻译更多好文章，谢谢！\n         打赏译者\n    \n\n    \n        打赏支持我翻译更多好文章，谢谢！\n                \n                        \n            \n                    \n    \n\n    \r\n        \n    \n         3 赞\n         12 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：逆旅\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            a programmer,Do one's level best and leave the rest to God's will.I love this saying.        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  15        \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "bookmark_num": 12, "title": "写给程序员的 Unicode 入门介绍", "front_image_url": ["http://wx1.sinaimg.cn/large/63918611gy1ffv530saw0j20zk0k04b3.jpg"], "suggest": [{"weight": 10, "input": ["写给", "程序员", "程序", "介绍", "unicode", "入门"]}, {"weight": 7, "input": ["unicode", "技术"]}], "tags": "IT技术,Unicode"}
2017-06-04 21:38:48 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"e2f9b017ee6039fdacf6194ecc51a729","_version":3,"result":"updated","_shards":{"total":2,"successful":1,"failed":0},"created":false}
2017-06-04 21:38:48 [scrapy.core.scraper] ERROR: Error processing {'bookmark_num': 12,
 'comment_num': 0,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/daofazi">逆旅</a> 翻译，<a '
            'href="http://www.jobbole.com/members/hanxiaomax">艾凌风</a> '
            '校稿。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="http://reedbeta.com/blog/programmers-intro-to-unicode/">Nathan '
            'Reed</a>。欢迎加入<a target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p><img '
            'id="pic" class="" '
            'src="http://wx3.sinaimg.cn/large/63918611gy1ffv4y7078mj20a200qmx6.jpg"></p>\n'
            '<p>程序员世界对这个名字发自内心的恐惧和敬畏。我们都知道在我们的软件中应该 “支持 '
            'Unicode”（无论是什么意思——对所有的字符串使用 wchar_t，是吗？）。但 Unicode 很深奥，它有千页的 <a '
            'href="http://www.unicode.org/versions/latest/">Unicode '
            '标准</a>，还有几十页的补充附录、报告和<a '
            'href="http://www.unicode.org/notes/">注解</a>，简直太吓人了。即使 Unicode 诞生 '
            '30 多年后，程序员们还觉得它很神秘。</p>\n'
            '<p>几个月前，我开始对 Unicode 着迷，决定花些时间仔细了解一番。在本文，我来从程序员的视角对其做介绍。</p>\n'
            '<p>我主要关注字符集，与字符串处理和 Unicode '
            '文本相关的东西。因此，这里我不会过细地聊字体、文本布局、形状、渲染，或本地化，那些是另外的议题，超出了我的能力（知识）范围。</p>\n'
            '<h2>多样性和内在复杂性</h2>\n'
            '<p>当你开始学习 Unicode，有一件事情很明显，就是它和你熟悉的字符集（比如 ASCII）相比，Unicode '
            '复杂性要高了一大截。这不仅仅是指 Unicode 包含了很多的字符，虽然这是一个方面。Unicode '
            '还有很多内部结构，特性和特殊情况，使其不只是人们所认为的纯粹的“ 字符集”。本文后续会介绍一些相关内容。</p>\n'
            '<p>当面对所有的复杂性时，尤其是作为工程师，很难不问自己，“为什么我们需要这么多？真的有必要吗？可以简化吗？”</p>\n'
            '<p>然而，Unicode 的目标是准确地表示全世界的书写系统（writing systems）。Unicode '
            '协会的目标是“让全世界的人们不论什么语言都可以使用电脑”，所以你可想见，书面语言的多样性是巨大的！迄今为止，Unicode '
            '支持135 种不同的书写系统，包含约 1100 种语言，但目前还有超过 <a '
            'href="http://linguistics.berkeley.edu/sei/">100 '
            '种书写系统没有支持</a>，包括现代的和已成为历史的，Unicode 协会还在努力将其加进来。</p>\n'
            '<p>鉴于分支的多样性，要表示它们必然是一个复杂的项目。Unicode '
            '接受了它的多样，接受了任务（包含所有人类的书写系统）中的内在复杂性，它没有在名字简化上做太多取舍，但是它对需要完善任务的地方的规则，做了异常处理。</p>\n'
            '<p>此外，Unicode 承诺不仅支持单一语言的文本，还支持多种语言共存于一个文本中——引进了更多的复杂性。</p>\n'
            '<p>大多数编程语言都有处理底层文本操作的的库，但是作为程序员，你仍然需要知道一些 Unicode 特性 '
            '，知道何时怎样去应用它。要了解这些东西可能得花些时间动动脑筋，但别灰心——想想有数以亿计的人，如果你的软件支持他们的语言，那他们也可以使用你的软件哒。所以，拥抱复杂吧！</p>\n'
            '<h2>Unicode 编码空间</h2>\n'
            '<p>我们先从几个大的方向入手。Unicode 的基本元素 —— 它的 “字符”，虽然这种叫法不是太贴切——被称作编码点（Code '
            'Point）。编码点通过数字来区分，通常写成 16 进制的形式再加前缀“U+”，例如 <a '
            'href="http://unicode.org/cldr/utility/character.jsp?a=A">U+0041 '
            '表示拉丁字母 “A”</a> 、<a '
            'href="http://unicode.org/cldr/utility/character.jsp?a=%CE%B8">U+03B8 '
            '表示 希腊字母 “θ”</a>。每个编码点都有一个简称，还有一些其他属性，<a '
            'href="http://www.unicode.org/reports/tr44/">Unicode 字符数据库</a> '
            '对此有详细说明。</p>\n'
            '<p>所有编码点组成的集合被称作编码空间（Code Space）。Unicode 编码空间包含 1,114,112 '
            '个编码点。然而，其中只有128,237 个编码点 —— 编码空间的 12% 被赋值，目前。还有很多空间用来增长！Unicode '
            '还保留了另外 137,468 字符 作为 “自用” 空间，这些字符没有标准的含义，可以被个人应用所使用。</p>\n'
            '<h3>空间分配</h3>\n'
            '<p>为了对编码空间的布局有个了解，把它可视化会比较直观。下面是整个编码空间的布局，一个像素代表一个编码点。使用小方块来表示以保证视觉的一致性；每个小方块是 '
            '16×16 = 256 个编码点，每个大方块是一个面有 65536 个 编码点。总共加起来有 17 个面板。</p>\n'
            '<p><img id="pic" class="M_cur_zoom_out" '
            'src="http://wx4.sinaimg.cn/large/63918611gy1ffv3s279ehj20x615e3ye.jpg"></p>\n'
            '<ul>\n'
            '<li>白色表示未用空间；</li>\n'
            '<li>蓝色表示已用空间；</li>\n'
            '<li>绿色表示自用区域；</li>\n'
            '<li>小的红色区域是代理区（surrogates，后面会讲）。</li>\n'
            '</ul>\n'
            '<p>如你所见，被使用的区域分布有点稀疏，但都集中在前三个面里。</p>\n'
            '<p>0 号面板也被称作 “基本多语言面板（Basic Multilingual Plane，简称 BMP）”。BMP '
            '包含现代文本所需的基本所有字符，包括拉丁文、斯拉夫文、希腊文、汉字（中国），日文、朝鲜文、阿拉伯文、希伯来文、梵文（印度）等等。</p>\n'
            '<p>（过去，编码空间只有 BMP 而已—— Unicode 最初设想是 一个 16 Bit 的编码，只包含 65536 '
            '个字符。在 1996 年扩充到现在的规模。然而，绝大多数现代字符属于 BMP。）</p>\n'
            '<p>1 号面板包含历史上的文字，比如苏美尔楔形文字和埃及象形文字，还有 emoji 和其他各种符号。2 '
            '号面板包含一大块不常用的和历史上的汉字字符。剩下的面是空的，除了 14 号面板中有一小部分被用作格式化字符；15-16 '
            '号面板全部保留自用。</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx1.sinaimg.cn/large/63918611gy1ffv530saw0j20zk0k04b3.jpg"></p>\n'
            '<h3>书写系统</h3>\n'
            '<p>让我们放大前三个面板，因为这是最重要的部分：</p>\n'
            '<p>\xa0</p>\n'
            '<p><img id="pic" class="M_cur_zoom_out" '
            'src="http://wx1.sinaimg.cn/large/63918611gy1ffv3s5u04zj21dw0h0jre.jpg" '
            'width="1796" height="612"></p>\n'
            '<p>这张图用颜色表示了 Unicode 中135 种不同的书写系统。你可以看到汉字（蓝色）和朝鲜语（棕色）占了 BMP '
            '很大一部分（右边的大方块）。与之相对，此图中所有的欧洲，中东，南亚语言加起来刚好占了 BMP 的第一行。</p>\n'
            '<p>编码空间的很多区域都和更早的编码兼容或相同。例如，Unicode 的前 128 个字符就是 ASCII '
            '的拷贝。显然是对兼容性很有好处——很容易无损的从小编码转向 Unicode '
            '（反过来也一样，只要没有使用小编码之外的字符）。</p>\n'
            '<h3>使用频率</h3>\n'
            '<p>可视化编码空间还有一个有趣的方法，就是看使用频率的分布——换句话说，就是每个编码点在真实世界中使用的频率。0-2 '
            '号面的热力图是基于来自维基百科 和 推特（所有语言）的大量文本所得。频率增长的方向是黑（没出现）、红、黄、白。</p>\n'
            '<p><img id="pic" class="M_cur_zoom_out" '
            'src="http://wx2.sinaimg.cn/large/63918611gy1ffv3s9a237j21dw0h040p.jpg"></p>\n'
            '<p>你可以看到，绝大多书样本文本都分布在 BMP 中，有些零散的使用来自1-2 号面。最大的异常是 emoji，它点亮了 1 '
            '号面最底下那的几个小方块。</p>\n'
            '<h2>编码</h2>\n'
            '<p>我们知道 Unicode 编码点，通过它们在编码空间中的下标来定义，范围从 U+0000 到 '
            'U+10FFFF。但是在内存或文件中编码点如何用字节表示呢？</p>\n'
            '<p>对计算机友好的最省事方式是用 32 位整数来存储编码点下标。这样做是可行，但是每个字符用 4 '
            '个字节有点浪费。当你处理大量文本的时候，使用 32\xa0位整数存储 Unicode 会占用大量额外存储、内存、带宽等。</p>\n'
            '<p>于是，Unicode 有了几个紧凑的编码 。32\xa0位整数编码被称作 UTF-32（UTF=”Unicode '
            'Transformation '
            'Format”），但是很少被用来存储。顶多作为临时内部表示出现，用来检查或操作字符串中的编码点。</p>\n'
            '<p>最常见的是，你会看到 Unicode 文本被编码为 UTF-8 或 UTF-16。这些都是可变长度编码，分别由 8-bit '
            '或 16-bit 为一个单元组成。这些方案中，下标值较小的编码点占用的字节数也少，会节省不少内存。这样做的代价是处理 '
            'UTF-8/16 需要以编程的方式来处理，会慢一些。</p>\n'
            '<h3>UTF-8</h3>\n'
            '<p>在 UTF-8 中，每个编码点依据下标值，被存储为 1 到 4 个字节。</p>\n'
            '<p>UTF-8 '
            '使用二进制前缀系统，在此系统中每个字符的最高位的几个比特表明它是否是单个字节，多字节序列的开始，或中间字节；剩余的比特连接起来表示编码点的下标。下面的表格展示了UTF-8 '
            '是如何编码的：</p>\n'
            '<table>\n'
            '<thead>\n'
            '<tr>\n'
            '<th>UTF-8 (二进制)</th>\n'
            '<th>编码点 (二进制)</th>\n'
            '<th>范围</th>\n'
            '</tr>\n'
            '</thead>\n'
            '<tbody>\n'
            '<tr>\n'
            '<td>0xxxxxxx</td>\n'
            '<td>xxxxxxx</td>\n'
            '<td>U+0000–U+007F</td>\n'
            '</tr>\n'
            '<tr>\n'
            '<td>110xxxxx 10yyyyyy</td>\n'
            '<td>xxxxxyyyyyy</td>\n'
            '<td>U+0080–U+07FF</td>\n'
            '</tr>\n'
            '<tr>\n'
            '<td>1110xxxx 10yyyyyy 10zzzzzz</td>\n'
            '<td>xxxxyyyyyyzzzzzz</td>\n'
            '<td>U+0800–U+FFFF</td>\n'
            '</tr>\n'
            '<tr>\n'
            '<td>11110xxx 10yyyyyy 10zzzzzz 10wwwwww</td>\n'
            '<td>xxxyyyyyyzzzzzzwwwwww</td>\n'
            '<td>U+10000–U+10FFFF</td>\n'
            '</tr>\n'
            '</tbody>\n'
            '</table>\n'
            '<p>UTF-8 有一个方便的属性，即最开始128 个字符（ASCII字符）被编码为单个字节，所有的非 ASCII 字符被编码为 '
            '128-255。这产生了两个好处。首先，任何已经是 ASCII 编码的字符串和文件无需转换就可以被 UTF-8 '
            '识别。其次，大量的广泛使用的编程惯例——比如 NULL 结尾，分隔符（n,t,’,’,”)等——在 UTF-8 '
            '中也是可用的。ASCII 字节不会出现在非 ASCII 编码点中，所以搜索以 NULL '
            '结尾或分隔符结尾的字符串是可以的。</p>\n'
            '<p>多亏了这个便利，使扩展遗留 ASCII 程序和 API 来处理 UTF-8 字符变得简单。UTF-8 被广泛运用在 '
            'Unix、Linux 和网络世界中，还有许多程序员主张 <a '
            'href="http://utf8everywhere.org/">UTF-8 应该作为任何地方的默认编码</a>。</p>\n'
            '<p>然而，UTF-8 还不能全面替代 ASCII。例如，遍历字符串中的 “字符” 的代码需要解码 UTF-8 '
            '并遍历编码点（或字位簇（grapheme cluster）——后面会讲到），而不是字节。当你测量字符串 “长度” '
            '时，你得考虑是要字节长度，还是编码点长度，还是文本渲染的宽度为单位的长度还是其它长度。</p>\n'
            '<h3>UTF-16</h3>\n'
            '<p>你可能遇到的另一个编码是 UTF-16。它使用 16-bit 字，每个字符被存储为 1 个或 2 个字。</p>\n'
            '<p>和 UTF-8 一样，我们可以用二进制前缀的形式表示 UTF-16 的编码规则：</p>\n'
            '<table>\n'
            '<thead>\n'
            '<tr>\n'
            '<th>UTF-16(二进制)</th>\n'
            '<th>编码点（二进制）</th>\n'
            '<th>范围</th>\n'
            '</tr>\n'
            '</thead>\n'
            '<tbody>\n'
            '<tr>\n'
            '<td>xxxxxxxxxxxxxxxx</td>\n'
            '<td>xxxxxxxxxxxxxxxx</td>\n'
            '<td>U+0000–U+FFFF</td>\n'
            '</tr>\n'
            '<tr>\n'
            '<td>110110xxxxxxxxxx 110111yyyyyyyyyy</td>\n'
            '<td>xxxxxxxxxxyyyyyyyyyy + 0x10000</td>\n'
            '<td>U+10000–U+10FFFF</td>\n'
            '</tr>\n'
            '</tbody>\n'
            '</table>\n'
            '<p>但是，通常人们谈到 UTF-16是因为它涉及到了一个在编码点术语中被称作“代理（surrogate）”的东西。所有在范围 '
            'U+D800-U+DFFF（或在其他范围） 中的编码点，这些和上表中二进制前缀 110110 和 110111 匹配的编码点——是 '
            'UTF-16 中的保留区域，它们自身不表示任何有效的字符。它们仅用于上面 2 个字的编码模式中，被称作“代理对（surrogate '
            'pair）”，代理编码点在任何其他情况下都是非法的！它们不能出现在 UTF-8 和 UTF-32 中。</p>\n'
            '<p>在过去，UTF-16 是1996 年之前的 Unicode 版本的派生物，那时只有 65536 '
            '个编码点。初衷是不应有不同的编码，Unicode 应该是简单的16-bit '
            '字符集。后来，编码空间被扩充用来表示不常用的（仍然重要）的汉字字符，这是 Unicode '
            '设计者之前没计划的。代理区在那时被引进，直说了吧，作为拼凑，允许16-bit 编码访问新的编码点。</p>\n'
            '<p>如今，Javascript 使用 UTF-16 作为其标准的字符串表示：如果你问一个字符串的长度，或遍历它等，结果都以 '
            '16-bit 的字为单位，同时任何 BMP 之外的编码点都用代理对表示。UTF-16 也被微软 WIN32 API 使用；尽管 '
            'Win32 同时支持 8-bit 和 16-bit 字符串，但是 8-bit 版本仍然莫名其妙地不支持 '
            'UTF-8——只支持使用旧编码的代码，像 ANSI。这使得 UTF-16 成为在 Windows 上获得 Unicode '
            '支持的唯一方法。</p>\n'
            '<p>顺便说一下，UTF-16 字符可以大端存储，也可以小端存储。Unicode '
            '在这个问题上没有说明，虽然它确实鼓励一个惯例，即把 <a '
            'href="http://unicode.org/cldr/utility/character.jsp?a=FEFF">U+FEFF '
            '零宽无间断间隔</a>这个字符放到 UTF-16 文件开头作为<a '
            'href="https://en.wikipedia.org/wiki/Byte_order_mark">字节序标识</a>，来消除字节序问题。（如果文件和系统的字节序不同，BOM（ByteOrderMark） '
            '会被解码为 U-FFFE，这不是一个有效的编码点。）</p>\n'
            '<h2>组合标记</h2>\n'
            '<p>目前为止，我们一直在讨论编码点。但是 Unicode 中，字符比单独的编码点更复杂！</p>\n'
            '<p>Unicode '
            '包含一个系统，可以合并多个编码点，动态组合字符。此系统用各种方式增加灵活性，而不引起编码点的巨大组合膨胀。</p>\n'
            '<p>例如，在欧洲语言中，组合标记出现在变音符和字母的使用中。 Unicode '
            '支持各种各样的变音符号，包括尖音符号的和重音符号、元音变音符号、变音符号等等。所有这些变音符可以被使用在任何字母表的字母中。事实上，多个变音符号可以被使用在一个字母上。</p>\n'
            '<p>如果 Unicode '
            '试图为每个字母组合或变音符组合分配一个独立的编码点，事情会变得无法控制。相反，动态组合系统可以让你构造你想要的任何字符，通过以一个基础编码点（字母）开始然后附加额外的编码点，被称作“组合标识”，来指定变音符。当一个文字渲染器看到字符串中有这样的序列时，它会自动堆叠变音符到基础字母的上面或下面来造出一个组合字符。</p>\n'
            '<p>例如，带重音的字符“Á” 会被表示成由两个编码点组成的字符串：<a '
            'href="http://unicode.org/cldr/utility/character.jsp?a=A">U+0041 '
            '“A” 拉丁大写字母 a</a> 加上 <a '
            'href="http://unicode.org/cldr/utility/character.jsp?a=0301">U+0301 '
            '“◌́”组合尖音符号</a>。这个字符串自动被渲染成单个字符：“Á”。</p>\n'
            '<p>如今，Unicode 还包含许多 “预设的” 编码点，每个表示一个被使用过的组合，例如 <a '
            'href="http://unicode.org/cldr/utility/character.jsp?a=%C3%81">U+00C1 '
            '“Á” 带锐音符的拉丁大写字母A </a>或 <a '
            'href="http://unicode.org/cldr/utility/character.jsp?a=%E1%BB%87">U+1EC7 '
            '“ệ” 带扬抑符和下点的小写拉丁字母 e</a>。我怀疑这些大多继承自融入 Unicode '
            '的旧编码，来保证兼容性。实际上，对于欧洲语言中的大多数常见的带变音符号的字母都有预设，所以文本中动态组合用的不多。</p>\n'
            '<p>可是，组合标志系统确实允许任意数量的变音符号被叠加到任何基础字符上。使用归谬法的 <a '
            'href="https://eeemo.net/">Zalgo '
            '文本</a>，它通过随机叠加任意数量的变音符号在每个字母上，让它溢出行距，产生混乱现象。（如下图）</p>\n'
            '<p><img id="pic" class="" '
            'src="http://wx4.sinaimg.cn/large/63918611gy1ffv3scnzygj20jl04b0ts.jpg"></p>\n'
            '<p>Unicode 中出现动态组合字符的其他地区：</p>\n'
            '<ul>\n'
            '<li>阿拉伯文和希伯来文中的<a '
            'href="https://en.wikipedia.org/wiki/Vowel_pointing">元音标记</a> '
            '。这些语言中，单词通常由元音拼写。它们有变音符号标记元音（用在字典，语言教学材料，儿童教材，等地方）。这些变音符号用组合标记表示。</li>\n'
            '<li>\n'
            '<table>\n'
            '<thead>\n'
            '<tr>\n'
            '<th>希伯来文，带注音符号：</th>\n'
            '<th>אֶת דַלְתִּי הֵזִיז הֵנִיעַ, קֶטֶב לִשְׁכַּתִּי יָשׁוֹד</th>\n'
            '</tr>\n'
            '</thead>\n'
            '<tbody>\n'
            '<tr>\n'
            '<td>正常文本（不带注音符号）：</td>\n'
            '<td>את דלתי הזיז הניע, קטב לשכתי ישוד</td>\n'
            '</tr>\n'
            '</tbody>\n'
            '</table>\n'
            '</li>\n'
            '<li><a '
            'href="https://en.wikipedia.org/wiki/Devanagari">天成体（梵文）</a>，这种文字被用在印度北部，梵文和其他南亚语言中，用组合标记标识特定元音的附加到辅音字母上。例如，“ह” '
            '+ “ि” = “हि” (“h” + “i” = “hi”).</li>\n'
            '<li>表示音节的朝鲜字符，但是它被称作<a '
            'href="https://en.wikipedia.org/wiki/Hangul#Letters">Jamo</a> '
            '，用来表示音节中的元音和辅音。当然也有为朝鲜文预制的编码点，同时也可以动态组合它们的 jamo。例如，“ᄒ” + “ᅡ” + '
            '“ᆫ” = “한” (“h” + “a” + “n” = “han”).</li>\n'
            '</ul>\n'
            '<h3>规范等价性</h3>\n'
            '<p>Unicode '
            '中，预设字符和动态组合系统并存。后果就是有多种方法表示同一个字符串——不同编码点序列产生相同用户可感知的字符。例如，我们之前看到的，表示字符 '
            '“Á”，我们可以用一个编码点 U+00C1 ，也可以用两个编码点 U+0041 和U+0301。</p>\n'
            '<p>另一个歧义来源是一个字符中的多个注音符号。当两个注音符号作用在同意个基本字符上面时，注音符号的顺序很重要，例如，都在上面：”ǡ“ '
            '（点然后长音符）和 ”ā̇“ （长音符然后点）是不一样的。 '
            '然而，当音节运用在不同边时，例如。一个在上边一个在下边，编码点的顺序不会影响渲染。此外，一个有多个音节的字符，它可能会由一个预制的编码点再加其余的编码点来表示。</p>\n'
            '<p>例如，越南字母“ệ” 可以用以下五种方式表示：</p>\n'
            '<ul>\n'
            '<li>完全预设：U+1EC7 “ệ”</li>\n'
            '<li>部分预设：U+1EB9 “ẹ” + U+0302 “◌̂”</li>\n'
            '<li>部分预设：U+00EA “ê” + U+0323 “◌̣”</li>\n'
            '<li>完全分解：U+0065 “e” + U+0323 “◌̣” + U+0302 “◌̂”</li>\n'
            '<li>完全分解： U+0065 “e” + U+0302 “◌̂” + U+0323 “◌̣”</li>\n'
            '</ul>\n'
            '<p>Unicode 把这样的字符串集合称作 '
            '“规范等价”字符。在搜索、排序、渲染、文本选择等操作中，规范等价字符应该被同等对待。这影响到了你如何实现文本的操作。例如，假设你的程序有“查找”操作，用户搜索 '
            '“ệ”，理论上应当找到如上所有出现的所有版本的 “ệ”！</p>\n'
            '<h3>形式正规化</h3>\n'
            '<p>要解决如何处理等值字符串的问题，Unicode '
            '定义了几种正规形式：是几种把字符串转化成规范形式的方法，这样它们就可以被逐点比较（或按字节比较）。</p>\n'
            '<p>“NFD” '
            '正规化方法，完全分解每个字符到基本部件和组合标记，去掉字符串中任何预制的编码点。还会按渲染位置排列每个组合标记，举个例子，在字母底下的注音符号要比在上边的靠前。（不会重排有相同渲染位置的注音符号，因为它们的位置关系是可视的，前面提到过。）</p>\n'
            '<p>“NFC” '
            '正规化方法，反过来，尽可能的把编码点替换成预制编码点。如果使用了不常用的注音符号组合，可能不会有任何预制的编码点，这种情况下 '
            'NFC 仍然替换它可以替换的，然后留下组合标志（和 NFD一样，还是会按渲染顺序重新排序）。</p>\n'
            '<p>还有一些方法被称作 NFKD 和NFKC。 这里的 “K” '
            '指的是兼容性分解，它包含了某种程度上“相似”但是视觉上不同的字符。但我不打算讲这些。</p>\n'
            '<h3>字位簇</h3>\n'
            '<p>如上所见，Unicode 包含多种情况，用户认为的一个“字符” 事实上底下可能由多个编码点组成。Unicode '
            '使用「字位簇」的概念来表示这种情况。一个由一个或多个编码点组成的字符串构成一个 “用户感知的字符”。</p>\n'
            '<p><a href="http://www.unicode.org/reports/tr29/">UAX #29</a> '
            '为字位丛定义了精确的规则。它大约是 “一个基本的编码点接着任意数量的组合标记”，但是真实的定义有点复杂；它包含了朝鲜语字母，和 '
            'emoji ZWJ 序列。</p>\n'
            '<p>字位簇主要被用在文本编辑：它们对光标和文本选择来说是最明显的单元。使用字位簇，确保在复制和粘贴文本时不会突然丢掉一些符号，同时左右方向键也总是以一个可见字符的距离移动，等等。</p>\n'
            '<p>另一个用到字位簇的地方是，执行字符串长度限制——比如在数据库域中。其实，底层的限制可能是类似 UTF-8 '
            '中的字节长度之类的东西，你不能简单的通过截断字节的方式来限制长度。至少，你得 “舍去” '
            '最近的编码点；但更好的是，舍去最近的字位簇。除此以外，你可以通过舍弃它的一个注音符号破坏一个字符，中断一个 jamo 序列或 '
            'ZWJ 序列。</p>\n'
            '<h2>更多···</h2>\n'
            '<p>从程序员的角度来看，关于 Unicode '
            '还有很多东西可以讲！我还没有深入一些有趣的主题，比如映射、排序、兼容性分解和容易混淆的词，Unicode '
            '正则表达式，和双向文本。还有个我没谈到的是实现主题——如何有效存储和查找分布稀疏的编码点数据，或着如何优化 UTF-8 '
            '解码、字符串比较和NFC 标准化。也许我会在未来的文章中讲到这些。</p>\n'
            '<p>Unicode '
            '是个令人着迷的复杂系统。在字节和编码点之前有多对一的映射，除此之外编码点和“字符”之间也有（某些情况下多对多）多对一的映射关系。在每个角落都有古怪的特例。没人声称表示全部书写系统很容易，但很明显我们不会回到使用不兼容编码来拼凑的艰难岁月了。</p>\n'
            '\r\n'
            '        \r\n'
            '            <blockquote class="rewards">\n'
            '        <p><strong>打赏支持我翻译更多好文章，谢谢！</strong></p>\n'
            '        <a href="#rewardbox" id="rewards-button" '
            'class="fancybox"><span class="btn-bluet-blue href-style"><i '
            'class="fa fa-jpy"></i> 打赏译者</span></a>\n'
            '    </blockquote>\n'
            '\n'
            '    <div id="rewardbox">\n'
            '        <h4>打赏支持我翻译更多好文章，谢谢！</h4>\n'
            '                <p>\n'
            '                        <img '
            'src="http://jbcdn2.b0.upaiyun.com/2016/11/4ec823de9f4637cdb4ee2f4b27a0aba9.png">\n'
            '            \n'
            '                    </p>\n'
            '    </div>\n'
            '\n'
            '    \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="111261" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="111261votetotal">3</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="111261" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 12 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/daofazi">逆旅</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/daofazi">\r\n'
            '\t\t\t<img '
            'src="http://jbcdn2.b0.upaiyun.com/2016/08/a84a2baaaa98a48bb36349cd6431bcb3.jpg">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            "            a programmer,Do one's level best and leave the rest "
            "to God's will.I love this saying.        </span>\r\n"
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/daofazi" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/daofazi/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/daofazi/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 15</a>        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2017, 6, 4),
 'front_image_url': ['http://wx1.sinaimg.cn/large/63918611gy1ffv530saw0j20zk0k04b3.jpg'],
 'tags': 'IT技术,Unicode',
 'thumb_up_num': 3,
 'title': '写给程序员的 Unicode 入门介绍',
 'url': 'http://blog.jobbole.com/111261/',
 'url_obj_id': 'e2f9b017ee6039fdacf6194ecc51a729'}
Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 572, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 439, in connect
    sock = self._connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 464, in _connect
    socket.SOCK_STREAM):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/socket.py", line 733, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 8] nodename nor servname provided, or not known

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/twisted/internet/defer.py", line 653, in _runCallbacks
    current.result = callback(current.result, *args, **kw)
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/pipelines.py", line 126, in process_item
    item.save_to_es()
  File "/Users/leo/Documents/WorkSpace/Python/JobboleSpider/JobboleSpider/items.py", line 150, in save_to_es
    redis_client.incr("jobbole_count")
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 915, in incr
    return self.execute_command('INCRBY', name, amount)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/client.py", line 578, in execute_command
    connection.send_command(*args)
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 563, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 538, in send_packed_command
    self.connect()
  File "/Users/leo/.pyenv/versions/3.5.3/lib/python3.5/site-packages/redis/connection.py", line 442, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 8 connecting to lcoalhost:6379. nodename nor servname provided, or not known.
2017-06-04 21:38:48 [scrapy.core.engine] INFO: Closing spider (finished)
2017-06-04 21:38:48 [scrapy.statscollectors] INFO: Dumping Scrapy stats:
{'downloader/request_bytes': 5544,
 'downloader/request_count': 21,
 'downloader/request_method_count/GET': 21,
 'downloader/response_bytes': 512388,
 'downloader/response_count': 21,
 'downloader/response_status_count/200': 21,
 'dupefilter/filtered': 1,
 'finish_reason': 'finished',
 'finish_time': datetime.datetime(2017, 6, 4, 13, 38, 48, 526613),
 'log_count/DEBUG': 264,
 'log_count/ERROR': 20,
 'log_count/INFO': 68,
 'memusage/max': 72335360,
 'memusage/startup': 63885312,
 'request_depth_max': 1,
 'response_received_count': 21,
 'scheduler/dequeued': 21,
 'scheduler/dequeued/memory': 21,
 'scheduler/enqueued': 21,
 'scheduler/enqueued/memory': 21,
 'start_time': datetime.datetime(2017, 6, 4, 13, 37, 34, 65284)}
2017-06-04 21:38:48 [scrapy.core.engine] INFO: Spider closed (finished)
